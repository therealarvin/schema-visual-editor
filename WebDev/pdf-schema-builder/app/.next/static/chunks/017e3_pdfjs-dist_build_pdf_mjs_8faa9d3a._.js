(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([typeof document === "object" ? document.currentScript : undefined, {

"[project]/node_modules/react-pdf/node_modules/pdfjs-dist/build/pdf.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

/**
 * @licstart The following is the entire license notice for the
 * JavaScript code in this page
 *
 * Copyright 2024 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @licend The above is the entire license notice for the
 * JavaScript code in this page
 */ /**
 * pdfjsVersion = 5.3.31
 * pdfjsBuild = 47ad820d9
 */ __turbopack_context__.s({
    "AbortException": ()=>AbortException,
    "AnnotationEditorLayer": ()=>AnnotationEditorLayer,
    "AnnotationEditorParamsType": ()=>AnnotationEditorParamsType,
    "AnnotationEditorType": ()=>AnnotationEditorType,
    "AnnotationEditorUIManager": ()=>AnnotationEditorUIManager,
    "AnnotationLayer": ()=>AnnotationLayer,
    "AnnotationMode": ()=>AnnotationMode,
    "AnnotationType": ()=>AnnotationType,
    "ColorPicker": ()=>ColorPicker,
    "DOMSVGFactory": ()=>DOMSVGFactory,
    "DrawLayer": ()=>DrawLayer,
    "FeatureTest": ()=>util_FeatureTest,
    "GlobalWorkerOptions": ()=>GlobalWorkerOptions,
    "ImageKind": ()=>util_ImageKind,
    "InvalidPDFException": ()=>InvalidPDFException,
    "MathClamp": ()=>MathClamp,
    "OPS": ()=>OPS,
    "OutputScale": ()=>OutputScale,
    "PDFDataRangeTransport": ()=>PDFDataRangeTransport,
    "PDFDateString": ()=>PDFDateString,
    "PDFWorker": ()=>PDFWorker,
    "PasswordResponses": ()=>PasswordResponses,
    "PermissionFlag": ()=>PermissionFlag,
    "PixelsPerInch": ()=>PixelsPerInch,
    "RenderingCancelledException": ()=>RenderingCancelledException,
    "ResponseException": ()=>ResponseException,
    "SignatureExtractor": ()=>SignatureExtractor,
    "SupportedImageMimeTypes": ()=>SupportedImageMimeTypes,
    "TextLayer": ()=>TextLayer,
    "TouchManager": ()=>TouchManager,
    "Util": ()=>Util,
    "VerbosityLevel": ()=>VerbosityLevel,
    "XfaLayer": ()=>XfaLayer,
    "build": ()=>build,
    "createValidAbsoluteUrl": ()=>createValidAbsoluteUrl,
    "fetchData": ()=>fetchData,
    "getDocument": ()=>getDocument,
    "getFilenameFromUrl": ()=>getFilenameFromUrl,
    "getPdfFilenameFromUrl": ()=>getPdfFilenameFromUrl,
    "getUuid": ()=>getUuid,
    "getXfaPageViewport": ()=>getXfaPageViewport,
    "isDataScheme": ()=>isDataScheme,
    "isPdfFile": ()=>isPdfFile,
    "isValidExplicitDest": ()=>isValidExplicitDest,
    "noContextMenu": ()=>noContextMenu,
    "normalizeUnicode": ()=>normalizeUnicode,
    "setLayerDimensions": ()=>setLayerDimensions,
    "shadow": ()=>shadow,
    "stopEvent": ()=>stopEvent,
    "updateUrlHash": ()=>updateUrlHash,
    "version": ()=>version
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_class_private_field_get.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_class_private_field_init.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_class_private_field_set.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_update$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_class_private_field_update.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_class_private_method_get.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_class_private_method_init.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_class_static_private_field_spec_get.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_class_static_private_field_spec_set.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_update$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_class_static_private_field_update.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_define_property.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_destructure$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_class_private_field_destructure.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@swc/helpers/esm/_class_static_private_method_get.js [app-client] (ecmascript)");
const __TURBOPACK__import$2e$meta__ = {
    get url () {
        return `file://${__turbopack_context__.P("node_modules/react-pdf/node_modules/pdfjs-dist/build/pdf.mjs")}`;
    }
};
;
;
;
;
;
;
;
;
;
;
;
;
; // ./src/shared/util.js
const isNodeJS = typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] === "object" && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] + "" === "[object process]" && !__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].versions.nw && !(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].versions.electron && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].type && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].type !== "browser");
const FONT_IDENTITY_MATRIX = [
    0.001,
    0,
    0,
    0.001,
    0,
    0
];
const LINE_FACTOR = 1.35;
const LINE_DESCENT_FACTOR = 0.35;
const BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;
const RenderingIntentFlag = {
    ANY: 0x01,
    DISPLAY: 0x02,
    PRINT: 0x04,
    SAVE: 0x08,
    ANNOTATIONS_FORMS: 0x10,
    ANNOTATIONS_STORAGE: 0x20,
    ANNOTATIONS_DISABLE: 0x40,
    IS_EDITING: 0x80,
    OPLIST: 0x100
};
const AnnotationMode = {
    DISABLE: 0,
    ENABLE: 1,
    ENABLE_FORMS: 2,
    ENABLE_STORAGE: 3
};
const AnnotationEditorPrefix = "pdfjs_internal_editor_";
const AnnotationEditorType = {
    DISABLE: -1,
    NONE: 0,
    FREETEXT: 3,
    HIGHLIGHT: 9,
    STAMP: 13,
    INK: 15,
    SIGNATURE: 101
};
const AnnotationEditorParamsType = {
    RESIZE: 1,
    CREATE: 2,
    FREETEXT_SIZE: 11,
    FREETEXT_COLOR: 12,
    FREETEXT_OPACITY: 13,
    INK_COLOR: 21,
    INK_THICKNESS: 22,
    INK_OPACITY: 23,
    HIGHLIGHT_COLOR: 31,
    HIGHLIGHT_DEFAULT_COLOR: 32,
    HIGHLIGHT_THICKNESS: 33,
    HIGHLIGHT_FREE: 34,
    HIGHLIGHT_SHOW_ALL: 35,
    DRAW_STEP: 41
};
const PermissionFlag = {
    PRINT: 0x04,
    MODIFY_CONTENTS: 0x08,
    COPY: 0x10,
    MODIFY_ANNOTATIONS: 0x20,
    FILL_INTERACTIVE_FORMS: 0x100,
    COPY_FOR_ACCESSIBILITY: 0x200,
    ASSEMBLE: 0x400,
    PRINT_HIGH_QUALITY: 0x800
};
const TextRenderingMode = {
    FILL: 0,
    STROKE: 1,
    FILL_STROKE: 2,
    INVISIBLE: 3,
    FILL_ADD_TO_PATH: 4,
    STROKE_ADD_TO_PATH: 5,
    FILL_STROKE_ADD_TO_PATH: 6,
    ADD_TO_PATH: 7,
    FILL_STROKE_MASK: 3,
    ADD_TO_PATH_FLAG: 4
};
const util_ImageKind = {
    GRAYSCALE_1BPP: 1,
    RGB_24BPP: 2,
    RGBA_32BPP: 3
};
const AnnotationType = {
    TEXT: 1,
    LINK: 2,
    FREETEXT: 3,
    LINE: 4,
    SQUARE: 5,
    CIRCLE: 6,
    POLYGON: 7,
    POLYLINE: 8,
    HIGHLIGHT: 9,
    UNDERLINE: 10,
    SQUIGGLY: 11,
    STRIKEOUT: 12,
    STAMP: 13,
    CARET: 14,
    INK: 15,
    POPUP: 16,
    FILEATTACHMENT: 17,
    SOUND: 18,
    MOVIE: 19,
    WIDGET: 20,
    SCREEN: 21,
    PRINTERMARK: 22,
    TRAPNET: 23,
    WATERMARK: 24,
    THREED: 25,
    REDACT: 26
};
const AnnotationReplyType = {
    GROUP: "Group",
    REPLY: "R"
};
const AnnotationFlag = {
    INVISIBLE: 0x01,
    HIDDEN: 0x02,
    PRINT: 0x04,
    NOZOOM: 0x08,
    NOROTATE: 0x10,
    NOVIEW: 0x20,
    READONLY: 0x40,
    LOCKED: 0x80,
    TOGGLENOVIEW: 0x100,
    LOCKEDCONTENTS: 0x200
};
const AnnotationFieldFlag = {
    READONLY: 0x0000001,
    REQUIRED: 0x0000002,
    NOEXPORT: 0x0000004,
    MULTILINE: 0x0001000,
    PASSWORD: 0x0002000,
    NOTOGGLETOOFF: 0x0004000,
    RADIO: 0x0008000,
    PUSHBUTTON: 0x0010000,
    COMBO: 0x0020000,
    EDIT: 0x0040000,
    SORT: 0x0080000,
    FILESELECT: 0x0100000,
    MULTISELECT: 0x0200000,
    DONOTSPELLCHECK: 0x0400000,
    DONOTSCROLL: 0x0800000,
    COMB: 0x1000000,
    RICHTEXT: 0x2000000,
    RADIOSINUNISON: 0x2000000,
    COMMITONSELCHANGE: 0x4000000
};
const AnnotationBorderStyleType = {
    SOLID: 1,
    DASHED: 2,
    BEVELED: 3,
    INSET: 4,
    UNDERLINE: 5
};
const AnnotationActionEventType = {
    E: "Mouse Enter",
    X: "Mouse Exit",
    D: "Mouse Down",
    U: "Mouse Up",
    Fo: "Focus",
    Bl: "Blur",
    PO: "PageOpen",
    PC: "PageClose",
    PV: "PageVisible",
    PI: "PageInvisible",
    K: "Keystroke",
    F: "Format",
    V: "Validate",
    C: "Calculate"
};
const DocumentActionEventType = {
    WC: "WillClose",
    WS: "WillSave",
    DS: "DidSave",
    WP: "WillPrint",
    DP: "DidPrint"
};
const PageActionEventType = {
    O: "PageOpen",
    C: "PageClose"
};
const VerbosityLevel = {
    ERRORS: 0,
    WARNINGS: 1,
    INFOS: 5
};
const OPS = {
    dependency: 1,
    setLineWidth: 2,
    setLineCap: 3,
    setLineJoin: 4,
    setMiterLimit: 5,
    setDash: 6,
    setRenderingIntent: 7,
    setFlatness: 8,
    setGState: 9,
    save: 10,
    restore: 11,
    transform: 12,
    moveTo: 13,
    lineTo: 14,
    curveTo: 15,
    curveTo2: 16,
    curveTo3: 17,
    closePath: 18,
    rectangle: 19,
    stroke: 20,
    closeStroke: 21,
    fill: 22,
    eoFill: 23,
    fillStroke: 24,
    eoFillStroke: 25,
    closeFillStroke: 26,
    closeEOFillStroke: 27,
    endPath: 28,
    clip: 29,
    eoClip: 30,
    beginText: 31,
    endText: 32,
    setCharSpacing: 33,
    setWordSpacing: 34,
    setHScale: 35,
    setLeading: 36,
    setFont: 37,
    setTextRenderingMode: 38,
    setTextRise: 39,
    moveText: 40,
    setLeadingMoveText: 41,
    setTextMatrix: 42,
    nextLine: 43,
    showText: 44,
    showSpacedText: 45,
    nextLineShowText: 46,
    nextLineSetSpacingShowText: 47,
    setCharWidth: 48,
    setCharWidthAndBounds: 49,
    setStrokeColorSpace: 50,
    setFillColorSpace: 51,
    setStrokeColor: 52,
    setStrokeColorN: 53,
    setFillColor: 54,
    setFillColorN: 55,
    setStrokeGray: 56,
    setFillGray: 57,
    setStrokeRGBColor: 58,
    setFillRGBColor: 59,
    setStrokeCMYKColor: 60,
    setFillCMYKColor: 61,
    shadingFill: 62,
    beginInlineImage: 63,
    beginImageData: 64,
    endInlineImage: 65,
    paintXObject: 66,
    markPoint: 67,
    markPointProps: 68,
    beginMarkedContent: 69,
    beginMarkedContentProps: 70,
    endMarkedContent: 71,
    beginCompat: 72,
    endCompat: 73,
    paintFormXObjectBegin: 74,
    paintFormXObjectEnd: 75,
    beginGroup: 76,
    endGroup: 77,
    beginAnnotation: 80,
    endAnnotation: 81,
    paintImageMaskXObject: 83,
    paintImageMaskXObjectGroup: 84,
    paintImageXObject: 85,
    paintInlineImageXObject: 86,
    paintInlineImageXObjectGroup: 87,
    paintImageXObjectRepeat: 88,
    paintImageMaskXObjectRepeat: 89,
    paintSolidColorImageMask: 90,
    constructPath: 91,
    setStrokeTransparent: 92,
    setFillTransparent: 93,
    rawFillPath: 94
};
const DrawOPS = {
    moveTo: 0,
    lineTo: 1,
    curveTo: 2,
    closePath: 3
};
const PasswordResponses = {
    NEED_PASSWORD: 1,
    INCORRECT_PASSWORD: 2
};
let verbosity = VerbosityLevel.WARNINGS;
function setVerbosityLevel(level) {
    if (Number.isInteger(level)) {
        verbosity = level;
    }
}
function getVerbosityLevel() {
    return verbosity;
}
function info(msg) {
    if (verbosity >= VerbosityLevel.INFOS) {
        console.log("Info: ".concat(msg));
    }
}
function warn(msg) {
    if (verbosity >= VerbosityLevel.WARNINGS) {
        console.log("Warning: ".concat(msg));
    }
}
function unreachable(msg) {
    throw new Error(msg);
}
function assert(cond, msg) {
    if (!cond) {
        unreachable(msg);
    }
}
function _isValidProtocol(url) {
    switch(url === null || url === void 0 ? void 0 : url.protocol){
        case "http:":
        case "https:":
        case "ftp:":
        case "mailto:":
        case "tel:":
            return true;
        default:
            return false;
    }
}
function createValidAbsoluteUrl(url) {
    let baseUrl = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
    if (!url) {
        return null;
    }
    if (options && typeof url === "string") {
        if (options.addDefaultProtocol && url.startsWith("www.")) {
            const dots = url.match(/\./g);
            if ((dots === null || dots === void 0 ? void 0 : dots.length) >= 2) {
                url = "http://".concat(url);
            }
        }
        if (options.tryConvertEncoding) {
            try {
                url = stringToUTF8String(url);
            } catch (e) {}
        }
    }
    const absoluteUrl = baseUrl ? URL.parse(url, baseUrl) : URL.parse(url);
    return _isValidProtocol(absoluteUrl) ? absoluteUrl : null;
}
function updateUrlHash(url, hash) {
    let allowRel = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
    const res = URL.parse(url);
    if (res) {
        res.hash = hash;
        return res.href;
    }
    if (allowRel && createValidAbsoluteUrl(url, "http://example.com")) {
        return url.split("#", 1)[0] + "".concat(hash ? "#".concat(hash) : "");
    }
    return "";
}
function shadow(obj, prop, value) {
    let nonSerializable = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
    Object.defineProperty(obj, prop, {
        value,
        enumerable: !nonSerializable,
        configurable: true,
        writable: false
    });
    return value;
}
const BaseException = function BaseExceptionClosure() {
    function BaseException(message, name) {
        this.message = message;
        this.name = name;
    }
    BaseException.prototype = new Error();
    BaseException.constructor = BaseException;
    return BaseException;
}();
class PasswordException extends BaseException {
    constructor(msg, code){
        super(msg, "PasswordException");
        this.code = code;
    }
}
class UnknownErrorException extends BaseException {
    constructor(msg, details){
        super(msg, "UnknownErrorException");
        this.details = details;
    }
}
class InvalidPDFException extends BaseException {
    constructor(msg){
        super(msg, "InvalidPDFException");
    }
}
class ResponseException extends BaseException {
    constructor(msg, status, missing){
        super(msg, "ResponseException");
        this.status = status;
        this.missing = missing;
    }
}
class FormatError extends BaseException {
    constructor(msg){
        super(msg, "FormatError");
    }
}
class AbortException extends BaseException {
    constructor(msg){
        super(msg, "AbortException");
    }
}
function bytesToString(bytes) {
    if (typeof bytes !== "object" || (bytes === null || bytes === void 0 ? void 0 : bytes.length) === undefined) {
        unreachable("Invalid argument for bytesToString");
    }
    const length = bytes.length;
    const MAX_ARGUMENT_COUNT = 8192;
    if (length < MAX_ARGUMENT_COUNT) {
        return String.fromCharCode.apply(null, bytes);
    }
    const strBuf = [];
    for(let i = 0; i < length; i += MAX_ARGUMENT_COUNT){
        const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);
        const chunk = bytes.subarray(i, chunkEnd);
        strBuf.push(String.fromCharCode.apply(null, chunk));
    }
    return strBuf.join("");
}
function stringToBytes(str) {
    if (typeof str !== "string") {
        unreachable("Invalid argument for stringToBytes");
    }
    const length = str.length;
    const bytes = new Uint8Array(length);
    for(let i = 0; i < length; ++i){
        bytes[i] = str.charCodeAt(i) & 0xff;
    }
    return bytes;
}
function string32(value) {
    return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);
}
function objectSize(obj) {
    return Object.keys(obj).length;
}
function isLittleEndian() {
    const buffer8 = new Uint8Array(4);
    buffer8[0] = 1;
    const view32 = new Uint32Array(buffer8.buffer, 0, 1);
    return view32[0] === 1;
}
function isEvalSupported() {
    try {
        new Function("");
        return true;
    } catch (e) {
        return false;
    }
}
class util_FeatureTest {
    static get isLittleEndian() {
        return shadow(this, "isLittleEndian", isLittleEndian());
    }
    static get isEvalSupported() {
        return shadow(this, "isEvalSupported", isEvalSupported());
    }
    static get isOffscreenCanvasSupported() {
        return shadow(this, "isOffscreenCanvasSupported", typeof OffscreenCanvas !== "undefined");
    }
    static get isImageDecoderSupported() {
        return shadow(this, "isImageDecoderSupported", typeof ImageDecoder !== "undefined");
    }
    static get platform() {
        const { platform, userAgent } = navigator;
        return shadow(this, "platform", {
            isAndroid: userAgent.includes("Android"),
            isLinux: platform.includes("Linux"),
            isMac: platform.includes("Mac"),
            isWindows: platform.includes("Win"),
            isFirefox: userAgent.includes("Firefox")
        });
    }
    static get isCSSRoundSupported() {
        var _globalThis_CSS_supports, _globalThis_CSS;
        return shadow(this, "isCSSRoundSupported", (_globalThis_CSS = globalThis.CSS) === null || _globalThis_CSS === void 0 ? void 0 : (_globalThis_CSS_supports = _globalThis_CSS.supports) === null || _globalThis_CSS_supports === void 0 ? void 0 : _globalThis_CSS_supports.call(_globalThis_CSS, "width: round(1.5px, 1px)"));
    }
}
const hexNumbers = Array.from(Array(256).keys(), (n)=>n.toString(16).padStart(2, "0"));
class Util {
    static makeHexColor(r, g, b) {
        return "#".concat(hexNumbers[r]).concat(hexNumbers[g]).concat(hexNumbers[b]);
    }
    static scaleMinMax(transform, minMax) {
        let temp;
        if (transform[0]) {
            if (transform[0] < 0) {
                temp = minMax[0];
                minMax[0] = minMax[2];
                minMax[2] = temp;
            }
            minMax[0] *= transform[0];
            minMax[2] *= transform[0];
            if (transform[3] < 0) {
                temp = minMax[1];
                minMax[1] = minMax[3];
                minMax[3] = temp;
            }
            minMax[1] *= transform[3];
            minMax[3] *= transform[3];
        } else {
            temp = minMax[0];
            minMax[0] = minMax[1];
            minMax[1] = temp;
            temp = minMax[2];
            minMax[2] = minMax[3];
            minMax[3] = temp;
            if (transform[1] < 0) {
                temp = minMax[1];
                minMax[1] = minMax[3];
                minMax[3] = temp;
            }
            minMax[1] *= transform[1];
            minMax[3] *= transform[1];
            if (transform[2] < 0) {
                temp = minMax[0];
                minMax[0] = minMax[2];
                minMax[2] = temp;
            }
            minMax[0] *= transform[2];
            minMax[2] *= transform[2];
        }
        minMax[0] += transform[4];
        minMax[1] += transform[5];
        minMax[2] += transform[4];
        minMax[3] += transform[5];
    }
    static transform(m1, m2) {
        return [
            m1[0] * m2[0] + m1[2] * m2[1],
            m1[1] * m2[0] + m1[3] * m2[1],
            m1[0] * m2[2] + m1[2] * m2[3],
            m1[1] * m2[2] + m1[3] * m2[3],
            m1[0] * m2[4] + m1[2] * m2[5] + m1[4],
            m1[1] * m2[4] + m1[3] * m2[5] + m1[5]
        ];
    }
    static applyTransform(p, m) {
        let pos = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
        const p0 = p[pos];
        const p1 = p[pos + 1];
        p[pos] = p0 * m[0] + p1 * m[2] + m[4];
        p[pos + 1] = p0 * m[1] + p1 * m[3] + m[5];
    }
    static applyTransformToBezier(p, transform) {
        let pos = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
        const m0 = transform[0];
        const m1 = transform[1];
        const m2 = transform[2];
        const m3 = transform[3];
        const m4 = transform[4];
        const m5 = transform[5];
        for(let i = 0; i < 6; i += 2){
            const pI = p[pos + i];
            const pI1 = p[pos + i + 1];
            p[pos + i] = pI * m0 + pI1 * m2 + m4;
            p[pos + i + 1] = pI * m1 + pI1 * m3 + m5;
        }
    }
    static applyInverseTransform(p, m) {
        const p0 = p[0];
        const p1 = p[1];
        const d = m[0] * m[3] - m[1] * m[2];
        p[0] = (p0 * m[3] - p1 * m[2] + m[2] * m[5] - m[4] * m[3]) / d;
        p[1] = (-p0 * m[1] + p1 * m[0] + m[4] * m[1] - m[5] * m[0]) / d;
    }
    static axialAlignedBoundingBox(rect, transform, output) {
        const m0 = transform[0];
        const m1 = transform[1];
        const m2 = transform[2];
        const m3 = transform[3];
        const m4 = transform[4];
        const m5 = transform[5];
        const r0 = rect[0];
        const r1 = rect[1];
        const r2 = rect[2];
        const r3 = rect[3];
        let a0 = m0 * r0 + m4;
        let a2 = a0;
        let a1 = m0 * r2 + m4;
        let a3 = a1;
        let b0 = m3 * r1 + m5;
        let b2 = b0;
        let b1 = m3 * r3 + m5;
        let b3 = b1;
        if (m1 !== 0 || m2 !== 0) {
            const m1r0 = m1 * r0;
            const m1r2 = m1 * r2;
            const m2r1 = m2 * r1;
            const m2r3 = m2 * r3;
            a0 += m2r1;
            a3 += m2r1;
            a1 += m2r3;
            a2 += m2r3;
            b0 += m1r0;
            b3 += m1r0;
            b1 += m1r2;
            b2 += m1r2;
        }
        output[0] = Math.min(output[0], a0, a1, a2, a3);
        output[1] = Math.min(output[1], b0, b1, b2, b3);
        output[2] = Math.max(output[2], a0, a1, a2, a3);
        output[3] = Math.max(output[3], b0, b1, b2, b3);
    }
    static inverseTransform(m) {
        const d = m[0] * m[3] - m[1] * m[2];
        return [
            m[3] / d,
            -m[1] / d,
            -m[2] / d,
            m[0] / d,
            (m[2] * m[5] - m[4] * m[3]) / d,
            (m[4] * m[1] - m[5] * m[0]) / d
        ];
    }
    static singularValueDecompose2dScale(matrix, output) {
        const m0 = matrix[0];
        const m1 = matrix[1];
        const m2 = matrix[2];
        const m3 = matrix[3];
        const a = m0 ** 2 + m1 ** 2;
        const b = m0 * m2 + m1 * m3;
        const c = m2 ** 2 + m3 ** 2;
        const first = (a + c) / 2;
        const second = Math.sqrt(first ** 2 - (a * c - b ** 2));
        output[0] = Math.sqrt(first + second || 1);
        output[1] = Math.sqrt(first - second || 1);
    }
    static normalizeRect(rect) {
        const r = rect.slice(0);
        if (rect[0] > rect[2]) {
            r[0] = rect[2];
            r[2] = rect[0];
        }
        if (rect[1] > rect[3]) {
            r[1] = rect[3];
            r[3] = rect[1];
        }
        return r;
    }
    static intersect(rect1, rect2) {
        const xLow = Math.max(Math.min(rect1[0], rect1[2]), Math.min(rect2[0], rect2[2]));
        const xHigh = Math.min(Math.max(rect1[0], rect1[2]), Math.max(rect2[0], rect2[2]));
        if (xLow > xHigh) {
            return null;
        }
        const yLow = Math.max(Math.min(rect1[1], rect1[3]), Math.min(rect2[1], rect2[3]));
        const yHigh = Math.min(Math.max(rect1[1], rect1[3]), Math.max(rect2[1], rect2[3]));
        if (yLow > yHigh) {
            return null;
        }
        return [
            xLow,
            yLow,
            xHigh,
            yHigh
        ];
    }
    static pointBoundingBox(x, y, minMax) {
        minMax[0] = Math.min(minMax[0], x);
        minMax[1] = Math.min(minMax[1], y);
        minMax[2] = Math.max(minMax[2], x);
        minMax[3] = Math.max(minMax[3], y);
    }
    static rectBoundingBox(x0, y0, x1, y1, minMax) {
        minMax[0] = Math.min(minMax[0], x0, x1);
        minMax[1] = Math.min(minMax[1], y0, y1);
        minMax[2] = Math.max(minMax[2], x0, x1);
        minMax[3] = Math.max(minMax[3], y0, y1);
    }
    static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3, minMax) {
        minMax[0] = Math.min(minMax[0], x0, x3);
        minMax[1] = Math.min(minMax[1], y0, y3);
        minMax[2] = Math.max(minMax[2], x0, x3);
        minMax[3] = Math.max(minMax[3], y0, y3);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, Util, getExtremum).call(Util, x0, x1, x2, x3, y0, y1, y2, y3, 3 * (-x0 + 3 * (x1 - x2) + x3), 6 * (x0 - 2 * x1 + x2), 3 * (x1 - x0), minMax);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, Util, getExtremum).call(Util, x0, x1, x2, x3, y0, y1, y2, y3, 3 * (-y0 + 3 * (y1 - y2) + y3), 6 * (y0 - 2 * y1 + y2), 3 * (y1 - y0), minMax);
    }
}
function getExtremumOnCurve(x0, x1, x2, x3, y0, y1, y2, y3, t, minMax) {
    if (t <= 0 || t >= 1) {
        return;
    }
    const mt = 1 - t;
    const tt = t * t;
    const ttt = tt * t;
    const x = mt * (mt * (mt * x0 + 3 * t * x1) + 3 * tt * x2) + ttt * x3;
    const y = mt * (mt * (mt * y0 + 3 * t * y1) + 3 * tt * y2) + ttt * y3;
    minMax[0] = Math.min(minMax[0], x);
    minMax[1] = Math.min(minMax[1], y);
    minMax[2] = Math.max(minMax[2], x);
    minMax[3] = Math.max(minMax[3], y);
}
function getExtremum(x0, x1, x2, x3, y0, y1, y2, y3, a, b, c, minMax) {
    if (Math.abs(a) < 1e-12) {
        if (Math.abs(b) >= 1e-12) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, Util, getExtremumOnCurve).call(Util, x0, x1, x2, x3, y0, y1, y2, y3, -c / b, minMax);
        }
        return;
    }
    const delta = b ** 2 - 4 * c * a;
    if (delta < 0) {
        return;
    }
    const sqrtDelta = Math.sqrt(delta);
    const a2 = 2 * a;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, Util, getExtremumOnCurve).call(Util, x0, x1, x2, x3, y0, y1, y2, y3, (-b + sqrtDelta) / a2, minMax);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, Util, getExtremumOnCurve).call(Util, x0, x1, x2, x3, y0, y1, y2, y3, (-b - sqrtDelta) / a2, minMax);
}
const PDFStringTranslateTable = /* unused pure expression or super */ null && [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0x2d8,
    0x2c7,
    0x2c6,
    0x2d9,
    0x2dd,
    0x2db,
    0x2da,
    0x2dc,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0x2022,
    0x2020,
    0x2021,
    0x2026,
    0x2014,
    0x2013,
    0x192,
    0x2044,
    0x2039,
    0x203a,
    0x2212,
    0x2030,
    0x201e,
    0x201c,
    0x201d,
    0x2018,
    0x2019,
    0x201a,
    0x2122,
    0xfb01,
    0xfb02,
    0x141,
    0x152,
    0x160,
    0x178,
    0x17d,
    0x131,
    0x142,
    0x153,
    0x161,
    0x17e,
    0,
    0x20ac
];
function stringToPDFString(str) {
    let keepEscapeSequence = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    if (str[0] >= "\xEF") {
        let encoding;
        if (str[0] === "\xFE" && str[1] === "\xFF") {
            encoding = "utf-16be";
            if (str.length % 2 === 1) {
                str = str.slice(0, -1);
            }
        } else if (str[0] === "\xFF" && str[1] === "\xFE") {
            encoding = "utf-16le";
            if (str.length % 2 === 1) {
                str = str.slice(0, -1);
            }
        } else if (str[0] === "\xEF" && str[1] === "\xBB" && str[2] === "\xBF") {
            encoding = "utf-8";
        }
        if (encoding) {
            try {
                const decoder = new TextDecoder(encoding, {
                    fatal: true
                });
                const buffer = stringToBytes(str);
                const decoded = decoder.decode(buffer);
                if (keepEscapeSequence || !decoded.includes("\x1b")) {
                    return decoded;
                }
                return decoded.replaceAll(/\x1b[^\x1b]*(?:\x1b|$)/g, "");
            } catch (ex) {
                warn('stringToPDFString: "'.concat(ex, '".'));
            }
        }
    }
    const strBuf = [];
    for(let i = 0, ii = str.length; i < ii; i++){
        const charCode = str.charCodeAt(i);
        if (!keepEscapeSequence && charCode === 0x1b) {
            while(++i < ii && str.charCodeAt(i) !== 0x1b){}
            continue;
        }
        const code = PDFStringTranslateTable[charCode];
        strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));
    }
    return strBuf.join("");
}
function stringToUTF8String(str) {
    return decodeURIComponent(escape(str));
}
function utf8StringToString(str) {
    return unescape(encodeURIComponent(str));
}
function isArrayEqual(arr1, arr2) {
    if (arr1.length !== arr2.length) {
        return false;
    }
    for(let i = 0, ii = arr1.length; i < ii; i++){
        if (arr1[i] !== arr2[i]) {
            return false;
        }
    }
    return true;
}
function getModificationDate() {
    let date = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : new Date();
    const buffer = [
        date.getUTCFullYear().toString(),
        (date.getUTCMonth() + 1).toString().padStart(2, "0"),
        date.getUTCDate().toString().padStart(2, "0"),
        date.getUTCHours().toString().padStart(2, "0"),
        date.getUTCMinutes().toString().padStart(2, "0"),
        date.getUTCSeconds().toString().padStart(2, "0")
    ];
    return buffer.join("");
}
let NormalizeRegex = null;
let NormalizationMap = null;
function normalizeUnicode(str) {
    if (!NormalizeRegex) {
        NormalizeRegex = /([\u00a0\u00b5\u037e\u0eb3\u2000-\u200a\u202f\u2126\ufb00-\ufb04\ufb06\ufb20-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufba1\ufba4-\ufba9\ufbae-\ufbb1\ufbd3-\ufbdc\ufbde-\ufbe7\ufbea-\ufbf8\ufbfc-\ufbfd\ufc00-\ufc5d\ufc64-\ufcf1\ufcf5-\ufd3d\ufd88\ufdf4\ufdfa-\ufdfb\ufe71\ufe77\ufe79\ufe7b\ufe7d]+)|(\ufb05+)/gu;
        NormalizationMap = new Map([
            [
                "ﬅ",
                "ſt"
            ]
        ]);
    }
    return str.replaceAll(NormalizeRegex, (_, p1, p2)=>p1 ? p1.normalize("NFKC") : NormalizationMap.get(p2));
}
function getUuid() {
    if (typeof crypto.randomUUID === "function") {
        return crypto.randomUUID();
    }
    const buf = new Uint8Array(32);
    crypto.getRandomValues(buf);
    return bytesToString(buf);
}
const AnnotationPrefix = "pdfjs_internal_id_";
function _isValidExplicitDest(validRef, validName, dest) {
    if (!Array.isArray(dest) || dest.length < 2) {
        return false;
    }
    const [page, zoom, ...args] = dest;
    if (!validRef(page) && !Number.isInteger(page)) {
        return false;
    }
    if (!validName(zoom)) {
        return false;
    }
    const argsLen = args.length;
    let allowNull = true;
    switch(zoom.name){
        case "XYZ":
            if (argsLen < 2 || argsLen > 3) {
                return false;
            }
            break;
        case "Fit":
        case "FitB":
            return argsLen === 0;
        case "FitH":
        case "FitBH":
        case "FitV":
        case "FitBV":
            if (argsLen > 1) {
                return false;
            }
            break;
        case "FitR":
            if (argsLen !== 4) {
                return false;
            }
            allowNull = false;
            break;
        default:
            return false;
    }
    for (const arg of args){
        if (typeof arg === "number" || allowNull && arg === null) {
            continue;
        }
        return false;
    }
    return true;
}
function MathClamp(v, min, max) {
    return Math.min(Math.max(v, min), max);
}
function toHexUtil(arr) {
    if (Uint8Array.prototype.toHex) {
        return arr.toHex();
    }
    return Array.from(arr, (num)=>hexNumbers[num]).join("");
}
function toBase64Util(arr) {
    if (Uint8Array.prototype.toBase64) {
        return arr.toBase64();
    }
    return btoa(bytesToString(arr));
}
function fromBase64Util(str) {
    if (Uint8Array.fromBase64) {
        return Uint8Array.fromBase64(str);
    }
    return stringToBytes(atob(str));
}
if (typeof Promise.try !== "function") {
    Promise.try = function(fn) {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            args[_key - 1] = arguments[_key];
        }
        return new Promise((resolve)=>{
            resolve(fn(...args));
        });
    };
}
if (typeof Math.sumPrecise !== "function") {
    Math.sumPrecise = function(numbers) {
        return numbers.reduce((a, b)=>a + b, 0);
    };
}
; // ./src/display/display_utils.js
const SVG_NS = "http://www.w3.org/2000/svg";
class PixelsPerInch {
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(PixelsPerInch, "CSS", 96.0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(PixelsPerInch, "PDF", 72.0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(PixelsPerInch, "PDF_TO_CSS_UNITS", PixelsPerInch.CSS / PixelsPerInch.PDF);
async function fetchData(url) {
    let type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "text";
    if (isValidFetchUrl(url, document.baseURI)) {
        const response = await fetch(url);
        if (!response.ok) {
            throw new Error(response.statusText);
        }
        switch(type){
            case "arraybuffer":
                return response.arrayBuffer();
            case "blob":
                return response.blob();
            case "json":
                return response.json();
        }
        return response.text();
    }
    return new Promise((resolve, reject)=>{
        const request = new XMLHttpRequest();
        request.open("GET", url, true);
        request.responseType = type;
        request.onreadystatechange = ()=>{
            if (request.readyState !== XMLHttpRequest.DONE) {
                return;
            }
            if (request.status === 200 || request.status === 0) {
                switch(type){
                    case "arraybuffer":
                    case "blob":
                    case "json":
                        resolve(request.response);
                        return;
                }
                resolve(request.responseText);
                return;
            }
            reject(new Error(request.statusText));
        };
        request.send(null);
    });
}
class PageViewport {
    get rawDims() {
        const dims = this.viewBox;
        return shadow(this, "rawDims", {
            pageWidth: dims[2] - dims[0],
            pageHeight: dims[3] - dims[1],
            pageX: dims[0],
            pageY: dims[1]
        });
    }
    clone() {
        let { scale = this.scale, rotation = this.rotation, offsetX = this.offsetX, offsetY = this.offsetY, dontFlip = false } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        return new PageViewport({
            viewBox: this.viewBox.slice(),
            userUnit: this.userUnit,
            scale,
            rotation,
            offsetX,
            offsetY,
            dontFlip
        });
    }
    convertToViewportPoint(x, y) {
        const p = [
            x,
            y
        ];
        Util.applyTransform(p, this.transform);
        return p;
    }
    convertToViewportRectangle(rect) {
        const topLeft = [
            rect[0],
            rect[1]
        ];
        Util.applyTransform(topLeft, this.transform);
        const bottomRight = [
            rect[2],
            rect[3]
        ];
        Util.applyTransform(bottomRight, this.transform);
        return [
            topLeft[0],
            topLeft[1],
            bottomRight[0],
            bottomRight[1]
        ];
    }
    convertToPdfPoint(x, y) {
        const p = [
            x,
            y
        ];
        Util.applyInverseTransform(p, this.transform);
        return p;
    }
    constructor({ viewBox, userUnit, scale, rotation, offsetX = 0, offsetY = 0, dontFlip = false }){
        this.viewBox = viewBox;
        this.userUnit = userUnit;
        this.scale = scale;
        this.rotation = rotation;
        this.offsetX = offsetX;
        this.offsetY = offsetY;
        scale *= userUnit;
        const centerX = (viewBox[2] + viewBox[0]) / 2;
        const centerY = (viewBox[3] + viewBox[1]) / 2;
        let rotateA, rotateB, rotateC, rotateD;
        rotation %= 360;
        if (rotation < 0) {
            rotation += 360;
        }
        switch(rotation){
            case 180:
                rotateA = -1;
                rotateB = 0;
                rotateC = 0;
                rotateD = 1;
                break;
            case 90:
                rotateA = 0;
                rotateB = 1;
                rotateC = 1;
                rotateD = 0;
                break;
            case 270:
                rotateA = 0;
                rotateB = -1;
                rotateC = -1;
                rotateD = 0;
                break;
            case 0:
                rotateA = 1;
                rotateB = 0;
                rotateC = 0;
                rotateD = -1;
                break;
            default:
                throw new Error("PageViewport: Invalid rotation, must be a multiple of 90 degrees.");
        }
        if (dontFlip) {
            rotateC = -rotateC;
            rotateD = -rotateD;
        }
        let offsetCanvasX, offsetCanvasY;
        let width, height;
        if (rotateA === 0) {
            offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;
            offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;
            width = (viewBox[3] - viewBox[1]) * scale;
            height = (viewBox[2] - viewBox[0]) * scale;
        } else {
            offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;
            offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;
            width = (viewBox[2] - viewBox[0]) * scale;
            height = (viewBox[3] - viewBox[1]) * scale;
        }
        this.transform = [
            rotateA * scale,
            rotateB * scale,
            rotateC * scale,
            rotateD * scale,
            offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,
            offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY
        ];
        this.width = width;
        this.height = height;
    }
}
class RenderingCancelledException extends BaseException {
    constructor(msg, extraDelay = 0){
        super(msg, "RenderingCancelledException");
        this.extraDelay = extraDelay;
    }
}
function isDataScheme(url) {
    const ii = url.length;
    let i = 0;
    while(i < ii && url[i].trim() === ""){
        i++;
    }
    return url.substring(i, i + 5).toLowerCase() === "data:";
}
function isPdfFile(filename) {
    return typeof filename === "string" && /\.pdf$/i.test(filename);
}
function getFilenameFromUrl(url) {
    [url] = url.split(/[#?]/, 1);
    return url.substring(url.lastIndexOf("/") + 1);
}
function getPdfFilenameFromUrl(url) {
    let defaultFilename = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "document.pdf";
    if (typeof url !== "string") {
        return defaultFilename;
    }
    if (isDataScheme(url)) {
        warn('getPdfFilenameFromUrl: ignore "data:"-URL for performance reasons.');
        return defaultFilename;
    }
    const reURI = /^(?:(?:[^:]+:)?\/\/[^/]+)?([^?#]*)(\?[^#]*)?(#.*)?$/;
    const reFilename = /[^/?#=]+\.pdf\b(?!.*\.pdf\b)/i;
    const splitURI = reURI.exec(url);
    let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);
    if (suggestedFilename) {
        suggestedFilename = suggestedFilename[0];
        if (suggestedFilename.includes("%")) {
            try {
                suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];
            } catch (e) {}
        }
    }
    return suggestedFilename || defaultFilename;
}
class StatTimer {
    time(name) {
        if (name in this.started) {
            warn("Timer is already running for ".concat(name));
        }
        this.started[name] = Date.now();
    }
    timeEnd(name) {
        if (!(name in this.started)) {
            warn("Timer has not been started for ".concat(name));
        }
        this.times.push({
            name,
            start: this.started[name],
            end: Date.now()
        });
        delete this.started[name];
    }
    toString() {
        const outBuf = [];
        let longest = 0;
        for (const { name } of this.times){
            longest = Math.max(name.length, longest);
        }
        for (const { name, start, end } of this.times){
            outBuf.push("".concat(name.padEnd(longest), " ").concat(end - start, "ms\n"));
        }
        return outBuf.join("");
    }
    constructor(){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "started", Object.create(null));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "times", []);
    }
}
function isValidFetchUrl(url, baseUrl) {
    const res = baseUrl ? URL.parse(url, baseUrl) : URL.parse(url);
    return (res === null || res === void 0 ? void 0 : res.protocol) === "http:" || (res === null || res === void 0 ? void 0 : res.protocol) === "https:";
}
function noContextMenu(e) {
    e.preventDefault();
}
function stopEvent(e) {
    e.preventDefault();
    e.stopPropagation();
}
function deprecated(details) {
    console.log("Deprecated API usage: " + details);
}
class PDFDateString {
    static toDateObject(input) {
        if (!input || typeof input !== "string") {
            return null;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, PDFDateString, _regex, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, PDFDateString, _regex) || new RegExp("^D:" + "(\\d{4})" + "(\\d{2})?" + "(\\d{2})?" + "(\\d{2})?" + "(\\d{2})?" + "(\\d{2})?" + "([Z|+|-])?" + "(\\d{2})?" + "'?" + "(\\d{2})?" + "'?"));
        const matches = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, PDFDateString, _regex).exec(input);
        if (!matches) {
            return null;
        }
        const year = parseInt(matches[1], 10);
        let month = parseInt(matches[2], 10);
        month = month >= 1 && month <= 12 ? month - 1 : 0;
        let day = parseInt(matches[3], 10);
        day = day >= 1 && day <= 31 ? day : 1;
        let hour = parseInt(matches[4], 10);
        hour = hour >= 0 && hour <= 23 ? hour : 0;
        let minute = parseInt(matches[5], 10);
        minute = minute >= 0 && minute <= 59 ? minute : 0;
        let second = parseInt(matches[6], 10);
        second = second >= 0 && second <= 59 ? second : 0;
        const universalTimeRelation = matches[7] || "Z";
        let offsetHour = parseInt(matches[8], 10);
        offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;
        let offsetMinute = parseInt(matches[9], 10) || 0;
        offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;
        if (universalTimeRelation === "-") {
            hour += offsetHour;
            minute += offsetMinute;
        } else if (universalTimeRelation === "+") {
            hour -= offsetHour;
            minute -= offsetMinute;
        }
        return new Date(Date.UTC(year, month, day, hour, minute, second));
    }
}
var _regex = {
    writable: true,
    value: void 0
};
function getXfaPageViewport(xfaPage, param) {
    let { scale = 1, rotation = 0 } = param;
    const { width, height } = xfaPage.attributes.style;
    const viewBox = [
        0,
        0,
        parseInt(width),
        parseInt(height)
    ];
    return new PageViewport({
        viewBox,
        userUnit: 1,
        scale,
        rotation
    });
}
function getRGB(color) {
    if (color.startsWith("#")) {
        const colorRGB = parseInt(color.slice(1), 16);
        return [
            (colorRGB & 0xff0000) >> 16,
            (colorRGB & 0x00ff00) >> 8,
            colorRGB & 0x0000ff
        ];
    }
    if (color.startsWith("rgb(")) {
        return color.slice(4, -1).split(",").map((x)=>parseInt(x));
    }
    if (color.startsWith("rgba(")) {
        return color.slice(5, -1).split(",").map((x)=>parseInt(x)).slice(0, 3);
    }
    warn('Not a valid color format: "'.concat(color, '"'));
    return [
        0,
        0,
        0
    ];
}
function getColorValues(colors) {
    const span = document.createElement("span");
    span.style.visibility = "hidden";
    span.style.colorScheme = "only light";
    document.body.append(span);
    for (const name of colors.keys()){
        span.style.color = name;
        const computedColor = window.getComputedStyle(span).color;
        colors.set(name, getRGB(computedColor));
    }
    span.remove();
}
function getCurrentTransform(ctx) {
    const { a, b, c, d, e, f } = ctx.getTransform();
    return [
        a,
        b,
        c,
        d,
        e,
        f
    ];
}
function getCurrentTransformInverse(ctx) {
    const { a, b, c, d, e, f } = ctx.getTransform().invertSelf();
    return [
        a,
        b,
        c,
        d,
        e,
        f
    ];
}
function setLayerDimensions(div, viewport) {
    let mustFlip = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false, mustRotate = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;
    if (viewport instanceof PageViewport) {
        const { pageWidth, pageHeight } = viewport.rawDims;
        const { style } = div;
        const useRound = util_FeatureTest.isCSSRoundSupported;
        const w = "var(--total-scale-factor) * ".concat(pageWidth, "px"), h = "var(--total-scale-factor) * ".concat(pageHeight, "px");
        const widthStr = useRound ? "round(down, ".concat(w, ", var(--scale-round-x))") : "calc(".concat(w, ")"), heightStr = useRound ? "round(down, ".concat(h, ", var(--scale-round-y))") : "calc(".concat(h, ")");
        if (!mustFlip || viewport.rotation % 180 === 0) {
            style.width = widthStr;
            style.height = heightStr;
        } else {
            style.width = heightStr;
            style.height = widthStr;
        }
    }
    if (mustRotate) {
        div.setAttribute("data-main-rotation", viewport.rotation);
    }
}
class OutputScale {
    get scaled() {
        return this.sx !== 1 || this.sy !== 1;
    }
    get symmetric() {
        return this.sx === this.sy;
    }
    limitCanvas(width, height, maxPixels, maxDim) {
        let capAreaFactor = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : -1;
        let maxAreaScale = Infinity, maxWidthScale = Infinity, maxHeightScale = Infinity;
        maxPixels = OutputScale.capPixels(maxPixels, capAreaFactor);
        if (maxPixels > 0) {
            maxAreaScale = Math.sqrt(maxPixels / (width * height));
        }
        if (maxDim !== -1) {
            maxWidthScale = maxDim / width;
            maxHeightScale = maxDim / height;
        }
        const maxScale = Math.min(maxAreaScale, maxWidthScale, maxHeightScale);
        if (this.sx > maxScale || this.sy > maxScale) {
            this.sx = maxScale;
            this.sy = maxScale;
            return true;
        }
        return false;
    }
    static get pixelRatio() {
        return globalThis.devicePixelRatio || 1;
    }
    static capPixels(maxPixels, capAreaFactor) {
        if (capAreaFactor >= 0) {
            const winPixels = Math.ceil(window.screen.availWidth * window.screen.availHeight * this.pixelRatio ** 2 * (1 + capAreaFactor / 100));
            return maxPixels > 0 ? Math.min(maxPixels, winPixels) : winPixels;
        }
        return maxPixels;
    }
    constructor(){
        const { pixelRatio } = OutputScale;
        this.sx = pixelRatio;
        this.sy = pixelRatio;
    }
}
const SupportedImageMimeTypes = [
    "image/apng",
    "image/avif",
    "image/bmp",
    "image/gif",
    "image/jpeg",
    "image/png",
    "image/svg+xml",
    "image/webp",
    "image/x-icon"
];
; // ./src/display/editor/toolbar.js
var _toolbar = /*#__PURE__*/ new WeakMap(), _colorPicker = /*#__PURE__*/ new WeakMap(), _editor = /*#__PURE__*/ new WeakMap(), _buttons = /*#__PURE__*/ new WeakMap(), _altText = /*#__PURE__*/ new WeakMap(), _signatureDescriptionButton = /*#__PURE__*/ new WeakMap(), _focusIn = /*#__PURE__*/ new WeakSet(), _focusOut = /*#__PURE__*/ new WeakSet(), _addListenersToElement = /*#__PURE__*/ new WeakSet(), _addDeleteButton = /*#__PURE__*/ new WeakSet(), _divider = /*#__PURE__*/ new WeakMap();
class EditorToolbar {
    render() {
        const editToolbar = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toolbar, document.createElement("div"));
        editToolbar.classList.add("editToolbar", "hidden");
        editToolbar.setAttribute("role", "toolbar");
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor)._uiManager._signal;
        editToolbar.addEventListener("contextmenu", noContextMenu, {
            signal
        });
        editToolbar.addEventListener("pointerdown", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(EditorToolbar, EditorToolbar, pointerDown), {
            signal
        });
        const buttons = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _buttons, document.createElement("div"));
        buttons.className = "buttons";
        editToolbar.append(buttons);
        const position = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor).toolbarPosition;
        if (position) {
            const { style } = editToolbar;
            const x = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor)._uiManager.direction === "ltr" ? 1 - position[0] : position[0];
            style.insetInlineEnd = "".concat(100 * x, "%");
            style.top = "calc(".concat(100 * position[1], "% + var(--editor-toolbar-vert-offset))");
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addDeleteButton, addDeleteButton).call(this);
        return editToolbar;
    }
    get div() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toolbar);
    }
    hide() {
        var _class_private_field_get;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toolbar).classList.add("hidden");
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _colorPicker)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.hideDropdown();
    }
    show() {
        var _class_private_field_get;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toolbar).classList.remove("hidden");
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.shown();
    }
    async addAltText(altText) {
        const button = await altText.render();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addListenersToElement, addListenersToElement).call(this, button);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _buttons).prepend(button, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _divider));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText, altText);
    }
    addColorPicker(colorPicker) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _colorPicker, colorPicker);
        const button = colorPicker.renderButton();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addListenersToElement, addListenersToElement).call(this, button);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _buttons).prepend(button, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _divider));
    }
    async addEditSignatureButton(signatureManager) {
        const button = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureDescriptionButton, await signatureManager.renderEditButton((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor)));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addListenersToElement, addListenersToElement).call(this, button);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _buttons).prepend(button, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _divider));
    }
    updateEditSignatureButton(description) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureDescriptionButton)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureDescriptionButton).title = description;
        }
    }
    remove() {
        var _class_private_field_get;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toolbar).remove();
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _colorPicker)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.destroy();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _colorPicker, null);
    }
    constructor(editor){
        var _EditorToolbar;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusIn);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOut);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addListenersToElement);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addDeleteButton);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _divider, {
            get: get_divider,
            set: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toolbar, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _colorPicker, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _buttons, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureDescriptionButton, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor, editor);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(_EditorToolbar = EditorToolbar, EditorToolbar, _l10nRemove, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(EditorToolbar, EditorToolbar, _l10nRemove) || Object.freeze({
            freetext: "pdfjs-editor-remove-freetext-button",
            highlight: "pdfjs-editor-remove-highlight-button",
            ink: "pdfjs-editor-remove-ink-button",
            stamp: "pdfjs-editor-remove-stamp-button",
            signature: "pdfjs-editor-remove-signature-button"
        }));
    }
}
var _l10nRemove = {
    writable: true,
    value: null
};
function pointerDown(e) {
    e.stopPropagation();
}
function focusIn(e) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor)._focusEventsAllowed = false;
    stopEvent(e);
}
function focusOut(e) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor)._focusEventsAllowed = true;
    stopEvent(e);
}
function addListenersToElement(element) {
    const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor)._uiManager._signal;
    element.addEventListener("focusin", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusIn, focusIn).bind(this), {
        capture: true,
        signal
    });
    element.addEventListener("focusout", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOut, focusOut).bind(this), {
        capture: true,
        signal
    });
    element.addEventListener("contextmenu", noContextMenu, {
        signal
    });
}
function addDeleteButton() {
    const { editorType, _uiManager } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor);
    const button = document.createElement("button");
    button.className = "delete";
    button.tabIndex = 0;
    button.setAttribute("data-l10n-id", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(EditorToolbar, EditorToolbar, _l10nRemove)[editorType]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addListenersToElement, addListenersToElement).call(this, button);
    button.addEventListener("click", (e)=>{
        _uiManager.delete();
    }, {
        signal: _uiManager._signal
    });
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _buttons).append(button);
}
function get_divider() {
    const divider = document.createElement("div");
    divider.className = "divider";
    return divider;
}
var _buttons1 = /*#__PURE__*/ new WeakMap(), _toolbar1 = /*#__PURE__*/ new WeakMap(), _uiManager = /*#__PURE__*/ new WeakMap(), _render = /*#__PURE__*/ new WeakSet(), _getLastPoint = /*#__PURE__*/ new WeakSet(), _addHighlightButton = /*#__PURE__*/ new WeakSet();
class HighlightToolbar {
    show(parent, boxes, isLTR) {
        const [x, y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getLastPoint, getLastPoint).call(this, boxes, isLTR);
        const { style } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toolbar1, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toolbar1) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _render, render).call(this));
        parent.append((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toolbar1));
        style.insetInlineEnd = "".concat(100 * x, "%");
        style.top = "calc(".concat(100 * y, "% + var(--editor-toolbar-vert-offset))");
    }
    hide() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toolbar1).remove();
    }
    constructor(uiManager){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _render);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getLastPoint);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addHighlightButton);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _buttons1, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toolbar1, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager, uiManager);
    }
}
function render() {
    const editToolbar = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toolbar1, document.createElement("div"));
    editToolbar.className = "editToolbar";
    editToolbar.setAttribute("role", "toolbar");
    editToolbar.addEventListener("contextmenu", noContextMenu, {
        signal: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager)._signal
    });
    const buttons = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _buttons1, document.createElement("div"));
    buttons.className = "buttons";
    editToolbar.append(buttons);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addHighlightButton, addHighlightButton).call(this);
    return editToolbar;
}
function getLastPoint(boxes, isLTR) {
    let lastY = 0;
    let lastX = 0;
    for (const box of boxes){
        const y = box.y + box.height;
        if (y < lastY) {
            continue;
        }
        const x = box.x + (isLTR ? box.width : 0);
        if (y > lastY) {
            lastX = x;
            lastY = y;
            continue;
        }
        if (isLTR) {
            if (x > lastX) {
                lastX = x;
            }
        } else if (x < lastX) {
            lastX = x;
        }
    }
    return [
        isLTR ? 1 - lastX : lastX,
        lastY
    ];
}
function addHighlightButton() {
    const button = document.createElement("button");
    button.className = "highlightButton";
    button.tabIndex = 0;
    button.setAttribute("data-l10n-id", "pdfjs-highlight-floating-button1");
    const span = document.createElement("span");
    button.append(span);
    span.className = "visuallyHidden";
    span.setAttribute("data-l10n-id", "pdfjs-highlight-floating-button-label");
    const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager)._signal;
    button.addEventListener("contextmenu", noContextMenu, {
        signal
    });
    button.addEventListener("click", ()=>{
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager).highlightSelection("floating_button");
    }, {
        signal
    });
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _buttons1).append(button);
}
; // ./src/display/editor/tools.js
function bindEvents(obj, element, names) {
    for (const name of names){
        element.addEventListener(name, obj[name].bind(obj));
    }
}
var _id = /*#__PURE__*/ new WeakMap();
class IdManager {
    get id() {
        return "".concat(AnnotationEditorPrefix).concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_update$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id).value++);
    }
    constructor(){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id, {
            writable: true,
            value: 0
        });
    }
}
var _baseId = /*#__PURE__*/ new WeakMap(), _id1 = /*#__PURE__*/ new WeakMap(), _cache = /*#__PURE__*/ new WeakMap(), _get = /*#__PURE__*/ new WeakSet();
class ImageManager {
    static get _isSVGFittingCanvas() {
        const svg = 'data:image/svg+xml;charset=UTF-8,<svg viewBox="0 0 1 1" width="1" height="1" xmlns="http://www.w3.org/2000/svg"><rect width="1" height="1" style="fill:red;"/></svg>';
        const canvas = new OffscreenCanvas(1, 3);
        const ctx = canvas.getContext("2d", {
            willReadFrequently: true
        });
        const image = new Image();
        image.src = svg;
        const promise = image.decode().then(()=>{
            ctx.drawImage(image, 0, 0, 1, 1, 0, 0, 1, 3);
            return new Uint32Array(ctx.getImageData(0, 0, 1, 1).data.buffer)[0] === 0;
        });
        return shadow(this, "_isSVGFittingCanvas", promise);
    }
    async getFromFile(file) {
        const { lastModified, name, size, type } = file;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _get, get).call(this, "".concat(lastModified, "_").concat(name, "_").concat(size, "_").concat(type), file);
    }
    async getFromUrl(url) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _get, get).call(this, url, url);
    }
    async getFromBlob(id, blobPromise) {
        const blob = await blobPromise;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _get, get).call(this, id, blob);
    }
    async getFromId(id) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache) || new Map());
        const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache).get(id);
        if (!data) {
            return null;
        }
        if (data.bitmap) {
            data.refCounter += 1;
            return data;
        }
        if (data.file) {
            return this.getFromFile(data.file);
        }
        if (data.blobPromise) {
            const { blobPromise } = data;
            delete data.blobPromise;
            return this.getFromBlob(data.id, blobPromise);
        }
        return this.getFromUrl(data.url);
    }
    getFromCanvas(id, canvas) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache) || new Map());
        let data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache).get(id);
        if (data === null || data === void 0 ? void 0 : data.bitmap) {
            data.refCounter += 1;
            return data;
        }
        const offscreen = new OffscreenCanvas(canvas.width, canvas.height);
        const ctx = offscreen.getContext("2d");
        ctx.drawImage(canvas, 0, 0);
        data = {
            bitmap: offscreen.transferToImageBitmap(),
            id: "image_".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _baseId), "_").concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_update$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id1).value++),
            refCounter: 1,
            isSvg: false
        };
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache).set(id, data);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache).set(data.id, data);
        return data;
    }
    getSvgUrl(id) {
        const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache).get(id);
        if (!(data === null || data === void 0 ? void 0 : data.isSvg)) {
            return null;
        }
        return data.svgUrl;
    }
    deleteId(id) {
        var _bitmap_close;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache) || new Map());
        const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache).get(id);
        if (!data) {
            return;
        }
        data.refCounter -= 1;
        if (data.refCounter !== 0) {
            return;
        }
        const { bitmap } = data;
        if (!data.url && !data.file) {
            const canvas = new OffscreenCanvas(bitmap.width, bitmap.height);
            const ctx = canvas.getContext("bitmaprenderer");
            ctx.transferFromImageBitmap(bitmap);
            data.blobPromise = canvas.convertToBlob();
        }
        (_bitmap_close = bitmap.close) === null || _bitmap_close === void 0 ? void 0 : _bitmap_close.call(bitmap);
        data.bitmap = null;
    }
    isValidId(id) {
        return id.startsWith("image_".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _baseId), "_"));
    }
    constructor(){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _get);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _baseId, {
            writable: true,
            value: getUuid()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id1, {
            writable: true,
            value: 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache, {
            writable: true,
            value: null
        });
    }
}
async function get(key, rawData) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache) || new Map());
    let data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache).get(key);
    if (data === null) {
        return null;
    }
    if (data === null || data === void 0 ? void 0 : data.bitmap) {
        data.refCounter += 1;
        return data;
    }
    try {
        data || (data = {
            bitmap: null,
            id: "image_".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _baseId), "_").concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_update$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id1).value++),
            refCounter: 0,
            isSvg: false
        });
        let image;
        if (typeof rawData === "string") {
            data.url = rawData;
            image = await fetchData(rawData, "blob");
        } else if (rawData instanceof File) {
            image = data.file = rawData;
        } else if (rawData instanceof Blob) {
            image = rawData;
        }
        if (image.type === "image/svg+xml") {
            const mustRemoveAspectRatioPromise = ImageManager._isSVGFittingCanvas;
            const fileReader = new FileReader();
            const imageElement = new Image();
            const imagePromise = new Promise((resolve, reject)=>{
                imageElement.onload = ()=>{
                    data.bitmap = imageElement;
                    data.isSvg = true;
                    resolve();
                };
                fileReader.onload = async ()=>{
                    const url = data.svgUrl = fileReader.result;
                    imageElement.src = await mustRemoveAspectRatioPromise ? "".concat(url, "#svgView(preserveAspectRatio(none))") : url;
                };
                imageElement.onerror = fileReader.onerror = reject;
            });
            fileReader.readAsDataURL(image);
            await imagePromise;
        } else {
            data.bitmap = await createImageBitmap(image);
        }
        data.refCounter = 1;
    } catch (e) {
        warn(e);
        data = null;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache).set(key, data);
    if (data) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache).set(data.id, data);
    }
    return data;
}
var _commands = /*#__PURE__*/ new WeakMap(), _locked = /*#__PURE__*/ new WeakMap(), _maxSize = /*#__PURE__*/ new WeakMap(), _position = /*#__PURE__*/ new WeakMap();
class CommandManager {
    add(param) {
        let { cmd, undo, post, mustExec, type = NaN, overwriteIfSameType = false, keepUndo = false } = param;
        if (mustExec) {
            cmd();
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _locked)) {
            return;
        }
        const save = {
            cmd,
            undo,
            post,
            type
        };
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position) === -1) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands).length > 0) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands).length = 0;
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position, 0);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands).push(save);
            return;
        }
        if (overwriteIfSameType && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands)[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position)].type === type) {
            if (keepUndo) {
                save.undo = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands)[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position)].undo;
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands)[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position)] = save;
            return;
        }
        const next = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position) + 1;
        if (next === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _maxSize)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands).splice(0, 1);
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position, next);
            if (next < (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands).length) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands).splice(next);
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands).push(save);
    }
    undo() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position) === -1) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _locked, true);
        const { undo, post } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands)[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position)];
        undo();
        post === null || post === void 0 ? void 0 : post();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _locked, false);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position) - 1);
    }
    redo() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position) < (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands).length - 1) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position) + 1);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _locked, true);
            const { cmd, post } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands)[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position)];
            cmd();
            post === null || post === void 0 ? void 0 : post();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _locked, false);
        }
    }
    hasSomethingToUndo() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position) !== -1;
    }
    hasSomethingToRedo() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position) < (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands).length - 1;
    }
    cleanType(type) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position) === -1) {
            return;
        }
        for(let i = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position); i >= 0; i--){
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands)[i].type !== type) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands).splice(i + 1, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position) - i);
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position, i);
                return;
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands).length = 0;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position, -1);
    }
    destroy() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands, null);
    }
    constructor(maxSize = 128){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commands, {
            writable: true,
            value: []
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _locked, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _maxSize, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position, {
            writable: true,
            value: -1
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _maxSize, maxSize);
    }
}
var _serialize = /*#__PURE__*/ new WeakSet();
class KeyboardManager {
    exec(self, event) {
        if (!this.allKeys.has(event.key)) {
            return;
        }
        const info = this.callbacks.get((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serialize, serialize).call(this, event));
        if (!info) {
            return;
        }
        const { callback, options: { bubbles = false, args = [], checker = null } } = info;
        if (checker && !checker(self, event)) {
            return;
        }
        callback.bind(self, ...args, event)();
        if (!bubbles) {
            stopEvent(event);
        }
    }
    constructor(callbacks){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serialize);
        this.buffer = [];
        this.callbacks = new Map();
        this.allKeys = new Set();
        const { isMac } = util_FeatureTest.platform;
        for (const [keys, callback, options = {}] of callbacks){
            for (const key of keys){
                const isMacKey = key.startsWith("mac+");
                if (isMac && isMacKey) {
                    this.callbacks.set(key.slice(4), {
                        callback,
                        options
                    });
                    this.allKeys.add(key.split("+").at(-1));
                } else if (!isMac && !isMacKey) {
                    this.callbacks.set(key, {
                        callback,
                        options
                    });
                    this.allKeys.add(key.split("+").at(-1));
                }
            }
        }
    }
}
function serialize(event) {
    if (event.altKey) {
        this.buffer.push("alt");
    }
    if (event.ctrlKey) {
        this.buffer.push("ctrl");
    }
    if (event.metaKey) {
        this.buffer.push("meta");
    }
    if (event.shiftKey) {
        this.buffer.push("shift");
    }
    this.buffer.push(event.key);
    const str = this.buffer.join("+");
    this.buffer.length = 0;
    return str;
}
class ColorManager {
    get _colors() {
        const colors = new Map([
            [
                "CanvasText",
                null
            ],
            [
                "Canvas",
                null
            ]
        ]);
        getColorValues(colors);
        return shadow(this, "_colors", colors);
    }
    convert(color) {
        const rgb = getRGB(color);
        if (!window.matchMedia("(forced-colors: active)").matches) {
            return rgb;
        }
        for (const [name, RGB] of this._colors){
            if (RGB.every((x, i)=>x === rgb[i])) {
                return ColorManager._colorsMapping.get(name);
            }
        }
        return rgb;
    }
    getHexCode(name) {
        const rgb = this._colors.get(name);
        if (!rgb) {
            return name;
        }
        return Util.makeHexColor(...rgb);
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(ColorManager, "_colorsMapping", new Map([
    [
        "CanvasText",
        [
            0,
            0,
            0
        ]
    ],
    [
        "Canvas",
        [
            255,
            255,
            255
        ]
    ]
]));
var _abortController = /*#__PURE__*/ new WeakMap(), _activeEditor = /*#__PURE__*/ new WeakMap(), _allEditors = /*#__PURE__*/ new WeakMap(), _allLayers = /*#__PURE__*/ new WeakMap(), _altTextManager = /*#__PURE__*/ new WeakMap(), _annotationStorage = /*#__PURE__*/ new WeakMap(), _changedExistingAnnotations = /*#__PURE__*/ new WeakMap(), _commandManager = /*#__PURE__*/ new WeakMap(), _copyPasteAC = /*#__PURE__*/ new WeakMap(), _currentDrawingSession = /*#__PURE__*/ new WeakMap(), _currentPageIndex = /*#__PURE__*/ new WeakMap(), _deletedAnnotationsElementIds = /*#__PURE__*/ new WeakMap(), _draggingEditors = /*#__PURE__*/ new WeakMap(), _editorTypes = /*#__PURE__*/ new WeakMap(), _editorsToRescale = /*#__PURE__*/ new WeakMap(), _enableHighlightFloatingButton = /*#__PURE__*/ new WeakMap(), _enableUpdatedAddImage = /*#__PURE__*/ new WeakMap(), _enableNewAltTextWhenAddingImage = /*#__PURE__*/ new WeakMap(), _filterFactory = /*#__PURE__*/ new WeakMap(), _focusMainContainerTimeoutId = /*#__PURE__*/ new WeakMap(), _focusManagerAC = /*#__PURE__*/ new WeakMap(), _highlightColors = /*#__PURE__*/ new WeakMap(), _highlightWhenShiftUp = /*#__PURE__*/ new WeakMap(), _highlightToolbar = /*#__PURE__*/ new WeakMap(), _idManager = /*#__PURE__*/ new WeakMap(), _isEnabled = /*#__PURE__*/ new WeakMap(), _isWaiting = /*#__PURE__*/ new WeakMap(), _keyboardManagerAC = /*#__PURE__*/ new WeakMap(), _lastActiveElement = /*#__PURE__*/ new WeakMap(), _mainHighlightColorPicker = /*#__PURE__*/ new WeakMap(), _missingCanvases = /*#__PURE__*/ new WeakMap(), _mlManager = /*#__PURE__*/ new WeakMap(), _mode = /*#__PURE__*/ new WeakMap(), _selectedEditors = /*#__PURE__*/ new WeakMap(), _selectedTextNode = /*#__PURE__*/ new WeakMap(), _signatureManager = /*#__PURE__*/ new WeakMap(), _pageColors = /*#__PURE__*/ new WeakMap(), _showAllStates = /*#__PURE__*/ new WeakMap(), _previousStates = /*#__PURE__*/ new WeakMap(), _translation = /*#__PURE__*/ new WeakMap(), _translationTimeoutId = /*#__PURE__*/ new WeakMap(), _container = /*#__PURE__*/ new WeakMap(), _viewer = /*#__PURE__*/ new WeakMap(), _updateModeCapability = /*#__PURE__*/ new WeakMap(), _getAnchorElementForSelection = /*#__PURE__*/ new WeakSet(), _getLayerForTextLayer = /*#__PURE__*/ new WeakSet(), _displayHighlightToolbar = /*#__PURE__*/ new WeakSet(), _selectionChange = /*#__PURE__*/ new WeakSet(), _onSelectEnd = /*#__PURE__*/ new WeakSet(), _addSelectionListener = /*#__PURE__*/ new WeakSet(), _addFocusManager = /*#__PURE__*/ new WeakSet(), _removeFocusManager = /*#__PURE__*/ new WeakSet(), _addKeyboardManager = /*#__PURE__*/ new WeakSet(), _removeKeyboardManager = /*#__PURE__*/ new WeakSet(), _addCopyPasteListeners = /*#__PURE__*/ new WeakSet(), _removeCopyPasteListeners = /*#__PURE__*/ new WeakSet(), _addDragAndDropListeners = /*#__PURE__*/ new WeakSet(), _dispatchUpdateStates = /*#__PURE__*/ new WeakSet(), _dispatchUpdateUI = /*#__PURE__*/ new WeakSet(), _enableAll = /*#__PURE__*/ new WeakSet(), _disableAll = /*#__PURE__*/ new WeakSet(), _addEditorToLayer = /*#__PURE__*/ new WeakSet(), _lastSelectedEditor = /*#__PURE__*/ new WeakMap(), _isEmpty = /*#__PURE__*/ new WeakSet(), _selectEditors = /*#__PURE__*/ new WeakSet();
class AnnotationEditorUIManager {
    static get _keyboardManager() {
        const proto = AnnotationEditorUIManager.prototype;
        const arrowChecker = (self)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(self, _container).contains(document.activeElement) && document.activeElement.tagName !== "BUTTON" && self.hasSomethingToControl();
        const textInputChecker = (_self, param)=>{
            let { target: el } = param;
            if (el instanceof HTMLInputElement) {
                const { type } = el;
                return type !== "text" && type !== "number";
            }
            return true;
        };
        const small = this.TRANSLATE_SMALL;
        const big = this.TRANSLATE_BIG;
        return shadow(this, "_keyboardManager", new KeyboardManager([
            [
                [
                    "ctrl+a",
                    "mac+meta+a"
                ],
                proto.selectAll,
                {
                    checker: textInputChecker
                }
            ],
            [
                [
                    "ctrl+z",
                    "mac+meta+z"
                ],
                proto.undo,
                {
                    checker: textInputChecker
                }
            ],
            [
                [
                    "ctrl+y",
                    "ctrl+shift+z",
                    "mac+meta+shift+z",
                    "ctrl+shift+Z",
                    "mac+meta+shift+Z"
                ],
                proto.redo,
                {
                    checker: textInputChecker
                }
            ],
            [
                [
                    "Backspace",
                    "alt+Backspace",
                    "ctrl+Backspace",
                    "shift+Backspace",
                    "mac+Backspace",
                    "mac+alt+Backspace",
                    "mac+ctrl+Backspace",
                    "Delete",
                    "ctrl+Delete",
                    "shift+Delete",
                    "mac+Delete"
                ],
                proto.delete,
                {
                    checker: textInputChecker
                }
            ],
            [
                [
                    "Enter",
                    "mac+Enter"
                ],
                proto.addNewEditorFromKeyboard,
                {
                    checker: (self, param)=>{
                        let { target: el } = param;
                        return !(el instanceof HTMLButtonElement) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(self, _container).contains(el) && !self.isEnterHandled;
                    }
                }
            ],
            [
                [
                    " ",
                    "mac+ "
                ],
                proto.addNewEditorFromKeyboard,
                {
                    checker: (self, param)=>{
                        let { target: el } = param;
                        return !(el instanceof HTMLButtonElement) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(self, _container).contains(document.activeElement);
                    }
                }
            ],
            [
                [
                    "Escape",
                    "mac+Escape"
                ],
                proto.unselectAll
            ],
            [
                [
                    "ArrowLeft",
                    "mac+ArrowLeft"
                ],
                proto.translateSelectedEditors,
                {
                    args: [
                        -small,
                        0
                    ],
                    checker: arrowChecker
                }
            ],
            [
                [
                    "ctrl+ArrowLeft",
                    "mac+shift+ArrowLeft"
                ],
                proto.translateSelectedEditors,
                {
                    args: [
                        -big,
                        0
                    ],
                    checker: arrowChecker
                }
            ],
            [
                [
                    "ArrowRight",
                    "mac+ArrowRight"
                ],
                proto.translateSelectedEditors,
                {
                    args: [
                        small,
                        0
                    ],
                    checker: arrowChecker
                }
            ],
            [
                [
                    "ctrl+ArrowRight",
                    "mac+shift+ArrowRight"
                ],
                proto.translateSelectedEditors,
                {
                    args: [
                        big,
                        0
                    ],
                    checker: arrowChecker
                }
            ],
            [
                [
                    "ArrowUp",
                    "mac+ArrowUp"
                ],
                proto.translateSelectedEditors,
                {
                    args: [
                        0,
                        -small
                    ],
                    checker: arrowChecker
                }
            ],
            [
                [
                    "ctrl+ArrowUp",
                    "mac+shift+ArrowUp"
                ],
                proto.translateSelectedEditors,
                {
                    args: [
                        0,
                        -big
                    ],
                    checker: arrowChecker
                }
            ],
            [
                [
                    "ArrowDown",
                    "mac+ArrowDown"
                ],
                proto.translateSelectedEditors,
                {
                    args: [
                        0,
                        small
                    ],
                    checker: arrowChecker
                }
            ],
            [
                [
                    "ctrl+ArrowDown",
                    "mac+shift+ArrowDown"
                ],
                proto.translateSelectedEditors,
                {
                    args: [
                        0,
                        big
                    ],
                    checker: arrowChecker
                }
            ]
        ]));
    }
    destroy() {
        var _class_private_field_get, _class_private_field_get1, _class_private_field_get2, _class_private_field_get3, _class_private_field_get4, _class_private_field_get5, _class_private_field_get6, _this__editorUndoBar;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateModeCapability)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.resolve();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateModeCapability, null);
        (_class_private_field_get1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _abortController)) === null || _class_private_field_get1 === void 0 ? void 0 : _class_private_field_get1.abort();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _abortController, null);
        this._signal = null;
        for (const layer of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers).values()){
            layer.destroy();
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers).clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorsToRescale).clear();
        (_class_private_field_get2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _missingCanvases)) === null || _class_private_field_get2 === void 0 ? void 0 : _class_private_field_get2.clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _activeEditor, null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commandManager).destroy();
        (_class_private_field_get3 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextManager)) === null || _class_private_field_get3 === void 0 ? void 0 : _class_private_field_get3.destroy();
        (_class_private_field_get4 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureManager)) === null || _class_private_field_get4 === void 0 ? void 0 : _class_private_field_get4.destroy();
        (_class_private_field_get5 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightToolbar)) === null || _class_private_field_get5 === void 0 ? void 0 : _class_private_field_get5.hide();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightToolbar, null);
        (_class_private_field_get6 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mainHighlightColorPicker)) === null || _class_private_field_get6 === void 0 ? void 0 : _class_private_field_get6.destroy();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mainHighlightColorPicker, null);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusMainContainerTimeoutId)) {
            clearTimeout((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusMainContainerTimeoutId));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusMainContainerTimeoutId, null);
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translationTimeoutId)) {
            clearTimeout((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translationTimeoutId));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translationTimeoutId, null);
        }
        (_this__editorUndoBar = this._editorUndoBar) === null || _this__editorUndoBar === void 0 ? void 0 : _this__editorUndoBar.destroy();
    }
    combinedSignal(ac) {
        return AbortSignal.any([
            this._signal,
            ac.signal
        ]);
    }
    get mlManager() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mlManager);
    }
    get useNewAltTextFlow() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableUpdatedAddImage);
    }
    get useNewAltTextWhenAddingImage() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableNewAltTextWhenAddingImage);
    }
    get hcmFilter() {
        return shadow(this, "hcmFilter", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageColors) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _filterFactory).addHCMFilter((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageColors).foreground, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageColors).background) : "none");
    }
    get direction() {
        return shadow(this, "direction", getComputedStyle((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container)).direction);
    }
    get highlightColors() {
        return shadow(this, "highlightColors", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightColors) ? new Map((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightColors).split(",").map((pair)=>pair.split("=").map((x)=>x.trim()))) : null);
    }
    get highlightColorNames() {
        return shadow(this, "highlightColorNames", this.highlightColors ? new Map(Array.from(this.highlightColors, (e)=>e.reverse())) : null);
    }
    setCurrentDrawingSession(layer) {
        if (layer) {
            this.unselectAll();
            this.disableUserSelect(true);
        } else {
            this.disableUserSelect(false);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentDrawingSession, layer);
    }
    setMainHighlightColorPicker(colorPicker) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mainHighlightColorPicker, colorPicker);
    }
    editAltText(editor) {
        let firstTime = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        var _class_private_field_get;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextManager)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.editAltText(this, editor, firstTime);
    }
    getSignature(editor) {
        var _class_private_field_get;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureManager)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.getSignature({
            uiManager: this,
            editor
        });
    }
    get signatureManager() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureManager);
    }
    switchToMode(mode, callback) {
        this._eventBus.on("annotationeditormodechanged", callback, {
            once: true,
            signal: this._signal
        });
        this._eventBus.dispatch("showannotationeditorui", {
            source: this,
            mode
        });
    }
    setPreference(name, value) {
        this._eventBus.dispatch("setpreference", {
            source: this,
            name,
            value
        });
    }
    onSetPreference(param) {
        let { name, value } = param;
        switch(name){
            case "enableNewAltTextWhenAddingImage":
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableNewAltTextWhenAddingImage, value);
                break;
        }
    }
    onPageChanging(param) {
        let { pageNumber } = param;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentPageIndex, pageNumber - 1);
    }
    focusMainContainer() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container).focus();
    }
    findParent(x, y) {
        for (const layer of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers).values()){
            const { x: layerX, y: layerY, width, height } = layer.div.getBoundingClientRect();
            if (x >= layerX && x <= layerX + width && y >= layerY && y <= layerY + height) {
                return layer;
            }
        }
        return null;
    }
    disableUserSelect() {
        let value = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _viewer).classList.toggle("noUserSelect", value);
    }
    addShouldRescale(editor) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorsToRescale).add(editor);
    }
    removeShouldRescale(editor) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorsToRescale).delete(editor);
    }
    onScaleChanging(param) {
        let { scale } = param;
        var _class_private_field_get;
        this.commitOrRemove();
        this.viewParameters.realScale = scale * PixelsPerInch.PDF_TO_CSS_UNITS;
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorsToRescale)){
            editor.onScaleChanging();
        }
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentDrawingSession)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.onScaleChanging();
    }
    onRotationChanging(param) {
        let { pagesRotation } = param;
        this.commitOrRemove();
        this.viewParameters.rotation = pagesRotation;
    }
    highlightSelection() {
        let methodOfCreation = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
        const selection = document.getSelection();
        if (!selection || selection.isCollapsed) {
            return;
        }
        const { anchorNode, anchorOffset, focusNode, focusOffset } = selection;
        const text = selection.toString();
        const anchorElement = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getAnchorElementForSelection, getAnchorElementForSelection).call(this, selection);
        const textLayer = anchorElement.closest(".textLayer");
        const boxes = this.getSelectionBoxes(textLayer);
        if (!boxes) {
            return;
        }
        selection.empty();
        const layer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getLayerForTextLayer, getLayerForTextLayer).call(this, textLayer);
        const isNoneMode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode) === AnnotationEditorType.NONE;
        const callback = ()=>{
            layer === null || layer === void 0 ? void 0 : layer.createAndAddNewEditor({
                x: 0,
                y: 0
            }, false, {
                methodOfCreation,
                boxes,
                anchorNode,
                anchorOffset,
                focusNode,
                focusOffset,
                text
            });
            if (isNoneMode) {
                this.showAllEditors("highlight", true, true);
            }
        };
        if (isNoneMode) {
            this.switchToMode(AnnotationEditorType.HIGHLIGHT, callback);
            return;
        }
        callback();
    }
    addToAnnotationStorage(editor) {
        if (!editor.isEmpty() && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationStorage) && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationStorage).has(editor.id)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationStorage).setValue(editor.id, editor);
        }
    }
    blur() {
        this.isShiftKeyDown = false;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightWhenShiftUp)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightWhenShiftUp, false);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onSelectEnd, onSelectEnd).call(this, "main_toolbar");
        }
        if (!this.hasSelection) {
            return;
        }
        const { activeElement } = document;
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors)){
            if (editor.div.contains(activeElement)) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastActiveElement, [
                    editor,
                    activeElement
                ]);
                editor._focusEventsAllowed = false;
                break;
            }
        }
    }
    focus() {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastActiveElement)) {
            return;
        }
        const [lastEditor, lastActiveElement] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastActiveElement);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastActiveElement, null);
        lastActiveElement.addEventListener("focusin", ()=>{
            lastEditor._focusEventsAllowed = true;
        }, {
            once: true,
            signal: this._signal
        });
        lastActiveElement.focus();
    }
    addEditListeners() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addKeyboardManager, addKeyboardManager).call(this);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addCopyPasteListeners, addCopyPasteListeners).call(this);
    }
    removeEditListeners() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _removeKeyboardManager, removeKeyboardManager).call(this);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _removeCopyPasteListeners, removeCopyPasteListeners).call(this);
    }
    dragOver(event) {
        for (const { type } of event.dataTransfer.items){
            for (const editorType of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorTypes)){
                if (editorType.isHandlingMimeForPasting(type)) {
                    event.dataTransfer.dropEffect = "copy";
                    event.preventDefault();
                    return;
                }
            }
        }
    }
    drop(event) {
        for (const item of event.dataTransfer.items){
            for (const editorType of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorTypes)){
                if (editorType.isHandlingMimeForPasting(item.type)) {
                    editorType.paste(item, this.currentLayer);
                    event.preventDefault();
                    return;
                }
            }
        }
    }
    copy(event) {
        var _class_private_field_get;
        event.preventDefault();
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _activeEditor)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.commitOrRemove();
        if (!this.hasSelection) {
            return;
        }
        const editors = [];
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors)){
            const serialized = editor.serialize(true);
            if (serialized) {
                editors.push(serialized);
            }
        }
        if (editors.length === 0) {
            return;
        }
        event.clipboardData.setData("application/pdfjs", JSON.stringify(editors));
    }
    cut(event) {
        this.copy(event);
        this.delete();
    }
    async paste(event) {
        event.preventDefault();
        const { clipboardData } = event;
        for (const item of clipboardData.items){
            for (const editorType of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorTypes)){
                if (editorType.isHandlingMimeForPasting(item.type)) {
                    editorType.paste(item, this.currentLayer);
                    return;
                }
            }
        }
        let data = clipboardData.getData("application/pdfjs");
        if (!data) {
            return;
        }
        try {
            data = JSON.parse(data);
        } catch (ex) {
            warn('paste: "'.concat(ex.message, '".'));
            return;
        }
        if (!Array.isArray(data)) {
            return;
        }
        this.unselectAll();
        const layer = this.currentLayer;
        try {
            const newEditors = [];
            for (const editor of data){
                const deserializedEditor = await layer.deserialize(editor);
                if (!deserializedEditor) {
                    return;
                }
                newEditors.push(deserializedEditor);
            }
            const cmd = ()=>{
                for (const editor of newEditors){
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addEditorToLayer, addEditorToLayer).call(this, editor);
                }
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectEditors, selectEditors).call(this, newEditors);
            };
            const undo = ()=>{
                for (const editor of newEditors){
                    editor.remove();
                }
            };
            this.addCommands({
                cmd,
                undo,
                mustExec: true
            });
        } catch (ex) {
            warn('paste: "'.concat(ex.message, '".'));
        }
    }
    keydown(event) {
        if (!this.isShiftKeyDown && event.key === "Shift") {
            this.isShiftKeyDown = true;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode) !== AnnotationEditorType.NONE && !this.isEditorHandlingKeyboard) {
            AnnotationEditorUIManager._keyboardManager.exec(this, event);
        }
    }
    keyup(event) {
        if (this.isShiftKeyDown && event.key === "Shift") {
            this.isShiftKeyDown = false;
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightWhenShiftUp)) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightWhenShiftUp, false);
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onSelectEnd, onSelectEnd).call(this, "main_toolbar");
            }
        }
    }
    onEditingAction(param) {
        let { name } = param;
        switch(name){
            case "undo":
            case "redo":
            case "delete":
            case "selectAll":
                this[name]();
                break;
            case "highlightSelection":
                this.highlightSelection("context_menu");
                break;
        }
    }
    setEditingState(isEditing) {
        if (isEditing) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addFocusManager, addFocusManager).call(this);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addCopyPasteListeners, addCopyPasteListeners).call(this);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates, dispatchUpdateStates).call(this, {
                isEditing: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode) !== AnnotationEditorType.NONE,
                isEmpty: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEmpty, isEmpty).call(this),
                hasSomethingToUndo: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commandManager).hasSomethingToUndo(),
                hasSomethingToRedo: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commandManager).hasSomethingToRedo(),
                hasSelectedEditor: false
            });
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _removeFocusManager, removeFocusManager).call(this);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _removeCopyPasteListeners, removeCopyPasteListeners).call(this);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates, dispatchUpdateStates).call(this, {
                isEditing: false
            });
            this.disableUserSelect(false);
        }
    }
    registerEditorTypes(types) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorTypes)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorTypes, types);
        for (const editorType of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorTypes)){
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateUI, dispatchUpdateUI).call(this, editorType.defaultPropertiesToUpdate);
        }
    }
    getId() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _idManager).id;
    }
    get currentLayer() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers).get((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentPageIndex));
    }
    getLayer(pageIndex) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers).get(pageIndex);
    }
    get currentPageIndex() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentPageIndex);
    }
    addLayer(layer) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers).set(layer.pageIndex, layer);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEnabled)) {
            layer.enable();
        } else {
            layer.disable();
        }
    }
    removeLayer(layer) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers).delete(layer.pageIndex);
    }
    async updateMode(mode) {
        let editId = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, isFromKeyboard = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
        var _class_private_field_get;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode) === mode) {
            return;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateModeCapability)) {
            await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateModeCapability).promise;
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateModeCapability)) {
                return;
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateModeCapability, Promise.withResolvers());
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentDrawingSession)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.commitOrRemove();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode, mode);
        if (mode === AnnotationEditorType.NONE) {
            var _this__editorUndoBar;
            this.setEditingState(false);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _disableAll, disableAll).call(this);
            (_this__editorUndoBar = this._editorUndoBar) === null || _this__editorUndoBar === void 0 ? void 0 : _this__editorUndoBar.hide();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateModeCapability).resolve();
            return;
        }
        if (mode === AnnotationEditorType.SIGNATURE) {
            var _class_private_field_get1;
            await ((_class_private_field_get1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureManager)) === null || _class_private_field_get1 === void 0 ? void 0 : _class_private_field_get1.loadSignatures());
        }
        this.setEditingState(true);
        await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableAll, enableAll).call(this);
        this.unselectAll();
        for (const layer of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers).values()){
            layer.updateMode(mode);
        }
        if (!editId) {
            if (isFromKeyboard) {
                this.addNewEditorFromKeyboard();
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateModeCapability).resolve();
            return;
        }
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).values()){
            if (editor.annotationElementId === editId || editor.id === editId) {
                this.setSelected(editor);
                editor.enterInEditMode();
            } else {
                editor.unselect();
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateModeCapability).resolve();
    }
    addNewEditorFromKeyboard() {
        if (this.currentLayer.canCreateNewEmptyEditor()) {
            this.currentLayer.addNewEditor();
        }
    }
    updateToolbar(options) {
        if (options.mode === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode)) {
            return;
        }
        this._eventBus.dispatch("switchannotationeditormode", {
            source: this,
            ...options
        });
    }
    updateParams(type, value) {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorTypes)) {
            return;
        }
        switch(type){
            case AnnotationEditorParamsType.CREATE:
                this.currentLayer.addNewEditor(value);
                return;
            case AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR:
                var _class_private_field_get;
                (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mainHighlightColorPicker)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.updateColor(value);
                break;
            case AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL:
                this._eventBus.dispatch("reporttelemetry", {
                    source: this,
                    details: {
                        type: "editing",
                        data: {
                            type: "highlight",
                            action: "toggle_visibility"
                        }
                    }
                });
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _showAllStates, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _showAllStates) || new Map()).set(type, value);
                this.showAllEditors("highlight", value);
                break;
        }
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors)){
            editor.updateParams(type, value);
        }
        for (const editorType of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorTypes)){
            editorType.updateDefaultParams(type, value);
        }
    }
    showAllEditors(type, visible) {
        let updateButton = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
        var _class_private_field_get;
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).values()){
            if (editor.editorType === type) {
                editor.show(visible);
            }
        }
        var _class_private_field_get_get;
        const state = (_class_private_field_get_get = (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _showAllStates)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.get(AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL)) !== null && _class_private_field_get_get !== void 0 ? _class_private_field_get_get : true;
        if (state !== visible) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateUI, dispatchUpdateUI).call(this, [
                [
                    AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL,
                    visible
                ]
            ]);
        }
    }
    enableWaiting() {
        let mustWait = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isWaiting) === mustWait) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isWaiting, mustWait);
        for (const layer of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers).values()){
            if (mustWait) {
                layer.disableClick();
            } else {
                layer.enableClick();
            }
            layer.div.classList.toggle("waiting", mustWait);
        }
    }
    getEditors(pageIndex) {
        const editors = [];
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).values()){
            if (editor.pageIndex === pageIndex) {
                editors.push(editor);
            }
        }
        return editors;
    }
    getEditor(id) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).get(id);
    }
    addEditor(editor) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).set(editor.id, editor);
    }
    removeEditor(editor) {
        if (editor.div.contains(document.activeElement)) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusMainContainerTimeoutId)) {
                clearTimeout((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusMainContainerTimeoutId));
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusMainContainerTimeoutId, setTimeout(()=>{
                this.focusMainContainer();
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusMainContainerTimeoutId, null);
            }, 0));
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).delete(editor.id);
        if (editor.annotationElementId) {
            var _class_private_field_get;
            (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _missingCanvases)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.delete(editor.annotationElementId);
        }
        this.unselect(editor);
        if (!editor.annotationElementId || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _deletedAnnotationsElementIds).has(editor.annotationElementId)) {
            var _class_private_field_get1;
            (_class_private_field_get1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationStorage)) === null || _class_private_field_get1 === void 0 ? void 0 : _class_private_field_get1.remove(editor.id);
        }
    }
    addDeletedAnnotationElement(editor) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _deletedAnnotationsElementIds).add(editor.annotationElementId);
        this.addChangedExistingAnnotation(editor);
        editor.deleted = true;
    }
    isDeletedAnnotationElement(annotationElementId) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _deletedAnnotationsElementIds).has(annotationElementId);
    }
    removeDeletedAnnotationElement(editor) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _deletedAnnotationsElementIds).delete(editor.annotationElementId);
        this.removeChangedExistingAnnotation(editor);
        editor.deleted = false;
    }
    setActiveEditor(editor) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _activeEditor) === editor) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _activeEditor, editor);
        if (editor) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateUI, dispatchUpdateUI).call(this, editor.propertiesToUpdate);
        }
    }
    updateUI(editor) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSelectedEditor) === editor) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateUI, dispatchUpdateUI).call(this, editor.propertiesToUpdate);
        }
    }
    updateUIForDefaultProperties(editorType) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateUI, dispatchUpdateUI).call(this, editorType.defaultPropertiesToUpdate);
    }
    toggleSelected(editor) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).has(editor)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).delete(editor);
            editor.unselect();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates, dispatchUpdateStates).call(this, {
                hasSelectedEditor: this.hasSelection
            });
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).add(editor);
        editor.select();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateUI, dispatchUpdateUI).call(this, editor.propertiesToUpdate);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates, dispatchUpdateStates).call(this, {
            hasSelectedEditor: true
        });
    }
    setSelected(editor) {
        var _class_private_field_get;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentDrawingSession)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.commitOrRemove();
        for (const ed of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors)){
            if (ed !== editor) {
                ed.unselect();
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).add(editor);
        editor.select();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateUI, dispatchUpdateUI).call(this, editor.propertiesToUpdate);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates, dispatchUpdateStates).call(this, {
            hasSelectedEditor: true
        });
    }
    isSelected(editor) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).has(editor);
    }
    get firstSelectedEditor() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).values().next().value;
    }
    unselect(editor) {
        editor.unselect();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).delete(editor);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates, dispatchUpdateStates).call(this, {
            hasSelectedEditor: this.hasSelection
        });
    }
    get hasSelection() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).size !== 0;
    }
    get isEnterHandled() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).size === 1 && this.firstSelectedEditor.isEnterHandled;
    }
    undo() {
        var _this__editorUndoBar;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commandManager).undo();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates, dispatchUpdateStates).call(this, {
            hasSomethingToUndo: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commandManager).hasSomethingToUndo(),
            hasSomethingToRedo: true,
            isEmpty: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEmpty, isEmpty).call(this)
        });
        (_this__editorUndoBar = this._editorUndoBar) === null || _this__editorUndoBar === void 0 ? void 0 : _this__editorUndoBar.hide();
    }
    redo() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commandManager).redo();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates, dispatchUpdateStates).call(this, {
            hasSomethingToUndo: true,
            hasSomethingToRedo: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commandManager).hasSomethingToRedo(),
            isEmpty: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEmpty, isEmpty).call(this)
        });
    }
    addCommands(params) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commandManager).add(params);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates, dispatchUpdateStates).call(this, {
            hasSomethingToUndo: true,
            hasSomethingToRedo: false,
            isEmpty: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEmpty, isEmpty).call(this)
        });
    }
    cleanUndoStack(type) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commandManager).cleanType(type);
    }
    delete() {
        var _this_currentLayer;
        this.commitOrRemove();
        const drawingEditor = (_this_currentLayer = this.currentLayer) === null || _this_currentLayer === void 0 ? void 0 : _this_currentLayer.endDrawingSession(true);
        if (!this.hasSelection && !drawingEditor) {
            return;
        }
        const editors = drawingEditor ? [
            drawingEditor
        ] : [
            ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors)
        ];
        const cmd = ()=>{
            var _this__editorUndoBar;
            (_this__editorUndoBar = this._editorUndoBar) === null || _this__editorUndoBar === void 0 ? void 0 : _this__editorUndoBar.show(undo, editors.length === 1 ? editors[0].editorType : editors.length);
            for (const editor of editors){
                editor.remove();
            }
        };
        const undo = ()=>{
            for (const editor of editors){
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addEditorToLayer, addEditorToLayer).call(this, editor);
            }
        };
        this.addCommands({
            cmd,
            undo,
            mustExec: true
        });
    }
    commitOrRemove() {
        var _class_private_field_get;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _activeEditor)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.commitOrRemove();
    }
    hasSomethingToControl() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _activeEditor) || this.hasSelection;
    }
    selectAll() {
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors)){
            editor.commit();
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectEditors, selectEditors).call(this, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).values());
    }
    unselectAll() {
        var _class_private_field_get;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _activeEditor)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _activeEditor).commitOrRemove();
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode) !== AnnotationEditorType.NONE) {
                return;
            }
        }
        if ((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentDrawingSession)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.commitOrRemove()) {
            return;
        }
        if (!this.hasSelection) {
            return;
        }
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors)){
            editor.unselect();
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates, dispatchUpdateStates).call(this, {
            hasSelectedEditor: false
        });
    }
    translateSelectedEditors(x, y) {
        let noCommit = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
        if (!noCommit) {
            this.commitOrRemove();
        }
        if (!this.hasSelection) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translation)[0] += x;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translation)[1] += y;
        const [totalX, totalY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translation);
        const editors = [
            ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors)
        ];
        const TIME_TO_WAIT = 1000;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translationTimeoutId)) {
            clearTimeout((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translationTimeoutId));
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translationTimeoutId, setTimeout(()=>{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translationTimeoutId, null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translation)[0] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translation)[1] = 0;
            this.addCommands({
                cmd: ()=>{
                    for (const editor of editors){
                        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).has(editor.id)) {
                            editor.translateInPage(totalX, totalY);
                            editor.translationDone();
                        }
                    }
                },
                undo: ()=>{
                    for (const editor of editors){
                        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).has(editor.id)) {
                            editor.translateInPage(-totalX, -totalY);
                            editor.translationDone();
                        }
                    }
                },
                mustExec: false
            });
        }, TIME_TO_WAIT));
        for (const editor of editors){
            editor.translateInPage(x, y);
            editor.translationDone();
        }
    }
    setUpDragSession() {
        if (!this.hasSelection) {
            return;
        }
        this.disableUserSelect(true);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _draggingEditors, new Map());
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors)){
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _draggingEditors).set(editor, {
                savedX: editor.x,
                savedY: editor.y,
                savedPageIndex: editor.pageIndex,
                newX: 0,
                newY: 0,
                newPageIndex: -1
            });
        }
    }
    endDragSession() {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _draggingEditors)) {
            return false;
        }
        this.disableUserSelect(false);
        const map = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _draggingEditors);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _draggingEditors, null);
        let mustBeAddedInUndoStack = false;
        for (const [{ x, y, pageIndex }, value] of map){
            value.newX = x;
            value.newY = y;
            value.newPageIndex = pageIndex;
            mustBeAddedInUndoStack || (mustBeAddedInUndoStack = x !== value.savedX || y !== value.savedY || pageIndex !== value.savedPageIndex);
        }
        if (!mustBeAddedInUndoStack) {
            return false;
        }
        const move = (editor, x, y, pageIndex)=>{
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).has(editor.id)) {
                const parent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers).get(pageIndex);
                if (parent) {
                    editor._setParentAndPosition(parent, x, y);
                } else {
                    editor.pageIndex = pageIndex;
                    editor.x = x;
                    editor.y = y;
                }
            }
        };
        this.addCommands({
            cmd: ()=>{
                for (const [editor, { newX, newY, newPageIndex }] of map){
                    move(editor, newX, newY, newPageIndex);
                }
            },
            undo: ()=>{
                for (const [editor, { savedX, savedY, savedPageIndex }] of map){
                    move(editor, savedX, savedY, savedPageIndex);
                }
            },
            mustExec: true
        });
        return true;
    }
    dragSelectedEditors(tx, ty) {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _draggingEditors)) {
            return;
        }
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _draggingEditors).keys()){
            editor.drag(tx, ty);
        }
    }
    rebuild(editor) {
        if (editor.parent === null) {
            const parent = this.getLayer(editor.pageIndex);
            if (parent) {
                parent.changeParent(editor);
                parent.addOrRebuild(editor);
            } else {
                this.addEditor(editor);
                this.addToAnnotationStorage(editor);
                editor.rebuild();
            }
        } else {
            editor.parent.addOrRebuild(editor);
        }
    }
    get isEditorHandlingKeyboard() {
        var _this_getActive;
        return ((_this_getActive = this.getActive()) === null || _this_getActive === void 0 ? void 0 : _this_getActive.shouldGetKeyboardEvents()) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).size === 1 && this.firstSelectedEditor.shouldGetKeyboardEvents();
    }
    isActive(editor) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _activeEditor) === editor;
    }
    getActive() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _activeEditor);
    }
    getMode() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode);
    }
    get imageManager() {
        return shadow(this, "imageManager", new ImageManager());
    }
    getSelectionBoxes(textLayer) {
        if (!textLayer) {
            return null;
        }
        const selection = document.getSelection();
        for(let i = 0, ii = selection.rangeCount; i < ii; i++){
            if (!textLayer.contains(selection.getRangeAt(i).commonAncestorContainer)) {
                return null;
            }
        }
        const { x: layerX, y: layerY, width: parentWidth, height: parentHeight } = textLayer.getBoundingClientRect();
        let rotator;
        switch(textLayer.getAttribute("data-main-rotation")){
            case "90":
                rotator = (x, y, w, h)=>({
                        x: (y - layerY) / parentHeight,
                        y: 1 - (x + w - layerX) / parentWidth,
                        width: h / parentHeight,
                        height: w / parentWidth
                    });
                break;
            case "180":
                rotator = (x, y, w, h)=>({
                        x: 1 - (x + w - layerX) / parentWidth,
                        y: 1 - (y + h - layerY) / parentHeight,
                        width: w / parentWidth,
                        height: h / parentHeight
                    });
                break;
            case "270":
                rotator = (x, y, w, h)=>({
                        x: 1 - (y + h - layerY) / parentHeight,
                        y: (x - layerX) / parentWidth,
                        width: h / parentHeight,
                        height: w / parentWidth
                    });
                break;
            default:
                rotator = (x, y, w, h)=>({
                        x: (x - layerX) / parentWidth,
                        y: (y - layerY) / parentHeight,
                        width: w / parentWidth,
                        height: h / parentHeight
                    });
                break;
        }
        const boxes = [];
        for(let i = 0, ii = selection.rangeCount; i < ii; i++){
            const range = selection.getRangeAt(i);
            if (range.collapsed) {
                continue;
            }
            for (const { x, y, width, height } of range.getClientRects()){
                if (width === 0 || height === 0) {
                    continue;
                }
                boxes.push(rotator(x, y, width, height));
            }
        }
        return boxes.length === 0 ? null : boxes;
    }
    addChangedExistingAnnotation(param) {
        let { annotationElementId, id } = param;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _changedExistingAnnotations, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _changedExistingAnnotations) || new Map()).set(annotationElementId, id);
    }
    removeChangedExistingAnnotation(param) {
        let { annotationElementId } = param;
        var _class_private_field_get;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _changedExistingAnnotations)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.delete(annotationElementId);
    }
    renderAnnotationElement(annotation) {
        var _class_private_field_get;
        const editorId = (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _changedExistingAnnotations)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.get(annotation.data.id);
        if (!editorId) {
            return;
        }
        const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationStorage).getRawValue(editorId);
        if (!editor) {
            return;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode) === AnnotationEditorType.NONE && !editor.hasBeenModified) {
            return;
        }
        editor.renderAnnotationElement(annotation);
    }
    setMissingCanvas(annotationId, annotationElementId, canvas) {
        var _class_private_field_get;
        const editor = (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _missingCanvases)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.get(annotationId);
        if (!editor) {
            return;
        }
        editor.setCanvas(annotationElementId, canvas);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _missingCanvases).delete(annotationId);
    }
    addMissingCanvas(annotationId, editor) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _missingCanvases, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _missingCanvases) || new Map()).set(annotationId, editor);
    }
    constructor(container, viewer, altTextManager, signatureManager, eventBus, pdfDocument, pageColors, highlightColors, enableHighlightFloatingButton, enableUpdatedAddImage, enableNewAltTextWhenAddingImage, mlManager, editorUndoBar, supportsPinchToZoom){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getAnchorElementForSelection);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getLayerForTextLayer);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _displayHighlightToolbar);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectionChange);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onSelectEnd);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addSelectionListener);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addFocusManager);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _removeFocusManager);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addKeyboardManager);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _removeKeyboardManager);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addCopyPasteListeners);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _removeCopyPasteListeners);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addDragAndDropListeners);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateUI);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableAll);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _disableAll);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addEditorToLayer);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSelectedEditor, {
            get: get_lastSelectedEditor,
            set: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEmpty);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectEditors);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _abortController, {
            writable: true,
            value: new AbortController()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _activeEditor, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors, {
            writable: true,
            value: new Map()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers, {
            writable: true,
            value: new Map()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextManager, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationStorage, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _changedExistingAnnotations, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _commandManager, {
            writable: true,
            value: new CommandManager()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _copyPasteAC, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentDrawingSession, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentPageIndex, {
            writable: true,
            value: 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _deletedAnnotationsElementIds, {
            writable: true,
            value: new Set()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _draggingEditors, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorTypes, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorsToRescale, {
            writable: true,
            value: new Set()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "_editorUndoBar", null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableHighlightFloatingButton, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableUpdatedAddImage, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableNewAltTextWhenAddingImage, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _filterFactory, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusMainContainerTimeoutId, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusManagerAC, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightColors, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightWhenShiftUp, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightToolbar, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _idManager, {
            writable: true,
            value: new IdManager()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEnabled, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isWaiting, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keyboardManagerAC, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastActiveElement, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mainHighlightColorPicker, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _missingCanvases, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mlManager, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode, {
            writable: true,
            value: AnnotationEditorType.NONE
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors, {
            writable: true,
            value: new Set()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedTextNode, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureManager, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageColors, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _showAllStates, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _previousStates, {
            writable: true,
            value: {
                isEditing: false,
                isEmpty: true,
                hasSomethingToUndo: false,
                hasSomethingToRedo: false,
                hasSelectedEditor: false,
                hasSelectedText: false
            }
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translation, {
            writable: true,
            value: [
                0,
                0
            ]
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translationTimeoutId, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _viewer, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateModeCapability, {
            writable: true,
            value: null
        });
        const signal = this._signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _abortController).signal;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container, container);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _viewer, viewer);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextManager, altTextManager);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureManager, signatureManager);
        this._eventBus = eventBus;
        eventBus._on("editingaction", this.onEditingAction.bind(this), {
            signal
        });
        eventBus._on("pagechanging", this.onPageChanging.bind(this), {
            signal
        });
        eventBus._on("scalechanging", this.onScaleChanging.bind(this), {
            signal
        });
        eventBus._on("rotationchanging", this.onRotationChanging.bind(this), {
            signal
        });
        eventBus._on("setpreference", this.onSetPreference.bind(this), {
            signal
        });
        eventBus._on("switchannotationeditorparams", (evt)=>this.updateParams(evt.type, evt.value), {
            signal
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addSelectionListener, addSelectionListener).call(this);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addDragAndDropListeners, addDragAndDropListeners).call(this);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addKeyboardManager, addKeyboardManager).call(this);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationStorage, pdfDocument.annotationStorage);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _filterFactory, pdfDocument.filterFactory);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageColors, pageColors);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightColors, highlightColors || null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableHighlightFloatingButton, enableHighlightFloatingButton);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableUpdatedAddImage, enableUpdatedAddImage);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableNewAltTextWhenAddingImage, enableNewAltTextWhenAddingImage);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mlManager, mlManager || null);
        this.viewParameters = {
            realScale: PixelsPerInch.PDF_TO_CSS_UNITS,
            rotation: 0
        };
        this.isShiftKeyDown = false;
        this._editorUndoBar = editorUndoBar || null;
        this._supportsPinchToZoom = supportsPinchToZoom !== false;
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditorUIManager, "TRANSLATE_SMALL", 1);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditorUIManager, "TRANSLATE_BIG", 10);
function getAnchorElementForSelection(param) {
    let { anchorNode } = param;
    return anchorNode.nodeType === Node.TEXT_NODE ? anchorNode.parentElement : anchorNode;
}
function getLayerForTextLayer(textLayer) {
    const { currentLayer } = this;
    if (currentLayer.hasTextLayer(textLayer)) {
        return currentLayer;
    }
    for (const layer of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers).values()){
        if (layer.hasTextLayer(textLayer)) {
            return layer;
        }
    }
    return null;
}
function displayHighlightToolbar() {
    const selection = document.getSelection();
    if (!selection || selection.isCollapsed) {
        return;
    }
    const anchorElement = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getAnchorElementForSelection, getAnchorElementForSelection).call(this, selection);
    const textLayer = anchorElement.closest(".textLayer");
    const boxes = this.getSelectionBoxes(textLayer);
    if (!boxes) {
        return;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightToolbar, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightToolbar) || new HighlightToolbar(this));
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightToolbar).show(textLayer, boxes, this.direction === "ltr");
}
function selectionChange() {
    var _class_private_field_get;
    const selection = document.getSelection();
    if (!selection || selection.isCollapsed) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedTextNode)) {
            var _class_private_field_get1;
            (_class_private_field_get1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightToolbar)) === null || _class_private_field_get1 === void 0 ? void 0 : _class_private_field_get1.hide();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedTextNode, null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates, dispatchUpdateStates).call(this, {
                hasSelectedText: false
            });
        }
        return;
    }
    const { anchorNode } = selection;
    if (anchorNode === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedTextNode)) {
        return;
    }
    const anchorElement = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getAnchorElementForSelection, getAnchorElementForSelection).call(this, selection);
    const textLayer = anchorElement.closest(".textLayer");
    if (!textLayer) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedTextNode)) {
            var _class_private_field_get2;
            (_class_private_field_get2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightToolbar)) === null || _class_private_field_get2 === void 0 ? void 0 : _class_private_field_get2.hide();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedTextNode, null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates, dispatchUpdateStates).call(this, {
                hasSelectedText: false
            });
        }
        return;
    }
    (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightToolbar)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.hide();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedTextNode, anchorNode);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates, dispatchUpdateStates).call(this, {
        hasSelectedText: true
    });
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode) !== AnnotationEditorType.HIGHLIGHT && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode) !== AnnotationEditorType.NONE) {
        return;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode) === AnnotationEditorType.HIGHLIGHT) {
        this.showAllEditors("highlight", true, true);
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightWhenShiftUp, this.isShiftKeyDown);
    if (!this.isShiftKeyDown) {
        const activeLayer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode) === AnnotationEditorType.HIGHLIGHT ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getLayerForTextLayer, getLayerForTextLayer).call(this, textLayer) : null;
        activeLayer === null || activeLayer === void 0 ? void 0 : activeLayer.toggleDrawing();
        const ac = new AbortController();
        const signal = this.combinedSignal(ac);
        const pointerup = (e)=>{
            if (e.type === "pointerup" && e.button !== 0) {
                return;
            }
            ac.abort();
            activeLayer === null || activeLayer === void 0 ? void 0 : activeLayer.toggleDrawing(true);
            if (e.type === "pointerup") {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onSelectEnd, onSelectEnd).call(this, "main_toolbar");
            }
        };
        window.addEventListener("pointerup", pointerup, {
            signal
        });
        window.addEventListener("blur", pointerup, {
            signal
        });
    }
}
function onSelectEnd() {
    let methodOfCreation = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode) === AnnotationEditorType.HIGHLIGHT) {
        this.highlightSelection(methodOfCreation);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableHighlightFloatingButton)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _displayHighlightToolbar, displayHighlightToolbar).call(this);
    }
}
function addSelectionListener() {
    document.addEventListener("selectionchange", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectionChange, selectionChange).bind(this), {
        signal: this._signal
    });
}
function addFocusManager() {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusManagerAC)) {
        return;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusManagerAC, new AbortController());
    const signal = this.combinedSignal((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusManagerAC));
    window.addEventListener("focus", this.focus.bind(this), {
        signal
    });
    window.addEventListener("blur", this.blur.bind(this), {
        signal
    });
}
function removeFocusManager() {
    var _class_private_field_get;
    (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusManagerAC)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.abort();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusManagerAC, null);
}
function addKeyboardManager() {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keyboardManagerAC)) {
        return;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keyboardManagerAC, new AbortController());
    const signal = this.combinedSignal((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keyboardManagerAC));
    window.addEventListener("keydown", this.keydown.bind(this), {
        signal
    });
    window.addEventListener("keyup", this.keyup.bind(this), {
        signal
    });
}
function removeKeyboardManager() {
    var _class_private_field_get;
    (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keyboardManagerAC)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.abort();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keyboardManagerAC, null);
}
function addCopyPasteListeners() {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _copyPasteAC)) {
        return;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _copyPasteAC, new AbortController());
    const signal = this.combinedSignal((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _copyPasteAC));
    document.addEventListener("copy", this.copy.bind(this), {
        signal
    });
    document.addEventListener("cut", this.cut.bind(this), {
        signal
    });
    document.addEventListener("paste", this.paste.bind(this), {
        signal
    });
}
function removeCopyPasteListeners() {
    var _class_private_field_get;
    (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _copyPasteAC)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.abort();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _copyPasteAC, null);
}
function addDragAndDropListeners() {
    const signal = this._signal;
    document.addEventListener("dragover", this.dragOver.bind(this), {
        signal
    });
    document.addEventListener("drop", this.drop.bind(this), {
        signal
    });
}
function dispatchUpdateStates(details) {
    const hasChanged = Object.entries(details).some((param)=>{
        let [key, value] = param;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _previousStates)[key] !== value;
    });
    if (hasChanged) {
        this._eventBus.dispatch("annotationeditorstateschanged", {
            source: this,
            details: Object.assign((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _previousStates), details)
        });
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mode) === AnnotationEditorType.HIGHLIGHT && details.hasSelectedEditor === false) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateUI, dispatchUpdateUI).call(this, [
                [
                    AnnotationEditorParamsType.HIGHLIGHT_FREE,
                    true
                ]
            ]);
        }
    }
}
function dispatchUpdateUI(details) {
    this._eventBus.dispatch("annotationeditorparamschanged", {
        source: this,
        details
    });
}
async function enableAll() {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEnabled)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEnabled, true);
        const promises = [];
        for (const layer of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers).values()){
            promises.push(layer.enable());
        }
        await Promise.all(promises);
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).values()){
            editor.enable();
        }
    }
}
function disableAll() {
    this.unselectAll();
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEnabled)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEnabled, false);
        for (const layer of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers).values()){
            layer.disable();
        }
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).values()){
            editor.disable();
        }
    }
}
function addEditorToLayer(editor) {
    const layer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allLayers).get(editor.pageIndex);
    if (layer) {
        layer.addOrRebuild(editor);
    } else {
        this.addEditor(editor);
        this.addToAnnotationStorage(editor);
    }
}
function get_lastSelectedEditor() {
    let ed = null;
    for (ed of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors)){}
    return ed;
}
function isEmpty() {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).size === 0) {
        return true;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).size === 1) {
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allEditors).values()){
            return editor.isEmpty();
        }
    }
    return false;
}
function selectEditors(editors) {
    for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors)){
        editor.unselect();
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).clear();
    for (const editor of editors){
        if (editor.isEmpty()) {
            continue;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectedEditors).add(editor);
        editor.select();
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dispatchUpdateStates, dispatchUpdateStates).call(this, {
        hasSelectedEditor: this.hasSelection
    });
}
; // ./src/display/editor/alt_text.js
var _altText1 = /*#__PURE__*/ new WeakMap(), _altTextDecorative = /*#__PURE__*/ new WeakMap(), _altTextButton = /*#__PURE__*/ new WeakMap(), _altTextButtonLabel = /*#__PURE__*/ new WeakMap(), _altTextTooltip = /*#__PURE__*/ new WeakMap(), _altTextTooltipTimeout = /*#__PURE__*/ new WeakMap(), _altTextWasFromKeyBoard = /*#__PURE__*/ new WeakMap(), _badge = /*#__PURE__*/ new WeakMap(), _editor1 = /*#__PURE__*/ new WeakMap(), _guessedText = /*#__PURE__*/ new WeakMap(), _textWithDisclaimer = /*#__PURE__*/ new WeakMap(), _useNewAltTextFlow = /*#__PURE__*/ new WeakMap(), _label = /*#__PURE__*/ new WeakMap(), _setState = /*#__PURE__*/ new WeakSet();
class AltText {
    static initialize(l10n) {
        var _AltText;
        var __l10n;
        (__l10n = (_AltText = AltText)._l10n) !== null && __l10n !== void 0 ? __l10n : _AltText._l10n = l10n;
    }
    async render() {
        const altText = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextButton, document.createElement("button"));
        altText.className = "altText";
        altText.tabIndex = "0";
        const label = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextButtonLabel, document.createElement("span"));
        altText.append(label);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _useNewAltTextFlow)) {
            altText.classList.add("new");
            altText.setAttribute("data-l10n-id", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AltText, AltText, _l10nNewButton).missing);
            label.setAttribute("data-l10n-id", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AltText, AltText, _l10nNewButton)["missing-label"]);
        } else {
            altText.setAttribute("data-l10n-id", "pdfjs-editor-alt-text-button");
            label.setAttribute("data-l10n-id", "pdfjs-editor-alt-text-button-label");
        }
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor1)._uiManager._signal;
        altText.addEventListener("contextmenu", noContextMenu, {
            signal
        });
        altText.addEventListener("pointerdown", (event)=>event.stopPropagation(), {
            signal
        });
        const onClick = (event)=>{
            event.preventDefault();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor1)._uiManager.editAltText((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor1));
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _useNewAltTextFlow)) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor1)._reportTelemetry({
                    action: "pdfjs.image.alt_text.image_status_label_clicked",
                    data: {
                        label: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _label)
                    }
                });
            }
        };
        altText.addEventListener("click", onClick, {
            capture: true,
            signal
        });
        altText.addEventListener("keydown", (event)=>{
            if (event.target === altText && event.key === "Enter") {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextWasFromKeyBoard, true);
                onClick(event);
            }
        }, {
            signal
        });
        await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setState, setState).call(this);
        return altText;
    }
    finish() {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextButton)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextButton).focus({
            focusVisible: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextWasFromKeyBoard)
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextWasFromKeyBoard, false);
    }
    isEmpty() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _useNewAltTextFlow)) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1) === null;
        }
        return !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1) && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextDecorative);
    }
    hasData() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _useNewAltTextFlow)) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1) !== null || !!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _guessedText);
        }
        return this.isEmpty();
    }
    get guessedText() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _guessedText);
    }
    async setGuessedText(guessedText) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1) !== null) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _guessedText, guessedText);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textWithDisclaimer, await AltText._l10n.get("pdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer", {
            generatedAltText: guessedText
        }));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setState, setState).call(this);
    }
    toggleAltTextBadge() {
        let visibility = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _useNewAltTextFlow) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1)) {
            var _class_private_field_get;
            (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _badge)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.remove();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _badge, null);
            return;
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _badge)) {
            const badge = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _badge, document.createElement("div"));
            badge.className = "noAltTextBadge";
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor1).div.append(badge);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _badge).classList.toggle("hidden", !visibility);
    }
    serialize(isForCopying) {
        let altText = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1);
        if (!isForCopying && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _guessedText) === altText) {
            altText = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textWithDisclaimer);
        }
        return {
            altText,
            decorative: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextDecorative),
            guessedText: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _guessedText),
            textWithDisclaimer: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textWithDisclaimer)
        };
    }
    get data() {
        return {
            altText: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1),
            decorative: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextDecorative)
        };
    }
    set data(param) {
        let { altText, decorative, guessedText, textWithDisclaimer, cancel = false } = param;
        if (guessedText) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _guessedText, guessedText);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textWithDisclaimer, textWithDisclaimer);
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1) === altText && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextDecorative) === decorative) {
            return;
        }
        if (!cancel) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1, altText);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextDecorative, decorative);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setState, setState).call(this);
    }
    toggle() {
        let enabled = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextButton)) {
            return;
        }
        if (!enabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltipTimeout)) {
            clearTimeout((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltipTimeout));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltipTimeout, null);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextButton).disabled = !enabled;
    }
    shown() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor1)._reportTelemetry({
            action: "pdfjs.image.alt_text.image_status_label_displayed",
            data: {
                label: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _label)
            }
        });
    }
    destroy() {
        var _class_private_field_get, _class_private_field_get1;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextButton)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.remove();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextButton, null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextButtonLabel, null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltip, null);
        (_class_private_field_get1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _badge)) === null || _class_private_field_get1 === void 0 ? void 0 : _class_private_field_get1.remove();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _badge, null);
    }
    constructor(editor){
        var _AltText;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _label, {
            get: get_label,
            set: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setState);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextDecorative, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextButton, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextButtonLabel, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltip, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltipTimeout, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextWasFromKeyBoard, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _badge, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor1, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _guessedText, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textWithDisclaimer, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _useNewAltTextFlow, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor1, editor);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _useNewAltTextFlow, editor._uiManager.useNewAltTextFlow);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(_AltText = AltText, AltText, _l10nNewButton, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AltText, AltText, _l10nNewButton) || Object.freeze({
            added: "pdfjs-editor-new-alt-text-added-button",
            "added-label": "pdfjs-editor-new-alt-text-added-button-label",
            missing: "pdfjs-editor-new-alt-text-missing-button",
            "missing-label": "pdfjs-editor-new-alt-text-missing-button-label",
            review: "pdfjs-editor-new-alt-text-to-review-button",
            "review-label": "pdfjs-editor-new-alt-text-to-review-button-label"
        }));
    }
}
var _l10nNewButton = {
    writable: true,
    value: null
};
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AltText, "_l10n", null);
function get_label() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1) && "added" || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1) === null && this.guessedText && "review" || "missing";
}
async function setState() {
    const button = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextButton);
    if (!button) {
        return;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _useNewAltTextFlow)) {
        var _class_private_field_get;
        button.classList.toggle("done", !!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1));
        button.setAttribute("data-l10n-id", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AltText, AltText, _l10nNewButton)[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _label)]);
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextButtonLabel)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.setAttribute("data-l10n-id", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AltText, AltText, _l10nNewButton)["".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _label), "-label")]);
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1)) {
            var _class_private_field_get1;
            (_class_private_field_get1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltip)) === null || _class_private_field_get1 === void 0 ? void 0 : _class_private_field_get1.remove();
            return;
        }
    } else {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1) && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextDecorative)) {
            var _class_private_field_get2;
            button.classList.remove("done");
            (_class_private_field_get2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltip)) === null || _class_private_field_get2 === void 0 ? void 0 : _class_private_field_get2.remove();
            return;
        }
        button.classList.add("done");
        button.setAttribute("data-l10n-id", "pdfjs-editor-alt-text-edit-button");
    }
    let tooltip = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltip);
    if (!tooltip) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltip, tooltip = document.createElement("span"));
        tooltip.className = "tooltip";
        tooltip.setAttribute("role", "tooltip");
        tooltip.id = "alt-text-tooltip-".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor1).id);
        const DELAY_TO_SHOW_TOOLTIP = 100;
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor1)._uiManager._signal;
        signal.addEventListener("abort", ()=>{
            clearTimeout((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltipTimeout));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltipTimeout, null);
        }, {
            once: true
        });
        button.addEventListener("mouseenter", ()=>{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltipTimeout, setTimeout(()=>{
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltipTimeout, null);
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltip).classList.add("show");
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor1)._reportTelemetry({
                    action: "alt_text_tooltip"
                });
            }, DELAY_TO_SHOW_TOOLTIP));
        }, {
            signal
        });
        button.addEventListener("mouseleave", ()=>{
            var _class_private_field_get;
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltipTimeout)) {
                clearTimeout((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltipTimeout));
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltipTimeout, null);
            }
            (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextTooltip)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.classList.remove("show");
        }, {
            signal
        });
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altTextDecorative)) {
        tooltip.setAttribute("data-l10n-id", "pdfjs-editor-alt-text-decorative-tooltip");
    } else {
        tooltip.removeAttribute("data-l10n-id");
        tooltip.textContent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText1);
    }
    if (!tooltip.parentNode) {
        button.append(tooltip);
    }
    const element = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor1).getElementForAltText();
    element === null || element === void 0 ? void 0 : element.setAttribute("aria-describedby", tooltip.id);
}
; // ./src/display/touch_manager.js
var _container1 = /*#__PURE__*/ new WeakMap(), _isPinching = /*#__PURE__*/ new WeakMap(), _isPinchingStopped = /*#__PURE__*/ new WeakMap(), _isPinchingDisabled = /*#__PURE__*/ new WeakMap(), _onPinchStart = /*#__PURE__*/ new WeakMap(), _onPinching = /*#__PURE__*/ new WeakMap(), _onPinchEnd = /*#__PURE__*/ new WeakMap(), _pointerDownAC = /*#__PURE__*/ new WeakMap(), _signal = /*#__PURE__*/ new WeakMap(), _touchInfo = /*#__PURE__*/ new WeakMap(), _touchManagerAC = /*#__PURE__*/ new WeakMap(), _touchMoveAC = /*#__PURE__*/ new WeakMap(), _onTouchStart = /*#__PURE__*/ new WeakSet(), _onTouchMove = /*#__PURE__*/ new WeakSet(), _onTouchEnd = /*#__PURE__*/ new WeakSet();
class TouchManager {
    get MIN_TOUCH_DISTANCE_TO_PINCH() {
        return 35 / OutputScale.pixelRatio;
    }
    destroy() {
        var _class_private_field_get, _class_private_field_get1;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchManagerAC)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.abort();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchManagerAC, null);
        (_class_private_field_get1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pointerDownAC)) === null || _class_private_field_get1 === void 0 ? void 0 : _class_private_field_get1.abort();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pointerDownAC, null);
    }
    constructor({ container, isPinchingDisabled = null, isPinchingStopped = null, onPinchStart = null, onPinching = null, onPinchEnd = null, signal }){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onTouchStart);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onTouchMove);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onTouchEnd);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container1, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isPinching, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isPinchingStopped, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isPinchingDisabled, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onPinchStart, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onPinching, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onPinchEnd, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pointerDownAC, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signal, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchInfo, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchManagerAC, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchMoveAC, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container1, container);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isPinchingStopped, isPinchingStopped);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isPinchingDisabled, isPinchingDisabled);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onPinchStart, onPinchStart);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onPinching, onPinching);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onPinchEnd, onPinchEnd);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchManagerAC, new AbortController());
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signal, AbortSignal.any([
            signal,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchManagerAC).signal
        ]));
        container.addEventListener("touchstart", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onTouchStart, onTouchStart).bind(this), {
            passive: false,
            signal: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signal)
        });
    }
}
function onTouchStart(evt) {
    var _this, _this1, _ref, _this2, _this3, _ref1, _this4, _this5, _ref2;
    if ((_this = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(_ref = _this1 = this, _isPinchingDisabled)) === null || _this === void 0 ? void 0 : _this.call(_this1)) {
        return;
    }
    if (evt.touches.length === 1) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pointerDownAC)) {
            return;
        }
        const pointerDownAC = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pointerDownAC, new AbortController());
        const signal = AbortSignal.any([
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signal),
            pointerDownAC.signal
        ]);
        const container = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container1);
        const opts = {
            capture: true,
            signal,
            passive: false
        };
        const cancelPointerDown = (e)=>{
            if (e.pointerType === "touch") {
                var _class_private_field_get;
                (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pointerDownAC)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.abort();
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pointerDownAC, null);
            }
        };
        container.addEventListener("pointerdown", (e)=>{
            if (e.pointerType === "touch") {
                stopEvent(e);
                cancelPointerDown(e);
            }
        }, opts);
        container.addEventListener("pointerup", cancelPointerDown, opts);
        container.addEventListener("pointercancel", cancelPointerDown, opts);
        return;
    }
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchMoveAC)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchMoveAC, new AbortController());
        const signal = AbortSignal.any([
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signal),
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchMoveAC).signal
        ]);
        const container = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container1);
        const opt = {
            signal,
            capture: false,
            passive: false
        };
        container.addEventListener("touchmove", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onTouchMove, onTouchMove).bind(this), opt);
        const onTouchEnd1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onTouchEnd, onTouchEnd).bind(this);
        container.addEventListener("touchend", onTouchEnd1, opt);
        container.addEventListener("touchcancel", onTouchEnd1, opt);
        opt.capture = true;
        container.addEventListener("pointerdown", stopEvent, opt);
        container.addEventListener("pointermove", stopEvent, opt);
        container.addEventListener("pointercancel", stopEvent, opt);
        container.addEventListener("pointerup", stopEvent, opt);
        (_this2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(_ref1 = _this3 = this, _onPinchStart)) === null || _this2 === void 0 ? void 0 : _this2.call(_this3);
    }
    stopEvent(evt);
    if (evt.touches.length !== 2 || ((_this4 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(_ref2 = _this5 = this, _isPinchingStopped)) === null || _this4 === void 0 ? void 0 : _this4.call(_this5))) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchInfo, null);
        return;
    }
    let [touch0, touch1] = evt.touches;
    if (touch0.identifier > touch1.identifier) {
        [touch0, touch1] = [
            touch1,
            touch0
        ];
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchInfo, {
        touch0X: touch0.screenX,
        touch0Y: touch0.screenY,
        touch1X: touch1.screenX,
        touch1Y: touch1.screenY
    });
}
function onTouchMove(evt) {
    var _this, _this1, _ref;
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchInfo) || evt.touches.length !== 2) {
        return;
    }
    stopEvent(evt);
    let [touch0, touch1] = evt.touches;
    if (touch0.identifier > touch1.identifier) {
        [touch0, touch1] = [
            touch1,
            touch0
        ];
    }
    const { screenX: screen0X, screenY: screen0Y } = touch0;
    const { screenX: screen1X, screenY: screen1Y } = touch1;
    const touchInfo = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchInfo);
    const { touch0X: pTouch0X, touch0Y: pTouch0Y, touch1X: pTouch1X, touch1Y: pTouch1Y } = touchInfo;
    const prevGapX = pTouch1X - pTouch0X;
    const prevGapY = pTouch1Y - pTouch0Y;
    const currGapX = screen1X - screen0X;
    const currGapY = screen1Y - screen0Y;
    const distance = Math.hypot(currGapX, currGapY) || 1;
    const pDistance = Math.hypot(prevGapX, prevGapY) || 1;
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isPinching) && Math.abs(pDistance - distance) <= TouchManager.MIN_TOUCH_DISTANCE_TO_PINCH) {
        return;
    }
    touchInfo.touch0X = screen0X;
    touchInfo.touch0Y = screen0Y;
    touchInfo.touch1X = screen1X;
    touchInfo.touch1Y = screen1Y;
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isPinching)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isPinching, true);
        return;
    }
    const origin = [
        (screen0X + screen1X) / 2,
        (screen0Y + screen1Y) / 2
    ];
    (_this = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(_ref = _this1 = this, _onPinching)) === null || _this === void 0 ? void 0 : _this.call(_this1, origin, pDistance, distance);
}
function onTouchEnd(evt) {
    var _this, _this1, _ref;
    if (evt.touches.length >= 2) {
        return;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchMoveAC)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchMoveAC).abort();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchMoveAC, null);
        (_this = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(_ref = _this1 = this, _onPinchEnd)) === null || _this === void 0 ? void 0 : _this.call(_this1);
    }
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchInfo)) {
        return;
    }
    stopEvent(evt);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchInfo, null);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isPinching, false);
}
; // ./src/display/editor/editor.js
var _accessibilityData = /*#__PURE__*/ new WeakMap(), _allResizerDivs = /*#__PURE__*/ new WeakMap(), _altText2 = /*#__PURE__*/ new WeakMap(), _disabled = /*#__PURE__*/ new WeakMap(), _dragPointerId = /*#__PURE__*/ new WeakMap(), _dragPointerType = /*#__PURE__*/ new WeakMap(), _keepAspectRatio = /*#__PURE__*/ new WeakMap(), _resizersDiv = /*#__PURE__*/ new WeakMap(), _lastPointerCoords = /*#__PURE__*/ new WeakMap(), _savedDimensions = /*#__PURE__*/ new WeakMap(), _focusAC = /*#__PURE__*/ new WeakMap(), _focusedResizerName = /*#__PURE__*/ new WeakMap(), _hasBeenClicked = /*#__PURE__*/ new WeakMap(), _initialRect = /*#__PURE__*/ new WeakMap(), _isEditing = /*#__PURE__*/ new WeakMap(), _isInEditMode = /*#__PURE__*/ new WeakMap(), _isResizerEnabledForKeyboard = /*#__PURE__*/ new WeakMap(), _moveInDOMTimeout = /*#__PURE__*/ new WeakMap(), _prevDragX = /*#__PURE__*/ new WeakMap(), _prevDragY = /*#__PURE__*/ new WeakMap(), _telemetryTimeouts = /*#__PURE__*/ new WeakMap(), _touchManager = /*#__PURE__*/ new WeakMap(), _isDraggable = /*#__PURE__*/ new WeakMap(), _zIndex = /*#__PURE__*/ new WeakMap(), _translate = /*#__PURE__*/ new WeakSet(), _getRotationMatrix = /*#__PURE__*/ new WeakSet(), _createResizers = /*#__PURE__*/ new WeakSet(), _resizerPointerdown = /*#__PURE__*/ new WeakSet(), _resize = /*#__PURE__*/ new WeakSet(), _addResizeToUndoStack = /*#__PURE__*/ new WeakSet(), _resizerPointermove = /*#__PURE__*/ new WeakSet(), _touchPinchStartCallback = /*#__PURE__*/ new WeakSet(), _touchPinchCallback = /*#__PURE__*/ new WeakSet(), _touchPinchEndCallback = /*#__PURE__*/ new WeakSet(), _selectOnPointerEvent = /*#__PURE__*/ new WeakSet(), _setUpDragSession = /*#__PURE__*/ new WeakSet(), _addFocusListeners = /*#__PURE__*/ new WeakSet(), _resizerKeydown = /*#__PURE__*/ new WeakSet(), _resizerBlur = /*#__PURE__*/ new WeakSet(), _resizerFocus = /*#__PURE__*/ new WeakSet(), _setResizerTabIndex = /*#__PURE__*/ new WeakSet(), _stopResizing = /*#__PURE__*/ new WeakSet();
class AnnotationEditor {
    static get _resizerKeyboardManager() {
        const resize = AnnotationEditor.prototype._resizeWithKeyboard;
        const small = AnnotationEditorUIManager.TRANSLATE_SMALL;
        const big = AnnotationEditorUIManager.TRANSLATE_BIG;
        return shadow(this, "_resizerKeyboardManager", new KeyboardManager([
            [
                [
                    "ArrowLeft",
                    "mac+ArrowLeft"
                ],
                resize,
                {
                    args: [
                        -small,
                        0
                    ]
                }
            ],
            [
                [
                    "ctrl+ArrowLeft",
                    "mac+shift+ArrowLeft"
                ],
                resize,
                {
                    args: [
                        -big,
                        0
                    ]
                }
            ],
            [
                [
                    "ArrowRight",
                    "mac+ArrowRight"
                ],
                resize,
                {
                    args: [
                        small,
                        0
                    ]
                }
            ],
            [
                [
                    "ctrl+ArrowRight",
                    "mac+shift+ArrowRight"
                ],
                resize,
                {
                    args: [
                        big,
                        0
                    ]
                }
            ],
            [
                [
                    "ArrowUp",
                    "mac+ArrowUp"
                ],
                resize,
                {
                    args: [
                        0,
                        -small
                    ]
                }
            ],
            [
                [
                    "ctrl+ArrowUp",
                    "mac+shift+ArrowUp"
                ],
                resize,
                {
                    args: [
                        0,
                        -big
                    ]
                }
            ],
            [
                [
                    "ArrowDown",
                    "mac+ArrowDown"
                ],
                resize,
                {
                    args: [
                        0,
                        small
                    ]
                }
            ],
            [
                [
                    "ctrl+ArrowDown",
                    "mac+shift+ArrowDown"
                ],
                resize,
                {
                    args: [
                        0,
                        big
                    ]
                }
            ],
            [
                [
                    "Escape",
                    "mac+Escape"
                ],
                AnnotationEditor.prototype._stopResizingWithKeyboard
            ]
        ]));
    }
    get editorType() {
        return Object.getPrototypeOf(this).constructor._type;
    }
    static get isDrawer() {
        return false;
    }
    static get _defaultLineColor() {
        return shadow(this, "_defaultLineColor", this._colorManager.getHexCode("CanvasText"));
    }
    static deleteAnnotationElement(editor) {
        const fakeEditor = new FakeEditor({
            id: editor.parent.getNextId(),
            parent: editor.parent,
            uiManager: editor._uiManager
        });
        fakeEditor.annotationElementId = editor.annotationElementId;
        fakeEditor.deleted = true;
        fakeEditor._uiManager.addToAnnotationStorage(fakeEditor);
    }
    static initialize(l10n, _uiManager) {
        var _AnnotationEditor, _AnnotationEditor1;
        var __l10n;
        (__l10n = (_AnnotationEditor = AnnotationEditor)._l10n) !== null && __l10n !== void 0 ? __l10n : _AnnotationEditor._l10n = l10n;
        (_AnnotationEditor1 = AnnotationEditor)._l10nResizer || (_AnnotationEditor1._l10nResizer = Object.freeze({
            topLeft: "pdfjs-editor-resizer-top-left",
            topMiddle: "pdfjs-editor-resizer-top-middle",
            topRight: "pdfjs-editor-resizer-top-right",
            middleRight: "pdfjs-editor-resizer-middle-right",
            bottomRight: "pdfjs-editor-resizer-bottom-right",
            bottomMiddle: "pdfjs-editor-resizer-bottom-middle",
            bottomLeft: "pdfjs-editor-resizer-bottom-left",
            middleLeft: "pdfjs-editor-resizer-middle-left"
        }));
        if (AnnotationEditor._borderLineWidth !== -1) {
            return;
        }
        const style = getComputedStyle(document.documentElement);
        AnnotationEditor._borderLineWidth = parseFloat(style.getPropertyValue("--outline-width")) || 0;
    }
    static updateDefaultParams(_type, _value) {}
    static get defaultPropertiesToUpdate() {
        return [];
    }
    static isHandlingMimeForPasting(mime) {
        return false;
    }
    static paste(item, parent) {
        unreachable("Not implemented");
    }
    get propertiesToUpdate() {
        return [];
    }
    get _isDraggable() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDraggable);
    }
    set _isDraggable(value) {
        var _this_div;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDraggable, value);
        (_this_div = this.div) === null || _this_div === void 0 ? void 0 : _this_div.classList.toggle("draggable", value);
    }
    get isEnterHandled() {
        return true;
    }
    center() {
        const [pageWidth, pageHeight] = this.pageDimensions;
        switch(this.parentRotation){
            case 90:
                this.x -= this.height * pageHeight / (pageWidth * 2);
                this.y += this.width * pageWidth / (pageHeight * 2);
                break;
            case 180:
                this.x += this.width / 2;
                this.y += this.height / 2;
                break;
            case 270:
                this.x += this.height * pageHeight / (pageWidth * 2);
                this.y -= this.width * pageWidth / (pageHeight * 2);
                break;
            default:
                this.x -= this.width / 2;
                this.y -= this.height / 2;
                break;
        }
        this.fixAndSetPosition();
    }
    addCommands(params) {
        this._uiManager.addCommands(params);
    }
    get currentLayer() {
        return this._uiManager.currentLayer;
    }
    setInBackground() {
        this.div.style.zIndex = 0;
    }
    setInForeground() {
        this.div.style.zIndex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _zIndex);
    }
    setParent(parent) {
        if (parent !== null) {
            this.pageIndex = parent.pageIndex;
            this.pageDimensions = parent.pageDimensions;
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _stopResizing, stopResizing).call(this);
        }
        this.parent = parent;
    }
    focusin(event) {
        if (!this._focusEventsAllowed) {
            return;
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasBeenClicked)) {
            this.parent.setSelected(this);
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasBeenClicked, false);
        }
    }
    focusout(event) {
        var _this_parent;
        if (!this._focusEventsAllowed) {
            return;
        }
        if (!this.isAttachedToDOM) {
            return;
        }
        const target = event.relatedTarget;
        if (target === null || target === void 0 ? void 0 : target.closest("#".concat(this.id))) {
            return;
        }
        event.preventDefault();
        if (!((_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.isMultipleSelection)) {
            this.commitOrRemove();
        }
    }
    commitOrRemove() {
        if (this.isEmpty()) {
            this.remove();
        } else {
            this.commit();
        }
    }
    commit() {
        this.addToAnnotationStorage();
    }
    addToAnnotationStorage() {
        this._uiManager.addToAnnotationStorage(this);
    }
    setAt(x, y, tx, ty) {
        const [width, height] = this.parentDimensions;
        [tx, ty] = this.screenToPageTranslation(tx, ty);
        this.x = (x + tx) / width;
        this.y = (y + ty) / height;
        this.fixAndSetPosition();
    }
    _moveAfterPaste(baseX, baseY) {
        const [parentWidth, parentHeight] = this.parentDimensions;
        this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);
        this._onTranslated();
    }
    translate(x, y) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translate, translate).call(this, this.parentDimensions, x, y);
    }
    translateInPage(x, y) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect) || [
            this.x,
            this.y,
            this.width,
            this.height
        ]);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translate, translate).call(this, this.pageDimensions, x, y);
        this.div.scrollIntoView({
            block: "nearest"
        });
    }
    translationDone() {
        this._onTranslated(this.x, this.y);
    }
    drag(tx, ty) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect) || [
            this.x,
            this.y,
            this.width,
            this.height
        ]);
        const { div, parentDimensions: [parentWidth, parentHeight] } = this;
        this.x += tx / parentWidth;
        this.y += ty / parentHeight;
        if (this.parent && (this.x < 0 || this.x > 1 || this.y < 0 || this.y > 1)) {
            const { x, y } = this.div.getBoundingClientRect();
            if (this.parent.findNewParent(this, x, y)) {
                this.x -= Math.floor(this.x);
                this.y -= Math.floor(this.y);
            }
        }
        let { x, y } = this;
        const [bx, by] = this.getBaseTranslation();
        x += bx;
        y += by;
        const { style } = div;
        style.left = "".concat((100 * x).toFixed(2), "%");
        style.top = "".concat((100 * y).toFixed(2), "%");
        this._onTranslating(x, y);
        div.scrollIntoView({
            block: "nearest"
        });
    }
    _onTranslating(x, y) {}
    _onTranslated(x, y) {}
    get _hasBeenMoved() {
        return !!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect) && ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect)[0] !== this.x || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect)[1] !== this.y);
    }
    get _hasBeenResized() {
        return !!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect) && ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect)[2] !== this.width || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect)[3] !== this.height);
    }
    getBaseTranslation() {
        const [parentWidth, parentHeight] = this.parentDimensions;
        const { _borderLineWidth } = AnnotationEditor;
        const x = _borderLineWidth / parentWidth;
        const y = _borderLineWidth / parentHeight;
        switch(this.rotation){
            case 90:
                return [
                    -x,
                    y
                ];
            case 180:
                return [
                    x,
                    y
                ];
            case 270:
                return [
                    x,
                    -y
                ];
            default:
                return [
                    -x,
                    -y
                ];
        }
    }
    get _mustFixPosition() {
        return true;
    }
    fixAndSetPosition() {
        let rotation = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.rotation;
        const { div: { style }, pageDimensions: [pageWidth, pageHeight] } = this;
        let { x, y, width, height } = this;
        width *= pageWidth;
        height *= pageHeight;
        x *= pageWidth;
        y *= pageHeight;
        if (this._mustFixPosition) {
            switch(rotation){
                case 0:
                    x = MathClamp(x, 0, pageWidth - width);
                    y = MathClamp(y, 0, pageHeight - height);
                    break;
                case 90:
                    x = MathClamp(x, 0, pageWidth - height);
                    y = MathClamp(y, width, pageHeight);
                    break;
                case 180:
                    x = MathClamp(x, width, pageWidth);
                    y = MathClamp(y, height, pageHeight);
                    break;
                case 270:
                    x = MathClamp(x, height, pageWidth);
                    y = MathClamp(y, 0, pageHeight - width);
                    break;
            }
        }
        this.x = x /= pageWidth;
        this.y = y /= pageHeight;
        const [bx, by] = this.getBaseTranslation();
        x += bx;
        y += by;
        style.left = "".concat((100 * x).toFixed(2), "%");
        style.top = "".concat((100 * y).toFixed(2), "%");
        this.moveInDOM();
    }
    screenToPageTranslation(x, y) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditor, AnnotationEditor, rotatePoint).call(AnnotationEditor, x, y, this.parentRotation);
    }
    pageTranslationToScreen(x, y) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditor, AnnotationEditor, rotatePoint).call(AnnotationEditor, x, y, 360 - this.parentRotation);
    }
    get parentScale() {
        return this._uiManager.viewParameters.realScale;
    }
    get parentRotation() {
        return (this._uiManager.viewParameters.rotation + this.pageRotation) % 360;
    }
    get parentDimensions() {
        const { parentScale, pageDimensions: [pageWidth, pageHeight] } = this;
        return [
            pageWidth * parentScale,
            pageHeight * parentScale
        ];
    }
    setDims(width, height) {
        const [parentWidth, parentHeight] = this.parentDimensions;
        const { style } = this.div;
        style.width = "".concat((100 * width / parentWidth).toFixed(2), "%");
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keepAspectRatio)) {
            style.height = "".concat((100 * height / parentHeight).toFixed(2), "%");
        }
    }
    fixDims() {
        const { style } = this.div;
        const { height, width } = style;
        const widthPercent = width.endsWith("%");
        const heightPercent = !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keepAspectRatio) && height.endsWith("%");
        if (widthPercent && heightPercent) {
            return;
        }
        const [parentWidth, parentHeight] = this.parentDimensions;
        if (!widthPercent) {
            style.width = "".concat((100 * parseFloat(width) / parentWidth).toFixed(2), "%");
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keepAspectRatio) && !heightPercent) {
            style.height = "".concat((100 * parseFloat(height) / parentHeight).toFixed(2), "%");
        }
    }
    getInitialTranslation() {
        return [
            0,
            0
        ];
    }
    _onResized() {}
    static _round(x) {
        return Math.round(x * 10000) / 10000;
    }
    _onResizing() {}
    altTextFinish() {
        var _class_private_field_get;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.finish();
    }
    async addEditToolbar() {
        if (this._editToolbar || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isInEditMode)) {
            return this._editToolbar;
        }
        this._editToolbar = new EditorToolbar(this);
        this.div.append(this._editToolbar.render());
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) {
            await this._editToolbar.addAltText((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2));
        }
        return this._editToolbar;
    }
    removeEditToolbar() {
        var _class_private_field_get;
        if (!this._editToolbar) {
            return;
        }
        this._editToolbar.remove();
        this._editToolbar = null;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.destroy();
    }
    addContainer(container) {
        var _this__editToolbar;
        const editToolbarDiv = (_this__editToolbar = this._editToolbar) === null || _this__editToolbar === void 0 ? void 0 : _this__editToolbar.div;
        if (editToolbarDiv) {
            editToolbarDiv.before(container);
        } else {
            this.div.append(container);
        }
    }
    getClientDimensions() {
        return this.div.getBoundingClientRect();
    }
    async addAltTextButton() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) {
            return;
        }
        AltText.initialize(AnnotationEditor._l10n);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2, new AltText(this));
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _accessibilityData)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2).data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _accessibilityData);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _accessibilityData, null);
        }
        await this.addEditToolbar();
    }
    get altTextData() {
        var _class_private_field_get;
        return (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.data;
    }
    set altTextData(data) {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2).data = data;
    }
    get guessedAltText() {
        var _class_private_field_get;
        return (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.guessedText;
    }
    async setGuessedAltText(text) {
        var _class_private_field_get;
        await ((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.setGuessedText(text));
    }
    serializeAltText(isForCopying) {
        var _class_private_field_get;
        return (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.serialize(isForCopying);
    }
    hasAltText() {
        return !!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2) && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2).isEmpty();
    }
    hasAltTextData() {
        var _class_private_field_get;
        var _class_private_field_get_hasData;
        return (_class_private_field_get_hasData = (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.hasData()) !== null && _class_private_field_get_hasData !== void 0 ? _class_private_field_get_hasData : false;
    }
    render() {
        var _this__uiManager__editorUndoBar;
        const div = this.div = document.createElement("div");
        div.setAttribute("data-editor-rotation", (360 - this.rotation) % 360);
        div.className = this.name;
        div.setAttribute("id", this.id);
        div.tabIndex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _disabled) ? -1 : 0;
        div.setAttribute("role", "application");
        if (this.defaultL10nId) {
            div.setAttribute("data-l10n-id", this.defaultL10nId);
        }
        if (!this._isVisible) {
            div.classList.add("hidden");
        }
        this.setInForeground();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addFocusListeners, addFocusListeners).call(this);
        const [parentWidth, parentHeight] = this.parentDimensions;
        if (this.parentRotation % 180 !== 0) {
            div.style.maxWidth = "".concat((100 * parentHeight / parentWidth).toFixed(2), "%");
            div.style.maxHeight = "".concat((100 * parentWidth / parentHeight).toFixed(2), "%");
        }
        const [tx, ty] = this.getInitialTranslation();
        this.translate(tx, ty);
        bindEvents(this, div, [
            "keydown",
            "pointerdown",
            "dblclick"
        ]);
        if (this.isResizable && this._uiManager._supportsPinchToZoom) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchManager, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchManager) || new TouchManager({
                container: div,
                isPinchingDisabled: ()=>!this.isSelected,
                onPinchStart: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchPinchStartCallback, touchPinchStartCallback).bind(this),
                onPinching: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchPinchCallback, touchPinchCallback).bind(this),
                onPinchEnd: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchPinchEndCallback, touchPinchEndCallback).bind(this),
                signal: this._uiManager._signal
            }));
        }
        (_this__uiManager__editorUndoBar = this._uiManager._editorUndoBar) === null || _this__uiManager__editorUndoBar === void 0 ? void 0 : _this__uiManager__editorUndoBar.hide();
        return div;
    }
    pointerdown(event) {
        const { isMac } = util_FeatureTest.platform;
        if (event.button !== 0 || event.ctrlKey && isMac) {
            event.preventDefault();
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasBeenClicked, true);
        if (this._isDraggable) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setUpDragSession, setUpDragSession).call(this, event);
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectOnPointerEvent, selectOnPointerEvent).call(this, event);
    }
    _onStartDragging() {}
    _onStopDragging() {}
    moveInDOM() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _moveInDOMTimeout)) {
            clearTimeout((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _moveInDOMTimeout));
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _moveInDOMTimeout, setTimeout(()=>{
            var _this_parent;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _moveInDOMTimeout, null);
            (_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.moveEditorInDOM(this);
        }, 0));
    }
    _setParentAndPosition(parent, x, y) {
        parent.changeParent(this);
        this.x = x;
        this.y = y;
        this.fixAndSetPosition();
        this._onTranslated();
    }
    getRect(tx, ty) {
        let rotation = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.rotation;
        const scale = this.parentScale;
        const [pageWidth, pageHeight] = this.pageDimensions;
        const [pageX, pageY] = this.pageTranslation;
        const shiftX = tx / scale;
        const shiftY = ty / scale;
        const x = this.x * pageWidth;
        const y = this.y * pageHeight;
        const width = this.width * pageWidth;
        const height = this.height * pageHeight;
        switch(rotation){
            case 0:
                return [
                    x + shiftX + pageX,
                    pageHeight - y - shiftY - height + pageY,
                    x + shiftX + width + pageX,
                    pageHeight - y - shiftY + pageY
                ];
            case 90:
                return [
                    x + shiftY + pageX,
                    pageHeight - y + shiftX + pageY,
                    x + shiftY + height + pageX,
                    pageHeight - y + shiftX + width + pageY
                ];
            case 180:
                return [
                    x - shiftX - width + pageX,
                    pageHeight - y + shiftY + pageY,
                    x - shiftX + pageX,
                    pageHeight - y + shiftY + height + pageY
                ];
            case 270:
                return [
                    x - shiftY - height + pageX,
                    pageHeight - y - shiftX - width + pageY,
                    x - shiftY + pageX,
                    pageHeight - y - shiftX + pageY
                ];
            default:
                throw new Error("Invalid rotation");
        }
    }
    getRectInCurrentCoords(rect, pageHeight) {
        const [x1, y1, x2, y2] = rect;
        const width = x2 - x1;
        const height = y2 - y1;
        switch(this.rotation){
            case 0:
                return [
                    x1,
                    pageHeight - y2,
                    width,
                    height
                ];
            case 90:
                return [
                    x1,
                    pageHeight - y1,
                    height,
                    width
                ];
            case 180:
                return [
                    x2,
                    pageHeight - y1,
                    width,
                    height
                ];
            case 270:
                return [
                    x2,
                    pageHeight - y2,
                    height,
                    width
                ];
            default:
                throw new Error("Invalid rotation");
        }
    }
    onceAdded(focus) {}
    isEmpty() {
        return false;
    }
    enableEditMode() {
        if (this.isInEditMode()) {
            return false;
        }
        this.parent.setEditingState(false);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isInEditMode, true);
        return true;
    }
    disableEditMode() {
        if (!this.isInEditMode()) {
            return false;
        }
        this.parent.setEditingState(true);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isInEditMode, false);
        return true;
    }
    isInEditMode() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isInEditMode);
    }
    shouldGetKeyboardEvents() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isResizerEnabledForKeyboard);
    }
    needsToBeRebuilt() {
        return this.div && !this.isAttachedToDOM;
    }
    get isOnScreen() {
        const { top, left, bottom, right } = this.getClientDimensions();
        const { innerHeight, innerWidth } = window;
        return left < innerWidth && right > 0 && top < innerHeight && bottom > 0;
    }
    rebuild() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addFocusListeners, addFocusListeners).call(this);
    }
    rotate(_angle) {}
    resize() {}
    serializeDeleted() {
        var _this__initialData;
        return {
            id: this.annotationElementId,
            deleted: true,
            pageIndex: this.pageIndex,
            popupRef: ((_this__initialData = this._initialData) === null || _this__initialData === void 0 ? void 0 : _this__initialData.popupRef) || ""
        };
    }
    serialize() {
        let isForCopying = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false, context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
        unreachable("An editor must be serializable");
    }
    static async deserialize(data, parent, uiManager) {
        const editor = new this.prototype.constructor({
            parent,
            id: parent.getNextId(),
            uiManager
        });
        editor.rotation = data.rotation;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _accessibilityData, data.accessibilityData);
        editor._isCopy = data.isCopy || false;
        const [pageWidth, pageHeight] = editor.pageDimensions;
        const [x, y, width, height] = editor.getRectInCurrentCoords(data.rect, pageHeight);
        editor.x = x / pageWidth;
        editor.y = y / pageHeight;
        editor.width = width / pageWidth;
        editor.height = height / pageHeight;
        return editor;
    }
    get hasBeenModified() {
        return !!this.annotationElementId && (this.deleted || this.serialize() !== null);
    }
    remove() {
        var _class_private_field_get, _class_private_field_get1;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusAC)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.abort();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusAC, null);
        if (!this.isEmpty()) {
            this.commit();
        }
        if (this.parent) {
            this.parent.remove(this);
        } else {
            this._uiManager.removeEditor(this);
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _moveInDOMTimeout)) {
            clearTimeout((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _moveInDOMTimeout));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _moveInDOMTimeout, null);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _stopResizing, stopResizing).call(this);
        this.removeEditToolbar();
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _telemetryTimeouts)) {
            for (const timeout of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _telemetryTimeouts).values()){
                clearTimeout(timeout);
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _telemetryTimeouts, null);
        }
        this.parent = null;
        (_class_private_field_get1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchManager)) === null || _class_private_field_get1 === void 0 ? void 0 : _class_private_field_get1.destroy();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchManager, null);
    }
    get isResizable() {
        return false;
    }
    makeResizable() {
        if (this.isResizable) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createResizers, createResizers).call(this);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv).classList.remove("hidden");
        }
    }
    get toolbarPosition() {
        return null;
    }
    keydown(event) {
        if (!this.isResizable || event.target !== this.div || event.key !== "Enter") {
            return;
        }
        this._uiManager.setSelected(this);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _savedDimensions, {
            savedX: this.x,
            savedY: this.y,
            savedWidth: this.width,
            savedHeight: this.height
        });
        const children = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv).children;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allResizerDivs)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allResizerDivs, Array.from(children));
            const boundResizerKeydown = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizerKeydown, resizerKeydown).bind(this);
            const boundResizerBlur = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizerBlur, resizerBlur).bind(this);
            const signal = this._uiManager._signal;
            for (const div of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allResizerDivs)){
                const name = div.getAttribute("data-resizer-name");
                div.setAttribute("role", "spinbutton");
                div.addEventListener("keydown", boundResizerKeydown, {
                    signal
                });
                div.addEventListener("blur", boundResizerBlur, {
                    signal
                });
                div.addEventListener("focus", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizerFocus, resizerFocus).bind(this, name), {
                    signal
                });
                div.setAttribute("data-l10n-id", AnnotationEditor._l10nResizer[name]);
            }
        }
        const first = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allResizerDivs)[0];
        let firstPosition = 0;
        for (const div of children){
            if (div === first) {
                break;
            }
            firstPosition++;
        }
        const nextFirstPosition = (360 - this.rotation + this.parentRotation) % 360 / 90 * ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allResizerDivs).length / 4);
        if (nextFirstPosition !== firstPosition) {
            if (nextFirstPosition < firstPosition) {
                for(let i = 0; i < firstPosition - nextFirstPosition; i++){
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv).append((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv).firstChild);
                }
            } else if (nextFirstPosition > firstPosition) {
                for(let i = 0; i < nextFirstPosition - firstPosition; i++){
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv).firstChild.before((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv).lastChild);
                }
            }
            let i = 0;
            for (const child of children){
                const div = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allResizerDivs)[i++];
                const name = div.getAttribute("data-resizer-name");
                child.setAttribute("data-l10n-id", AnnotationEditor._l10nResizer[name]);
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setResizerTabIndex, setResizerTabIndex).call(this, 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isResizerEnabledForKeyboard, true);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv).firstChild.focus({
            focusVisible: true
        });
        event.preventDefault();
        event.stopImmediatePropagation();
    }
    _resizeWithKeyboard(x, y) {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isResizerEnabledForKeyboard)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizerPointermove, resizerPointermove).call(this, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusedResizerName), {
            deltaX: x,
            deltaY: y,
            fromKeyboard: true
        });
    }
    _stopResizingWithKeyboard() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _stopResizing, stopResizing).call(this);
        this.div.focus();
    }
    select() {
        var _this_div, _this__editToolbar, _class_private_field_get;
        if (this.isSelected && this._editToolbar) {
            return;
        }
        this.isSelected = true;
        this.makeResizable();
        (_this_div = this.div) === null || _this_div === void 0 ? void 0 : _this_div.classList.add("selectedEditor");
        if (!this._editToolbar) {
            this.addEditToolbar().then(()=>{
                var _this_div;
                if ((_this_div = this.div) === null || _this_div === void 0 ? void 0 : _this_div.classList.contains("selectedEditor")) {
                    var _this__editToolbar;
                    (_this__editToolbar = this._editToolbar) === null || _this__editToolbar === void 0 ? void 0 : _this__editToolbar.show();
                }
            });
            return;
        }
        (_this__editToolbar = this._editToolbar) === null || _this__editToolbar === void 0 ? void 0 : _this__editToolbar.show();
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.toggleAltTextBadge(false);
    }
    unselect() {
        var _class_private_field_get, _this_div, _this_div1, _this__editToolbar, _class_private_field_get1;
        if (!this.isSelected) {
            return;
        }
        this.isSelected = false;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.classList.add("hidden");
        (_this_div = this.div) === null || _this_div === void 0 ? void 0 : _this_div.classList.remove("selectedEditor");
        if ((_this_div1 = this.div) === null || _this_div1 === void 0 ? void 0 : _this_div1.contains(document.activeElement)) {
            this._uiManager.currentLayer.div.focus({
                preventScroll: true
            });
        }
        (_this__editToolbar = this._editToolbar) === null || _this__editToolbar === void 0 ? void 0 : _this__editToolbar.hide();
        (_class_private_field_get1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) === null || _class_private_field_get1 === void 0 ? void 0 : _class_private_field_get1.toggleAltTextBadge(true);
    }
    updateParams(type, value) {}
    disableEditing() {}
    enableEditing() {}
    get canChangeContent() {
        return false;
    }
    enterInEditMode() {
        if (!this.canChangeContent) {
            return;
        }
        this.enableEditMode();
        this.div.focus();
    }
    dblclick(event) {
        this.enterInEditMode();
        this.parent.updateToolbar({
            mode: this.constructor._editorType,
            editId: this.id
        });
    }
    getElementForAltText() {
        return this.div;
    }
    get contentDiv() {
        return this.div;
    }
    get isEditing() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEditing);
    }
    set isEditing(value) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEditing, value);
        if (!this.parent) {
            return;
        }
        if (value) {
            this.parent.setSelected(this);
            this.parent.setActiveEditor(this);
        } else {
            this.parent.setActiveEditor(null);
        }
    }
    setAspectRatio(width, height) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keepAspectRatio, true);
        const aspectRatio = width / height;
        const { style } = this.div;
        style.aspectRatio = aspectRatio;
        style.height = "auto";
    }
    static get MIN_SIZE() {
        return 16;
    }
    static canCreateNewEmptyEditor() {
        return true;
    }
    get telemetryInitialData() {
        return {
            action: "added"
        };
    }
    get telemetryFinalData() {
        return null;
    }
    _reportTelemetry(data) {
        let mustWait = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        var _data;
        if (mustWait) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _telemetryTimeouts, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _telemetryTimeouts) || new Map());
            const { action } = data;
            let timeout = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _telemetryTimeouts).get(action);
            if (timeout) {
                clearTimeout(timeout);
            }
            timeout = setTimeout(()=>{
                this._reportTelemetry(data);
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _telemetryTimeouts).delete(action);
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _telemetryTimeouts).size === 0) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _telemetryTimeouts, null);
                }
            }, AnnotationEditor._telemetryTimeout);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _telemetryTimeouts).set(action, timeout);
            return;
        }
        (_data = data).type || (_data.type = this.editorType);
        this._uiManager._eventBus.dispatch("reporttelemetry", {
            source: this,
            details: {
                type: "editing",
                data
            }
        });
    }
    show() {
        let visible = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this._isVisible;
        this.div.classList.toggle("hidden", !visible);
        this._isVisible = visible;
    }
    enable() {
        if (this.div) {
            this.div.tabIndex = 0;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _disabled, false);
    }
    disable() {
        if (this.div) {
            this.div.tabIndex = -1;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _disabled, true);
    }
    renderAnnotationElement(annotation) {
        let content = annotation.container.querySelector(".annotationContent");
        if (!content) {
            content = document.createElement("div");
            content.classList.add("annotationContent", this.editorType);
            annotation.container.prepend(content);
        } else if (content.nodeName === "CANVAS") {
            const canvas = content;
            content = document.createElement("div");
            content.classList.add("annotationContent", this.editorType);
            canvas.before(content);
        }
        return content;
    }
    resetAnnotationElement(annotation) {
        const { firstChild } = annotation.container;
        if ((firstChild === null || firstChild === void 0 ? void 0 : firstChild.nodeName) === "DIV" && firstChild.classList.contains("annotationContent")) {
            firstChild.remove();
        }
    }
    constructor(parameters){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _translate);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getRotationMatrix);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createResizers);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizerPointerdown);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resize);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addResizeToUndoStack);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizerPointermove);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchPinchStartCallback);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchPinchCallback);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchPinchEndCallback);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectOnPointerEvent);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setUpDragSession);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addFocusListeners);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizerKeydown);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizerBlur);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizerFocus);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setResizerTabIndex);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _stopResizing);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _accessibilityData, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allResizerDivs, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _disabled, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dragPointerId, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dragPointerType, {
            writable: true,
            value: ""
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keepAspectRatio, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastPointerCoords, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _savedDimensions, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusAC, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusedResizerName, {
            writable: true,
            value: ""
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasBeenClicked, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEditing, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isInEditMode, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isResizerEnabledForKeyboard, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _moveInDOMTimeout, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _prevDragX, {
            writable: true,
            value: 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _prevDragY, {
            writable: true,
            value: 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _telemetryTimeouts, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchManager, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "isSelected", false);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "_isCopy", false);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "_editToolbar", null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "_initialOptions", Object.create(null));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "_initialData", null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "_isVisible", true);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "_uiManager", null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "_focusEventsAllowed", true);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDraggable, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _zIndex, {
            writable: true,
            value: AnnotationEditor._zIndex++
        });
        this.parent = parameters.parent;
        this.id = parameters.id;
        this.width = this.height = null;
        this.pageIndex = parameters.parent.pageIndex;
        this.name = parameters.name;
        this.div = null;
        this._uiManager = parameters.uiManager;
        this.annotationElementId = null;
        this._willKeepAspectRatio = false;
        this._initialOptions.isCentered = parameters.isCentered;
        this._structTreeParentId = null;
        const { rotation, rawDims: { pageWidth, pageHeight, pageX, pageY } } = this.parent.viewport;
        this.rotation = rotation;
        this.pageRotation = (360 + rotation - this._uiManager.viewParameters.rotation) % 360;
        this.pageDimensions = [
            pageWidth,
            pageHeight
        ];
        this.pageTranslation = [
            pageX,
            pageY
        ];
        const [width, height] = this.parentDimensions;
        this.x = parameters.x / width;
        this.y = parameters.y / height;
        this.isAttachedToDOM = false;
        this.deleted = false;
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditor, "_l10n", null);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditor, "_l10nResizer", null);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditor, "_borderLineWidth", -1);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditor, "_colorManager", new ColorManager());
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditor, "_zIndex", 1);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditor, "_telemetryTimeout", 1000);
function translate(param, x, y) {
    let [width, height] = param;
    [x, y] = this.screenToPageTranslation(x, y);
    this.x += x / width;
    this.y += y / height;
    this._onTranslating(this.x, this.y);
    this.fixAndSetPosition();
}
function rotatePoint(x, y, angle) {
    switch(angle){
        case 90:
            return [
                y,
                -x
            ];
        case 180:
            return [
                -x,
                -y
            ];
        case 270:
            return [
                -y,
                x
            ];
        default:
            return [
                x,
                y
            ];
    }
}
function getRotationMatrix(rotation) {
    switch(rotation){
        case 90:
            {
                const [pageWidth, pageHeight] = this.pageDimensions;
                return [
                    0,
                    -pageWidth / pageHeight,
                    pageHeight / pageWidth,
                    0
                ];
            }
        case 180:
            return [
                -1,
                0,
                0,
                -1
            ];
        case 270:
            {
                const [pageWidth, pageHeight] = this.pageDimensions;
                return [
                    0,
                    pageWidth / pageHeight,
                    -pageHeight / pageWidth,
                    0
                ];
            }
        default:
            return [
                1,
                0,
                0,
                1
            ];
    }
}
function createResizers() {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv)) {
        return;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv, document.createElement("div"));
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv).classList.add("resizers");
    const classes = this._willKeepAspectRatio ? [
        "topLeft",
        "topRight",
        "bottomRight",
        "bottomLeft"
    ] : [
        "topLeft",
        "topMiddle",
        "topRight",
        "middleRight",
        "bottomRight",
        "bottomMiddle",
        "bottomLeft",
        "middleLeft"
    ];
    const signal = this._uiManager._signal;
    for (const name of classes){
        const div = document.createElement("div");
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv).append(div);
        div.classList.add("resizer", name);
        div.setAttribute("data-resizer-name", name);
        div.addEventListener("pointerdown", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizerPointerdown, resizerPointerdown).bind(this, name), {
            signal
        });
        div.addEventListener("contextmenu", noContextMenu, {
            signal
        });
        div.tabIndex = -1;
    }
    this.div.prepend((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv));
}
function resizerPointerdown(name, event) {
    var _class_private_field_get;
    event.preventDefault();
    const { isMac } = util_FeatureTest.platform;
    if (event.button !== 0 || event.ctrlKey && isMac) {
        return;
    }
    (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.toggle(false);
    const savedDraggable = this._isDraggable;
    this._isDraggable = false;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastPointerCoords, [
        event.screenX,
        event.screenY
    ]);
    const ac = new AbortController();
    const signal = this._uiManager.combinedSignal(ac);
    this.parent.togglePointerEvents(false);
    window.addEventListener("pointermove", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizerPointermove, resizerPointermove).bind(this, name), {
        passive: true,
        capture: true,
        signal
    });
    window.addEventListener("touchmove", stopEvent, {
        passive: false,
        signal
    });
    window.addEventListener("contextmenu", noContextMenu, {
        signal
    });
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _savedDimensions, {
        savedX: this.x,
        savedY: this.y,
        savedWidth: this.width,
        savedHeight: this.height
    });
    const savedParentCursor = this.parent.div.style.cursor;
    const savedCursor = this.div.style.cursor;
    this.div.style.cursor = this.parent.div.style.cursor = window.getComputedStyle(event.target).cursor;
    const pointerUpCallback = ()=>{
        var _class_private_field_get;
        ac.abort();
        this.parent.togglePointerEvents(true);
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.toggle(true);
        this._isDraggable = savedDraggable;
        this.parent.div.style.cursor = savedParentCursor;
        this.div.style.cursor = savedCursor;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addResizeToUndoStack, addResizeToUndoStack).call(this);
    };
    window.addEventListener("pointerup", pointerUpCallback, {
        signal
    });
    window.addEventListener("blur", pointerUpCallback, {
        signal
    });
}
function resize(x, y, width, height) {
    this.width = width;
    this.height = height;
    this.x = x;
    this.y = y;
    const [parentWidth, parentHeight] = this.parentDimensions;
    this.setDims(parentWidth * width, parentHeight * height);
    this.fixAndSetPosition();
    this._onResized();
}
function addResizeToUndoStack() {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _savedDimensions)) {
        return;
    }
    const { savedX, savedY, savedWidth, savedHeight } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _savedDimensions);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _savedDimensions, null);
    const newX = this.x;
    const newY = this.y;
    const newWidth = this.width;
    const newHeight = this.height;
    if (newX === savedX && newY === savedY && newWidth === savedWidth && newHeight === savedHeight) {
        return;
    }
    this.addCommands({
        cmd: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resize, resize).bind(this, newX, newY, newWidth, newHeight),
        undo: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resize, resize).bind(this, savedX, savedY, savedWidth, savedHeight),
        mustExec: true
    });
}
function resizerPointermove(name, event) {
    const [parentWidth, parentHeight] = this.parentDimensions;
    const savedX = this.x;
    const savedY = this.y;
    const savedWidth = this.width;
    const savedHeight = this.height;
    const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;
    const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;
    const rotationMatrix = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getRotationMatrix, getRotationMatrix).call(this, this.rotation);
    const transf = (x, y)=>[
            rotationMatrix[0] * x + rotationMatrix[2] * y,
            rotationMatrix[1] * x + rotationMatrix[3] * y
        ];
    const invRotationMatrix = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getRotationMatrix, getRotationMatrix).call(this, 360 - this.rotation);
    const invTransf = (x, y)=>[
            invRotationMatrix[0] * x + invRotationMatrix[2] * y,
            invRotationMatrix[1] * x + invRotationMatrix[3] * y
        ];
    let getPoint;
    let getOpposite;
    let isDiagonal = false;
    let isHorizontal = false;
    switch(name){
        case "topLeft":
            isDiagonal = true;
            getPoint = (w, h)=>[
                    0,
                    0
                ];
            getOpposite = (w, h)=>[
                    w,
                    h
                ];
            break;
        case "topMiddle":
            getPoint = (w, h)=>[
                    w / 2,
                    0
                ];
            getOpposite = (w, h)=>[
                    w / 2,
                    h
                ];
            break;
        case "topRight":
            isDiagonal = true;
            getPoint = (w, h)=>[
                    w,
                    0
                ];
            getOpposite = (w, h)=>[
                    0,
                    h
                ];
            break;
        case "middleRight":
            isHorizontal = true;
            getPoint = (w, h)=>[
                    w,
                    h / 2
                ];
            getOpposite = (w, h)=>[
                    0,
                    h / 2
                ];
            break;
        case "bottomRight":
            isDiagonal = true;
            getPoint = (w, h)=>[
                    w,
                    h
                ];
            getOpposite = (w, h)=>[
                    0,
                    0
                ];
            break;
        case "bottomMiddle":
            getPoint = (w, h)=>[
                    w / 2,
                    h
                ];
            getOpposite = (w, h)=>[
                    w / 2,
                    0
                ];
            break;
        case "bottomLeft":
            isDiagonal = true;
            getPoint = (w, h)=>[
                    0,
                    h
                ];
            getOpposite = (w, h)=>[
                    w,
                    0
                ];
            break;
        case "middleLeft":
            isHorizontal = true;
            getPoint = (w, h)=>[
                    0,
                    h / 2
                ];
            getOpposite = (w, h)=>[
                    w,
                    h / 2
                ];
            break;
    }
    const point = getPoint(savedWidth, savedHeight);
    const oppositePoint = getOpposite(savedWidth, savedHeight);
    let transfOppositePoint = transf(...oppositePoint);
    const oppositeX = AnnotationEditor._round(savedX + transfOppositePoint[0]);
    const oppositeY = AnnotationEditor._round(savedY + transfOppositePoint[1]);
    let ratioX = 1;
    let ratioY = 1;
    let deltaX, deltaY;
    if (!event.fromKeyboard) {
        const { screenX, screenY } = event;
        const [lastScreenX, lastScreenY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastPointerCoords);
        [deltaX, deltaY] = this.screenToPageTranslation(screenX - lastScreenX, screenY - lastScreenY);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastPointerCoords)[0] = screenX;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastPointerCoords)[1] = screenY;
    } else {
        ({ deltaX, deltaY } = event);
    }
    [deltaX, deltaY] = invTransf(deltaX / parentWidth, deltaY / parentHeight);
    if (isDiagonal) {
        const oldDiag = Math.hypot(savedWidth, savedHeight);
        ratioX = ratioY = Math.max(Math.min(Math.hypot(oppositePoint[0] - point[0] - deltaX, oppositePoint[1] - point[1] - deltaY) / oldDiag, 1 / savedWidth, 1 / savedHeight), minWidth / savedWidth, minHeight / savedHeight);
    } else if (isHorizontal) {
        ratioX = MathClamp(Math.abs(oppositePoint[0] - point[0] - deltaX), minWidth, 1) / savedWidth;
    } else {
        ratioY = MathClamp(Math.abs(oppositePoint[1] - point[1] - deltaY), minHeight, 1) / savedHeight;
    }
    const newWidth = AnnotationEditor._round(savedWidth * ratioX);
    const newHeight = AnnotationEditor._round(savedHeight * ratioY);
    transfOppositePoint = transf(...getOpposite(newWidth, newHeight));
    const newX = oppositeX - transfOppositePoint[0];
    const newY = oppositeY - transfOppositePoint[1];
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect) || [
        this.x,
        this.y,
        this.width,
        this.height
    ]);
    this.width = newWidth;
    this.height = newHeight;
    this.x = newX;
    this.y = newY;
    this.setDims(parentWidth * newWidth, parentHeight * newHeight);
    this.fixAndSetPosition();
    this._onResizing();
}
function touchPinchStartCallback() {
    var _class_private_field_get;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _savedDimensions, {
        savedX: this.x,
        savedY: this.y,
        savedWidth: this.width,
        savedHeight: this.height
    });
    (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.toggle(false);
    this.parent.togglePointerEvents(false);
}
function touchPinchCallback(_origin, prevDistance, distance) {
    const slowDownFactor = 0.7;
    let factor = slowDownFactor * (distance / prevDistance) + 1 - slowDownFactor;
    if (factor === 1) {
        return;
    }
    const rotationMatrix = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getRotationMatrix, getRotationMatrix).call(this, this.rotation);
    const transf = (x, y)=>[
            rotationMatrix[0] * x + rotationMatrix[2] * y,
            rotationMatrix[1] * x + rotationMatrix[3] * y
        ];
    const [parentWidth, parentHeight] = this.parentDimensions;
    const savedX = this.x;
    const savedY = this.y;
    const savedWidth = this.width;
    const savedHeight = this.height;
    const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;
    const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;
    factor = Math.max(Math.min(factor, 1 / savedWidth, 1 / savedHeight), minWidth / savedWidth, minHeight / savedHeight);
    const newWidth = AnnotationEditor._round(savedWidth * factor);
    const newHeight = AnnotationEditor._round(savedHeight * factor);
    if (newWidth === savedWidth && newHeight === savedHeight) {
        return;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialRect) || [
        savedX,
        savedY,
        savedWidth,
        savedHeight
    ]);
    const transfCenterPoint = transf(savedWidth / 2, savedHeight / 2);
    const centerX = AnnotationEditor._round(savedX + transfCenterPoint[0]);
    const centerY = AnnotationEditor._round(savedY + transfCenterPoint[1]);
    const newTransfCenterPoint = transf(newWidth / 2, newHeight / 2);
    this.x = centerX - newTransfCenterPoint[0];
    this.y = centerY - newTransfCenterPoint[1];
    this.width = newWidth;
    this.height = newHeight;
    this.setDims(parentWidth * newWidth, parentHeight * newHeight);
    this.fixAndSetPosition();
    this._onResizing();
}
function touchPinchEndCallback() {
    var _class_private_field_get;
    (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _altText2)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.toggle(true);
    this.parent.togglePointerEvents(true);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addResizeToUndoStack, addResizeToUndoStack).call(this);
}
function selectOnPointerEvent(event) {
    const { isMac } = util_FeatureTest.platform;
    if (event.ctrlKey && !isMac || event.shiftKey || event.metaKey && isMac) {
        this.parent.toggleSelected(this);
    } else {
        this.parent.setSelected(this);
    }
}
function setUpDragSession(event) {
    const { isSelected } = this;
    this._uiManager.setUpDragSession();
    let hasDraggingStarted = false;
    const ac = new AbortController();
    const signal = this._uiManager.combinedSignal(ac);
    const opts = {
        capture: true,
        passive: false,
        signal
    };
    const cancelDrag = (e)=>{
        ac.abort();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dragPointerId, null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasBeenClicked, false);
        if (!this._uiManager.endDragSession()) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _selectOnPointerEvent, selectOnPointerEvent).call(this, e);
        }
        if (hasDraggingStarted) {
            this._onStopDragging();
        }
    };
    if (isSelected) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _prevDragX, event.clientX);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _prevDragY, event.clientY);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dragPointerId, event.pointerId);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dragPointerType, event.pointerType);
        window.addEventListener("pointermove", (e)=>{
            if (!hasDraggingStarted) {
                hasDraggingStarted = true;
                this._onStartDragging();
            }
            const { clientX: x, clientY: y, pointerId } = e;
            if (pointerId !== (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dragPointerId)) {
                stopEvent(e);
                return;
            }
            const [tx, ty] = this.screenToPageTranslation(x - (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _prevDragX), y - (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _prevDragY));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _prevDragX, x);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _prevDragY, y);
            this._uiManager.dragSelectedEditors(tx, ty);
        }, opts);
        window.addEventListener("touchmove", stopEvent, opts);
        window.addEventListener("pointerdown", (e)=>{
            if (e.pointerType === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dragPointerType)) {
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _touchManager) || e.isPrimary) {
                    cancelDrag(e);
                }
            }
            stopEvent(e);
        }, opts);
    }
    const pointerUpCallback = (e)=>{
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dragPointerId) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dragPointerId) === e.pointerId) {
            cancelDrag(e);
            return;
        }
        stopEvent(e);
    };
    window.addEventListener("pointerup", pointerUpCallback, {
        signal
    });
    window.addEventListener("blur", pointerUpCallback, {
        signal
    });
}
function addFocusListeners() {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusAC) || !this.div) {
        return;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusAC, new AbortController());
    const signal = this._uiManager.combinedSignal((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusAC));
    this.div.addEventListener("focusin", this.focusin.bind(this), {
        signal
    });
    this.div.addEventListener("focusout", this.focusout.bind(this), {
        signal
    });
}
function resizerKeydown(event) {
    AnnotationEditor._resizerKeyboardManager.exec(this, event);
}
function resizerBlur(event) {
    var _event_relatedTarget;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isResizerEnabledForKeyboard) && ((_event_relatedTarget = event.relatedTarget) === null || _event_relatedTarget === void 0 ? void 0 : _event_relatedTarget.parentNode) !== (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizersDiv)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _stopResizing, stopResizing).call(this);
    }
}
function resizerFocus(name) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusedResizerName, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isResizerEnabledForKeyboard) ? name : "");
}
function setResizerTabIndex(value) {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allResizerDivs)) {
        return;
    }
    for (const div of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allResizerDivs)){
        div.tabIndex = value;
    }
}
function stopResizing() {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isResizerEnabledForKeyboard, false);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setResizerTabIndex, setResizerTabIndex).call(this, -1);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addResizeToUndoStack, addResizeToUndoStack).call(this);
}
class FakeEditor extends AnnotationEditor {
    serialize() {
        return this.serializeDeleted();
    }
    constructor(params){
        super(params);
        this.annotationElementId = params.annotationElementId;
        this.deleted = true;
    }
}
; // ./src/shared/murmurhash3.js
const SEED = 0xc3d2e1f0;
const MASK_HIGH = 0xffff0000;
const MASK_LOW = 0xffff;
class MurmurHash3_64 {
    update(input) {
        let data, length;
        if (typeof input === "string") {
            data = new Uint8Array(input.length * 2);
            length = 0;
            for(let i = 0, ii = input.length; i < ii; i++){
                const code = input.charCodeAt(i);
                if (code <= 0xff) {
                    data[length++] = code;
                } else {
                    data[length++] = code >>> 8;
                    data[length++] = code & 0xff;
                }
            }
        } else if (ArrayBuffer.isView(input)) {
            data = input.slice();
            length = data.byteLength;
        } else {
            throw new Error("Invalid data format, must be a string or TypedArray.");
        }
        const blockCounts = length >> 2;
        const tailLength = length - blockCounts * 4;
        const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);
        let k1 = 0, k2 = 0;
        let h1 = this.h1, h2 = this.h2;
        const C1 = 0xcc9e2d51, C2 = 0x1b873593;
        const C1_LOW = C1 & MASK_LOW, C2_LOW = C2 & MASK_LOW;
        for(let i = 0; i < blockCounts; i++){
            if (i & 1) {
                k1 = dataUint32[i];
                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;
                k1 = k1 << 15 | k1 >>> 17;
                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;
                h1 ^= k1;
                h1 = h1 << 13 | h1 >>> 19;
                h1 = h1 * 5 + 0xe6546b64;
            } else {
                k2 = dataUint32[i];
                k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;
                k2 = k2 << 15 | k2 >>> 17;
                k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;
                h2 ^= k2;
                h2 = h2 << 13 | h2 >>> 19;
                h2 = h2 * 5 + 0xe6546b64;
            }
        }
        k1 = 0;
        switch(tailLength){
            case 3:
                k1 ^= data[blockCounts * 4 + 2] << 16;
            case 2:
                k1 ^= data[blockCounts * 4 + 1] << 8;
            case 1:
                k1 ^= data[blockCounts * 4];
                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;
                k1 = k1 << 15 | k1 >>> 17;
                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;
                if (blockCounts & 1) {
                    h1 ^= k1;
                } else {
                    h2 ^= k1;
                }
        }
        this.h1 = h1;
        this.h2 = h2;
    }
    hexdigest() {
        let h1 = this.h1, h2 = this.h2;
        h1 ^= h2 >>> 1;
        h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;
        h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;
        h1 ^= h2 >>> 1;
        h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;
        h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;
        h1 ^= h2 >>> 1;
        return (h1 >>> 0).toString(16).padStart(8, "0") + (h2 >>> 0).toString(16).padStart(8, "0");
    }
    constructor(seed){
        this.h1 = seed ? seed & 0xffffffff : SEED;
        this.h2 = seed ? seed & 0xffffffff : SEED;
    }
}
; // ./src/display/annotation_storage.js
const SerializableEmpty = Object.freeze({
    map: null,
    hash: "",
    transfer: undefined
});
var _modified = /*#__PURE__*/ new WeakMap(), _modifiedIds = /*#__PURE__*/ new WeakMap(), _storage = /*#__PURE__*/ new WeakMap(), _setModified = /*#__PURE__*/ new WeakSet();
class AnnotationStorage {
    getValue(key, defaultValue) {
        const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage).get(key);
        if (value === undefined) {
            return defaultValue;
        }
        return Object.assign(defaultValue, value);
    }
    getRawValue(key) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage).get(key);
    }
    remove(key) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage).delete(key);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage).size === 0) {
            this.resetModified();
        }
        if (typeof this.onAnnotationEditor === "function") {
            for (const value of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage).values()){
                if (value instanceof AnnotationEditor) {
                    return;
                }
            }
            this.onAnnotationEditor(null);
        }
    }
    setValue(key, value) {
        const obj = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage).get(key);
        let modified = false;
        if (obj !== undefined) {
            for (const [entry, val] of Object.entries(value)){
                if (obj[entry] !== val) {
                    modified = true;
                    obj[entry] = val;
                }
            }
        } else {
            modified = true;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage).set(key, value);
        }
        if (modified) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setModified, setModified).call(this);
        }
        if (value instanceof AnnotationEditor && typeof this.onAnnotationEditor === "function") {
            this.onAnnotationEditor(value.constructor._type);
        }
    }
    has(key) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage).has(key);
    }
    get size() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage).size;
    }
    resetModified() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _modified)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _modified, false);
            if (typeof this.onResetModified === "function") {
                this.onResetModified();
            }
        }
    }
    get print() {
        return new PrintAnnotationStorage(this);
    }
    get serializable() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage).size === 0) {
            return SerializableEmpty;
        }
        const map = new Map(), hash = new MurmurHash3_64(), transfer = [];
        const context = Object.create(null);
        let hasBitmap = false;
        for (const [key, val] of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage)){
            const serialized = val instanceof AnnotationEditor ? val.serialize(false, context) : val;
            if (serialized) {
                map.set(key, serialized);
                hash.update("".concat(key, ":").concat(JSON.stringify(serialized)));
                hasBitmap || (hasBitmap = !!serialized.bitmap);
            }
        }
        if (hasBitmap) {
            for (const value of map.values()){
                if (value.bitmap) {
                    transfer.push(value.bitmap);
                }
            }
        }
        return map.size > 0 ? {
            map,
            hash: hash.hexdigest(),
            transfer
        } : SerializableEmpty;
    }
    get editorStats() {
        let stats = null;
        const typeToEditor = new Map();
        for (const value of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage).values()){
            var _stats, _type;
            if (!(value instanceof AnnotationEditor)) {
                continue;
            }
            const editorStats = value.telemetryFinalData;
            if (!editorStats) {
                continue;
            }
            const { type } = editorStats;
            if (!typeToEditor.has(type)) {
                typeToEditor.set(type, Object.getPrototypeOf(value).constructor);
            }
            stats || (stats = Object.create(null));
            const map = (_stats = stats)[_type = type] || (_stats[_type] = new Map());
            for (const [key, val] of Object.entries(editorStats)){
                if (key === "type") {
                    continue;
                }
                let counters = map.get(key);
                if (!counters) {
                    counters = new Map();
                    map.set(key, counters);
                }
                var _counters_get;
                const count = (_counters_get = counters.get(val)) !== null && _counters_get !== void 0 ? _counters_get : 0;
                counters.set(val, count + 1);
            }
        }
        for (const [type, editor] of typeToEditor){
            stats[type] = editor.computeTelemetryFinalData(stats[type]);
        }
        return stats;
    }
    resetModifiedIds() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _modifiedIds, null);
    }
    get modifiedIds() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _modifiedIds)) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _modifiedIds);
        }
        const ids = [];
        for (const value of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage).values()){
            if (!(value instanceof AnnotationEditor) || !value.annotationElementId || !value.serialize()) {
                continue;
            }
            ids.push(value.annotationElementId);
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _modifiedIds, {
            ids: new Set(ids),
            hash: ids.join(",")
        });
    }
    [Symbol.iterator]() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage).entries();
    }
    constructor(){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setModified);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _modified, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _modifiedIds, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _storage, {
            writable: true,
            value: new Map()
        });
        this.onSetModified = null;
        this.onResetModified = null;
        this.onAnnotationEditor = null;
    }
}
function setModified() {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _modified)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _modified, true);
        if (typeof this.onSetModified === "function") {
            this.onSetModified();
        }
    }
}
var _serializable = /*#__PURE__*/ new WeakMap();
class PrintAnnotationStorage extends AnnotationStorage {
    get print() {
        unreachable("Should not call PrintAnnotationStorage.print");
    }
    get serializable() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serializable);
    }
    get modifiedIds() {
        return shadow(this, "modifiedIds", {
            ids: new Set(),
            hash: ""
        });
    }
    constructor(parent){
        super(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serializable, {
            writable: true,
            value: void 0
        });
        const { map, hash, transfer } = parent.serializable;
        const clone = structuredClone(map, transfer ? {
            transfer
        } : null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serializable, {
            map: clone,
            hash,
            transfer
        });
    }
}
; // ./src/display/font_loader.js
var _systemFonts = /*#__PURE__*/ new WeakMap();
class FontLoader {
    addNativeFontFace(nativeFontFace) {
        this.nativeFontFaces.add(nativeFontFace);
        this._document.fonts.add(nativeFontFace);
    }
    removeNativeFontFace(nativeFontFace) {
        this.nativeFontFaces.delete(nativeFontFace);
        this._document.fonts.delete(nativeFontFace);
    }
    insertRule(rule) {
        if (!this.styleElement) {
            this.styleElement = this._document.createElement("style");
            this._document.documentElement.getElementsByTagName("head")[0].append(this.styleElement);
        }
        const styleSheet = this.styleElement.sheet;
        styleSheet.insertRule(rule, styleSheet.cssRules.length);
    }
    clear() {
        for (const nativeFontFace of this.nativeFontFaces){
            this._document.fonts.delete(nativeFontFace);
        }
        this.nativeFontFaces.clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _systemFonts).clear();
        if (this.styleElement) {
            this.styleElement.remove();
            this.styleElement = null;
        }
    }
    async loadSystemFont(param) {
        let { systemFontInfo: info, disableFontFace, _inspectFont } = param;
        if (!info || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _systemFonts).has(info.loadedName)) {
            return;
        }
        assert(!disableFontFace, "loadSystemFont shouldn't be called when `disableFontFace` is set.");
        if (this.isFontLoadingAPISupported) {
            const { loadedName, src, style } = info;
            const fontFace = new FontFace(loadedName, src, style);
            this.addNativeFontFace(fontFace);
            try {
                await fontFace.load();
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _systemFonts).add(loadedName);
                _inspectFont === null || _inspectFont === void 0 ? void 0 : _inspectFont(info);
            } catch (e) {
                warn("Cannot load system font: ".concat(info.baseFontName, ", installing it could help to improve PDF rendering."));
                this.removeNativeFontFace(fontFace);
            }
            return;
        }
        unreachable("Not implemented: loadSystemFont without the Font Loading API.");
    }
    async bind(font) {
        if (font.attached || font.missingFile && !font.systemFontInfo) {
            return;
        }
        font.attached = true;
        if (font.systemFontInfo) {
            await this.loadSystemFont(font);
            return;
        }
        if (this.isFontLoadingAPISupported) {
            const nativeFontFace = font.createNativeFontFace();
            if (nativeFontFace) {
                this.addNativeFontFace(nativeFontFace);
                try {
                    await nativeFontFace.loaded;
                } catch (ex) {
                    warn("Failed to load font '".concat(nativeFontFace.family, "': '").concat(ex, "'."));
                    font.disableFontFace = true;
                    throw ex;
                }
            }
            return;
        }
        const rule = font.createFontFaceRule();
        if (rule) {
            this.insertRule(rule);
            if (this.isSyncFontLoadingSupported) {
                return;
            }
            await new Promise((resolve)=>{
                const request = this._queueLoadingCallback(resolve);
                this._prepareFontLoadEvent(font, request);
            });
        }
    }
    get isFontLoadingAPISupported() {
        var _this__document;
        const hasFonts = !!((_this__document = this._document) === null || _this__document === void 0 ? void 0 : _this__document.fonts);
        return shadow(this, "isFontLoadingAPISupported", hasFonts);
    }
    get isSyncFontLoadingSupported() {
        return shadow(this, "isSyncFontLoadingSupported", isNodeJS || util_FeatureTest.platform.isFirefox);
    }
    _queueLoadingCallback(callback) {
        function completeRequest() {
            assert(!request.done, "completeRequest() cannot be called twice.");
            request.done = true;
            while(loadingRequests.length > 0 && loadingRequests[0].done){
                const otherRequest = loadingRequests.shift();
                setTimeout(otherRequest.callback, 0);
            }
        }
        const { loadingRequests } = this;
        const request = {
            done: false,
            complete: completeRequest,
            callback
        };
        loadingRequests.push(request);
        return request;
    }
    get _loadTestFont() {
        const testFont = atob("T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA" + "FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA" + "ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA" + "AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1" + "AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD" + "6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM" + "AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D" + "IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA" + "AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA" + "AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB" + "AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY" + "AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA" + "AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" + "AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" + "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" + "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" + "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" + "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA" + "AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC" + "AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3" + "Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj" + "FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==");
        return shadow(this, "_loadTestFont", testFont);
    }
    _prepareFontLoadEvent(font, request) {
        function int32(data, offset) {
            return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;
        }
        function spliceString(s, offset, remove, insert) {
            const chunk1 = s.substring(0, offset);
            const chunk2 = s.substring(offset + remove);
            return chunk1 + insert + chunk2;
        }
        let i, ii;
        const canvas = this._document.createElement("canvas");
        canvas.width = 1;
        canvas.height = 1;
        const ctx = canvas.getContext("2d");
        let called = 0;
        function isFontReady(name, callback) {
            if (++called > 30) {
                warn("Load test font never loaded.");
                callback();
                return;
            }
            ctx.font = "30px " + name;
            ctx.fillText(".", 0, 20);
            const imageData = ctx.getImageData(0, 0, 1, 1);
            if (imageData.data[3] > 0) {
                callback();
                return;
            }
            setTimeout(isFontReady.bind(null, name, callback));
        }
        const loadTestFontId = "lt".concat(Date.now()).concat(this.loadTestFontId++);
        let data = this._loadTestFont;
        const COMMENT_OFFSET = 976;
        data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);
        const CFF_CHECKSUM_OFFSET = 16;
        const XXXX_VALUE = 0x58585858;
        let checksum = int32(data, CFF_CHECKSUM_OFFSET);
        for(i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4){
            checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;
        }
        if (i < loadTestFontId.length) {
            checksum = checksum - XXXX_VALUE + int32(loadTestFontId + "XXX", i) | 0;
        }
        data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));
        const url = "url(data:font/opentype;base64,".concat(btoa(data), ");");
        const rule = '@font-face {font-family:"'.concat(loadTestFontId, '";src:').concat(url, "}");
        this.insertRule(rule);
        const div = this._document.createElement("div");
        div.style.visibility = "hidden";
        div.style.width = div.style.height = "10px";
        div.style.position = "absolute";
        div.style.top = div.style.left = "0px";
        for (const name of [
            font.loadedName,
            loadTestFontId
        ]){
            const span = this._document.createElement("span");
            span.textContent = "Hi";
            span.style.fontFamily = name;
            div.append(span);
        }
        this._document.body.append(div);
        isFontReady(loadTestFontId, ()=>{
            div.remove();
            request.complete();
        });
    }
    constructor({ ownerDocument = globalThis.document, styleElement = null }){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _systemFonts, {
            writable: true,
            value: new Set()
        });
        this._document = ownerDocument;
        this.nativeFontFaces = new Set();
        this.styleElement = null;
        this.loadingRequests = [];
        this.loadTestFontId = 0;
    }
}
class FontFaceObject {
    createNativeFontFace() {
        var _this__inspectFont, _this;
        if (!this.data || this.disableFontFace) {
            return null;
        }
        let nativeFontFace;
        if (!this.cssFontInfo) {
            nativeFontFace = new FontFace(this.loadedName, this.data, {});
        } else {
            const css = {
                weight: this.cssFontInfo.fontWeight
            };
            if (this.cssFontInfo.italicAngle) {
                css.style = "oblique ".concat(this.cssFontInfo.italicAngle, "deg");
            }
            nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);
        }
        (_this__inspectFont = (_this = this)._inspectFont) === null || _this__inspectFont === void 0 ? void 0 : _this__inspectFont.call(_this, this);
        return nativeFontFace;
    }
    createFontFaceRule() {
        var _this__inspectFont, _this;
        if (!this.data || this.disableFontFace) {
            return null;
        }
        const url = "url(data:".concat(this.mimetype, ";base64,").concat(toBase64Util(this.data), ");");
        let rule;
        if (!this.cssFontInfo) {
            rule = '@font-face {font-family:"'.concat(this.loadedName, '";src:').concat(url, "}");
        } else {
            let css = "font-weight: ".concat(this.cssFontInfo.fontWeight, ";");
            if (this.cssFontInfo.italicAngle) {
                css += "font-style: oblique ".concat(this.cssFontInfo.italicAngle, "deg;");
            }
            rule = '@font-face {font-family:"'.concat(this.cssFontInfo.fontFamily, '";').concat(css, "src:").concat(url, "}");
        }
        (_this__inspectFont = (_this = this)._inspectFont) === null || _this__inspectFont === void 0 ? void 0 : _this__inspectFont.call(_this, this, url);
        return rule;
    }
    getPathGenerator(objs, character) {
        if (this.compiledGlyphs[character] !== undefined) {
            return this.compiledGlyphs[character];
        }
        const objId = this.loadedName + "_path_" + character;
        let cmds;
        try {
            cmds = objs.get(objId);
        } catch (ex) {
            warn('getPathGenerator - ignoring character: "'.concat(ex, '".'));
        }
        const path = new Path2D(cmds || "");
        if (!this.fontExtraProperties) {
            objs.delete(objId);
        }
        return this.compiledGlyphs[character] = path;
    }
    constructor(translatedData, inspectFont = null){
        this.compiledGlyphs = Object.create(null);
        for(const i in translatedData){
            this[i] = translatedData[i];
        }
        this._inspectFont = inspectFont;
    }
}
; // ./src/display/api_utils.js
function getUrlProp(val) {
    if (val instanceof URL) {
        return val.href;
    }
    if (typeof val === "string") {
        if (isNodeJS) {
            return val;
        }
        const url = URL.parse(val, window.location);
        if (url) {
            return url.href;
        }
    }
    throw new Error("Invalid PDF url data: " + "either string or URL-object is expected in the url property.");
}
function getDataProp(val) {
    if (isNodeJS && typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] !== "undefined" && val instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"]) {
        throw new Error("Please provide binary data as `Uint8Array`, rather than `Buffer`.");
    }
    if (val instanceof Uint8Array && val.byteLength === val.buffer.byteLength) {
        return val;
    }
    if (typeof val === "string") {
        return stringToBytes(val);
    }
    if (val instanceof ArrayBuffer || ArrayBuffer.isView(val) || typeof val === "object" && !isNaN(val === null || val === void 0 ? void 0 : val.length)) {
        return new Uint8Array(val);
    }
    throw new Error("Invalid PDF binary data: either TypedArray, " + "string, or array-like object is expected in the data property.");
}
function getFactoryUrlProp(val) {
    if (typeof val !== "string") {
        return null;
    }
    if (val.endsWith("/")) {
        return val;
    }
    throw new Error('Invalid factory url: "'.concat(val, '" must include trailing slash.'));
}
const isRefProxy = (v)=>typeof v === "object" && Number.isInteger(v === null || v === void 0 ? void 0 : v.num) && v.num >= 0 && Number.isInteger(v === null || v === void 0 ? void 0 : v.gen) && v.gen >= 0;
const isNameProxy = (v)=>typeof v === "object" && typeof (v === null || v === void 0 ? void 0 : v.name) === "string";
const isValidExplicitDest = _isValidExplicitDest.bind(null, isRefProxy, isNameProxy);
var _listeners = /*#__PURE__*/ new WeakMap(), _deferred = /*#__PURE__*/ new WeakMap();
class LoopbackPort {
    postMessage(obj, transfer) {
        const event = {
            data: structuredClone(obj, transfer ? {
                transfer
            } : null)
        };
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _deferred).then(()=>{
            for (const [listener] of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _listeners)){
                listener.call(this, event);
            }
        });
    }
    addEventListener(name, listener) {
        let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
        let rmAbort = null;
        if ((options === null || options === void 0 ? void 0 : options.signal) instanceof AbortSignal) {
            const { signal } = options;
            if (signal.aborted) {
                warn("LoopbackPort - cannot use an `aborted` signal.");
                return;
            }
            const onAbort = ()=>this.removeEventListener(name, listener);
            rmAbort = ()=>signal.removeEventListener("abort", onAbort);
            signal.addEventListener("abort", onAbort);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _listeners).set(listener, rmAbort);
    }
    removeEventListener(name, listener) {
        const rmAbort = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _listeners).get(listener);
        rmAbort === null || rmAbort === void 0 ? void 0 : rmAbort();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _listeners).delete(listener);
    }
    terminate() {
        for (const [, rmAbort] of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _listeners)){
            rmAbort === null || rmAbort === void 0 ? void 0 : rmAbort();
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _listeners).clear();
    }
    constructor(){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _listeners, {
            writable: true,
            value: new Map()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _deferred, {
            writable: true,
            value: Promise.resolve()
        });
    }
}
; // ./src/shared/message_handler.js
const CallbackKind = {
    DATA: 1,
    ERROR: 2
};
const StreamKind = {
    CANCEL: 1,
    CANCEL_COMPLETE: 2,
    CLOSE: 3,
    ENQUEUE: 4,
    ERROR: 5,
    PULL: 6,
    PULL_COMPLETE: 7,
    START_COMPLETE: 8
};
function onFn() {}
function wrapReason(ex) {
    if (ex instanceof AbortException || ex instanceof InvalidPDFException || ex instanceof PasswordException || ex instanceof ResponseException || ex instanceof UnknownErrorException) {
        return ex;
    }
    if (!(ex instanceof Error || typeof ex === "object" && ex !== null)) {
        unreachable('wrapReason: Expected "reason" to be a (possibly cloned) Error.');
    }
    switch(ex.name){
        case "AbortException":
            return new AbortException(ex.message);
        case "InvalidPDFException":
            return new InvalidPDFException(ex.message);
        case "PasswordException":
            return new PasswordException(ex.message, ex.code);
        case "ResponseException":
            return new ResponseException(ex.message, ex.status, ex.missing);
        case "UnknownErrorException":
            return new UnknownErrorException(ex.message, ex.details);
    }
    return new UnknownErrorException(ex.message, ex.toString());
}
var _messageAC = /*#__PURE__*/ new WeakMap(), _onMessage = /*#__PURE__*/ new WeakSet(), _createStreamSink = /*#__PURE__*/ new WeakSet(), _processStreamMessage = /*#__PURE__*/ new WeakSet(), _deleteStreamController = /*#__PURE__*/ new WeakSet();
class MessageHandler {
    on(actionName, handler) {
        const ah = this.actionHandler;
        if (ah[actionName]) {
            throw new Error('There is already an actionName called "'.concat(actionName, '"'));
        }
        ah[actionName] = handler;
    }
    send(actionName, data, transfers) {
        this.comObj.postMessage({
            sourceName: this.sourceName,
            targetName: this.targetName,
            action: actionName,
            data
        }, transfers);
    }
    sendWithPromise(actionName, data, transfers) {
        const callbackId = this.callbackId++;
        const capability = Promise.withResolvers();
        this.callbackCapabilities[callbackId] = capability;
        try {
            this.comObj.postMessage({
                sourceName: this.sourceName,
                targetName: this.targetName,
                action: actionName,
                callbackId,
                data
            }, transfers);
        } catch (ex) {
            capability.reject(ex);
        }
        return capability.promise;
    }
    sendWithStream(actionName, data, queueingStrategy, transfers) {
        const streamId = this.streamId++, sourceName = this.sourceName, targetName = this.targetName, comObj = this.comObj;
        return new ReadableStream({
            start: (controller)=>{
                const startCapability = Promise.withResolvers();
                this.streamControllers[streamId] = {
                    controller,
                    startCall: startCapability,
                    pullCall: null,
                    cancelCall: null,
                    isClosed: false
                };
                comObj.postMessage({
                    sourceName,
                    targetName,
                    action: actionName,
                    streamId,
                    data,
                    desiredSize: controller.desiredSize
                }, transfers);
                return startCapability.promise;
            },
            pull: (controller)=>{
                const pullCapability = Promise.withResolvers();
                this.streamControllers[streamId].pullCall = pullCapability;
                comObj.postMessage({
                    sourceName,
                    targetName,
                    stream: StreamKind.PULL,
                    streamId,
                    desiredSize: controller.desiredSize
                });
                return pullCapability.promise;
            },
            cancel: (reason)=>{
                assert(reason instanceof Error, "cancel must have a valid reason");
                const cancelCapability = Promise.withResolvers();
                this.streamControllers[streamId].cancelCall = cancelCapability;
                this.streamControllers[streamId].isClosed = true;
                comObj.postMessage({
                    sourceName,
                    targetName,
                    stream: StreamKind.CANCEL,
                    streamId,
                    reason: wrapReason(reason)
                });
                return cancelCapability.promise;
            }
        }, queueingStrategy);
    }
    destroy() {
        var _class_private_field_get;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _messageAC)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.abort();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _messageAC, null);
    }
    constructor(sourceName, targetName, comObj){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onMessage);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createStreamSink);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _processStreamMessage);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _deleteStreamController);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _messageAC, {
            writable: true,
            value: new AbortController()
        });
        this.sourceName = sourceName;
        this.targetName = targetName;
        this.comObj = comObj;
        this.callbackId = 1;
        this.streamId = 1;
        this.streamSinks = Object.create(null);
        this.streamControllers = Object.create(null);
        this.callbackCapabilities = Object.create(null);
        this.actionHandler = Object.create(null);
        comObj.addEventListener("message", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _onMessage, onMessage).bind(this), {
            signal: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _messageAC).signal
        });
    }
}
function onMessage(param) {
    let { data } = param;
    if (data.targetName !== this.sourceName) {
        return;
    }
    if (data.stream) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _processStreamMessage, processStreamMessage).call(this, data);
        return;
    }
    if (data.callback) {
        const callbackId = data.callbackId;
        const capability = this.callbackCapabilities[callbackId];
        if (!capability) {
            throw new Error("Cannot resolve callback ".concat(callbackId));
        }
        delete this.callbackCapabilities[callbackId];
        if (data.callback === CallbackKind.DATA) {
            capability.resolve(data.data);
        } else if (data.callback === CallbackKind.ERROR) {
            capability.reject(wrapReason(data.reason));
        } else {
            throw new Error("Unexpected callback case");
        }
        return;
    }
    const action = this.actionHandler[data.action];
    if (!action) {
        throw new Error("Unknown action from worker: ".concat(data.action));
    }
    if (data.callbackId) {
        const sourceName = this.sourceName, targetName = data.sourceName, comObj = this.comObj;
        Promise.try(action, data.data).then(function(result) {
            comObj.postMessage({
                sourceName,
                targetName,
                callback: CallbackKind.DATA,
                callbackId: data.callbackId,
                data: result
            });
        }, function(reason) {
            comObj.postMessage({
                sourceName,
                targetName,
                callback: CallbackKind.ERROR,
                callbackId: data.callbackId,
                reason: wrapReason(reason)
            });
        });
        return;
    }
    if (data.streamId) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createStreamSink, createStreamSink).call(this, data);
        return;
    }
    action(data.data);
}
function createStreamSink(data) {
    const streamId = data.streamId, sourceName = this.sourceName, targetName = data.sourceName, comObj = this.comObj;
    const self = this, action = this.actionHandler[data.action];
    const streamSink = {
        enqueue (chunk) {
            let size = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, transfers = arguments.length > 2 ? arguments[2] : void 0;
            if (this.isCancelled) {
                return;
            }
            const lastDesiredSize = this.desiredSize;
            this.desiredSize -= size;
            if (lastDesiredSize > 0 && this.desiredSize <= 0) {
                this.sinkCapability = Promise.withResolvers();
                this.ready = this.sinkCapability.promise;
            }
            comObj.postMessage({
                sourceName,
                targetName,
                stream: StreamKind.ENQUEUE,
                streamId,
                chunk
            }, transfers);
        },
        close () {
            if (this.isCancelled) {
                return;
            }
            this.isCancelled = true;
            comObj.postMessage({
                sourceName,
                targetName,
                stream: StreamKind.CLOSE,
                streamId
            });
            delete self.streamSinks[streamId];
        },
        error (reason) {
            assert(reason instanceof Error, "error must have a valid reason");
            if (this.isCancelled) {
                return;
            }
            this.isCancelled = true;
            comObj.postMessage({
                sourceName,
                targetName,
                stream: StreamKind.ERROR,
                streamId,
                reason: wrapReason(reason)
            });
        },
        sinkCapability: Promise.withResolvers(),
        onPull: null,
        onCancel: null,
        isCancelled: false,
        desiredSize: data.desiredSize,
        ready: null
    };
    streamSink.sinkCapability.resolve();
    streamSink.ready = streamSink.sinkCapability.promise;
    this.streamSinks[streamId] = streamSink;
    Promise.try(action, data.data, streamSink).then(function() {
        comObj.postMessage({
            sourceName,
            targetName,
            stream: StreamKind.START_COMPLETE,
            streamId,
            success: true
        });
    }, function(reason) {
        comObj.postMessage({
            sourceName,
            targetName,
            stream: StreamKind.START_COMPLETE,
            streamId,
            reason: wrapReason(reason)
        });
    });
}
function processStreamMessage(data) {
    const streamId = data.streamId, sourceName = this.sourceName, targetName = data.sourceName, comObj = this.comObj;
    const streamController = this.streamControllers[streamId], streamSink = this.streamSinks[streamId];
    switch(data.stream){
        case StreamKind.START_COMPLETE:
            if (data.success) {
                streamController.startCall.resolve();
            } else {
                streamController.startCall.reject(wrapReason(data.reason));
            }
            break;
        case StreamKind.PULL_COMPLETE:
            if (data.success) {
                streamController.pullCall.resolve();
            } else {
                streamController.pullCall.reject(wrapReason(data.reason));
            }
            break;
        case StreamKind.PULL:
            if (!streamSink) {
                comObj.postMessage({
                    sourceName,
                    targetName,
                    stream: StreamKind.PULL_COMPLETE,
                    streamId,
                    success: true
                });
                break;
            }
            if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {
                streamSink.sinkCapability.resolve();
            }
            streamSink.desiredSize = data.desiredSize;
            Promise.try(streamSink.onPull || onFn).then(function() {
                comObj.postMessage({
                    sourceName,
                    targetName,
                    stream: StreamKind.PULL_COMPLETE,
                    streamId,
                    success: true
                });
            }, function(reason) {
                comObj.postMessage({
                    sourceName,
                    targetName,
                    stream: StreamKind.PULL_COMPLETE,
                    streamId,
                    reason: wrapReason(reason)
                });
            });
            break;
        case StreamKind.ENQUEUE:
            assert(streamController, "enqueue should have stream controller");
            if (streamController.isClosed) {
                break;
            }
            streamController.controller.enqueue(data.chunk);
            break;
        case StreamKind.CLOSE:
            assert(streamController, "close should have stream controller");
            if (streamController.isClosed) {
                break;
            }
            streamController.isClosed = true;
            streamController.controller.close();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _deleteStreamController, deleteStreamController).call(this, streamController, streamId);
            break;
        case StreamKind.ERROR:
            assert(streamController, "error should have stream controller");
            streamController.controller.error(wrapReason(data.reason));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _deleteStreamController, deleteStreamController).call(this, streamController, streamId);
            break;
        case StreamKind.CANCEL_COMPLETE:
            if (data.success) {
                streamController.cancelCall.resolve();
            } else {
                streamController.cancelCall.reject(wrapReason(data.reason));
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _deleteStreamController, deleteStreamController).call(this, streamController, streamId);
            break;
        case StreamKind.CANCEL:
            if (!streamSink) {
                break;
            }
            const dataReason = wrapReason(data.reason);
            Promise.try(streamSink.onCancel || onFn, dataReason).then(function() {
                comObj.postMessage({
                    sourceName,
                    targetName,
                    stream: StreamKind.CANCEL_COMPLETE,
                    streamId,
                    success: true
                });
            }, function(reason) {
                comObj.postMessage({
                    sourceName,
                    targetName,
                    stream: StreamKind.CANCEL_COMPLETE,
                    streamId,
                    reason: wrapReason(reason)
                });
            });
            streamSink.sinkCapability.reject(dataReason);
            streamSink.isCancelled = true;
            delete this.streamSinks[streamId];
            break;
        default:
            throw new Error("Unexpected stream case");
    }
}
async function deleteStreamController(streamController, streamId) {
    var _streamController_startCall, _streamController_pullCall, _streamController_cancelCall;
    await Promise.allSettled([
        (_streamController_startCall = streamController.startCall) === null || _streamController_startCall === void 0 ? void 0 : _streamController_startCall.promise,
        (_streamController_pullCall = streamController.pullCall) === null || _streamController_pullCall === void 0 ? void 0 : _streamController_pullCall.promise,
        (_streamController_cancelCall = streamController.cancelCall) === null || _streamController_cancelCall === void 0 ? void 0 : _streamController_cancelCall.promise
    ]);
    delete this.streamControllers[streamId];
}
; // ./src/display/canvas_factory.js
var _enableHWA = /*#__PURE__*/ new WeakMap();
class BaseCanvasFactory {
    create(width, height) {
        if (width <= 0 || height <= 0) {
            throw new Error("Invalid canvas size");
        }
        const canvas = this._createCanvas(width, height);
        return {
            canvas,
            context: canvas.getContext("2d", {
                willReadFrequently: !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableHWA)
            })
        };
    }
    reset(canvasAndContext, width, height) {
        if (!canvasAndContext.canvas) {
            throw new Error("Canvas is not specified");
        }
        if (width <= 0 || height <= 0) {
            throw new Error("Invalid canvas size");
        }
        canvasAndContext.canvas.width = width;
        canvasAndContext.canvas.height = height;
    }
    destroy(canvasAndContext) {
        if (!canvasAndContext.canvas) {
            throw new Error("Canvas is not specified");
        }
        canvasAndContext.canvas.width = 0;
        canvasAndContext.canvas.height = 0;
        canvasAndContext.canvas = null;
        canvasAndContext.context = null;
    }
    _createCanvas(width, height) {
        unreachable("Abstract method `_createCanvas` called.");
    }
    constructor({ enableHWA = false }){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableHWA, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _enableHWA, enableHWA);
    }
}
class DOMCanvasFactory extends BaseCanvasFactory {
    _createCanvas(width, height) {
        const canvas = this._document.createElement("canvas");
        canvas.width = width;
        canvas.height = height;
        return canvas;
    }
    constructor({ ownerDocument = globalThis.document, enableHWA = false }){
        super({
            enableHWA
        });
        this._document = ownerDocument;
    }
}
; // ./src/display/cmap_reader_factory.js
class BaseCMapReaderFactory {
    async fetch(param) {
        let { name } = param;
        if (!this.baseUrl) {
            throw new Error("Ensure that the `cMapUrl` and `cMapPacked` API parameters are provided.");
        }
        if (!name) {
            throw new Error("CMap name must be specified.");
        }
        const url = this.baseUrl + name + (this.isCompressed ? ".bcmap" : "");
        return this._fetch(url).then((cMapData)=>({
                cMapData,
                isCompressed: this.isCompressed
            })).catch((reason)=>{
            throw new Error("Unable to load ".concat(this.isCompressed ? "binary " : "", "CMap at: ").concat(url));
        });
    }
    async _fetch(url) {
        unreachable("Abstract method `_fetch` called.");
    }
    constructor({ baseUrl = null, isCompressed = true }){
        this.baseUrl = baseUrl;
        this.isCompressed = isCompressed;
    }
}
class DOMCMapReaderFactory extends BaseCMapReaderFactory {
    async _fetch(url) {
        const data = await fetchData(url, this.isCompressed ? "arraybuffer" : "text");
        return data instanceof ArrayBuffer ? new Uint8Array(data) : stringToBytes(data);
    }
}
; // ./src/display/filter_factory.js
class BaseFilterFactory {
    addFilter(maps) {
        return "none";
    }
    addHCMFilter(fgColor, bgColor) {
        return "none";
    }
    addAlphaFilter(map) {
        return "none";
    }
    addLuminosityFilter(map) {
        return "none";
    }
    addHighlightHCMFilter(filterName, fgColor, bgColor, newFgColor, newBgColor) {
        return "none";
    }
    destroy() {
        let keepHCM = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
    }
}
var _baseUrl = /*#__PURE__*/ new WeakMap(), __cache = /*#__PURE__*/ new WeakMap(), __defs = /*#__PURE__*/ new WeakMap(), _docId = /*#__PURE__*/ new WeakMap(), _document = /*#__PURE__*/ new WeakMap(), __hcmCache = /*#__PURE__*/ new WeakMap(), _id2 = /*#__PURE__*/ new WeakMap(), _cache1 = /*#__PURE__*/ new WeakMap(), _hcmCache = /*#__PURE__*/ new WeakMap(), _defs = /*#__PURE__*/ new WeakMap(), _createTables = /*#__PURE__*/ new WeakSet(), _createUrl = /*#__PURE__*/ new WeakSet(), _addLuminosityConversion = /*#__PURE__*/ new WeakSet(), _addGrayConversion = /*#__PURE__*/ new WeakSet(), _createFilter = /*#__PURE__*/ new WeakSet(), _appendFeFunc = /*#__PURE__*/ new WeakSet(), _addTransferMapConversion = /*#__PURE__*/ new WeakSet(), _addTransferMapAlphaConversion = /*#__PURE__*/ new WeakSet(), _getRGB = /*#__PURE__*/ new WeakSet();
class DOMFilterFactory extends BaseFilterFactory {
    addFilter(maps) {
        if (!maps) {
            return "none";
        }
        let value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).get(maps);
        if (value) {
            return value;
        }
        const [tableR, tableG, tableB] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createTables, createTables).call(this, maps);
        const key = maps.length === 1 ? tableR : "".concat(tableR).concat(tableG).concat(tableB);
        value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).get(key);
        if (value) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).set(maps, value);
            return value;
        }
        const id = "g_".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _docId), "_transfer_map_").concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_update$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id2).value++);
        const url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createUrl, createUrl).call(this, id);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).set(maps, url);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).set(key, url);
        const filter = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createFilter, createFilter).call(this, id);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addTransferMapConversion, addTransferMapConversion).call(this, tableR, tableG, tableB, filter);
        return url;
    }
    addHCMFilter(fgColor, bgColor) {
        const key = "".concat(fgColor, "-").concat(bgColor);
        const filterName = "base";
        let info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hcmCache).get(filterName);
        if ((info === null || info === void 0 ? void 0 : info.key) === key) {
            return info.url;
        }
        if (info) {
            var _info_filter;
            (_info_filter = info.filter) === null || _info_filter === void 0 ? void 0 : _info_filter.remove();
            info.key = key;
            info.url = "none";
            info.filter = null;
        } else {
            info = {
                key,
                url: "none",
                filter: null
            };
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hcmCache).set(filterName, info);
        }
        if (!fgColor || !bgColor) {
            return info.url;
        }
        const fgRGB = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getRGB, getRGB1).call(this, fgColor);
        fgColor = Util.makeHexColor(...fgRGB);
        const bgRGB = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getRGB, getRGB1).call(this, bgColor);
        bgColor = Util.makeHexColor(...bgRGB);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _defs).style.color = "";
        if (fgColor === "#000000" && bgColor === "#ffffff" || fgColor === bgColor) {
            return info.url;
        }
        const map = new Array(256);
        for(let i = 0; i <= 255; i++){
            const x = i / 255;
            map[i] = x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;
        }
        const table = map.join(",");
        const id = "g_".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _docId), "_hcm_filter");
        const filter = info.filter = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createFilter, createFilter).call(this, id);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addTransferMapConversion, addTransferMapConversion).call(this, table, table, table, filter);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addGrayConversion, addGrayConversion).call(this, filter);
        const getSteps = (c, n)=>{
            const start = fgRGB[c] / 255;
            const end = bgRGB[c] / 255;
            const arr = new Array(n + 1);
            for(let i = 0; i <= n; i++){
                arr[i] = start + i / n * (end - start);
            }
            return arr.join(",");
        };
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addTransferMapConversion, addTransferMapConversion).call(this, getSteps(0, 5), getSteps(1, 5), getSteps(2, 5), filter);
        info.url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createUrl, createUrl).call(this, id);
        return info.url;
    }
    addAlphaFilter(map) {
        let value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).get(map);
        if (value) {
            return value;
        }
        const [tableA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createTables, createTables).call(this, [
            map
        ]);
        const key = "alpha_".concat(tableA);
        value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).get(key);
        if (value) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).set(map, value);
            return value;
        }
        const id = "g_".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _docId), "_alpha_map_").concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_update$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id2).value++);
        const url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createUrl, createUrl).call(this, id);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).set(map, url);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).set(key, url);
        const filter = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createFilter, createFilter).call(this, id);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addTransferMapAlphaConversion, addTransferMapAlphaConversion).call(this, tableA, filter);
        return url;
    }
    addLuminosityFilter(map) {
        let value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).get(map || "luminosity");
        if (value) {
            return value;
        }
        let tableA, key;
        if (map) {
            [tableA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createTables, createTables).call(this, [
                map
            ]);
            key = "luminosity_".concat(tableA);
        } else {
            key = "luminosity";
        }
        value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).get(key);
        if (value) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).set(map, value);
            return value;
        }
        const id = "g_".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _docId), "_luminosity_map_").concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_update$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id2).value++);
        const url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createUrl, createUrl).call(this, id);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).set(map, url);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1).set(key, url);
        const filter = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createFilter, createFilter).call(this, id);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addLuminosityConversion, addLuminosityConversion).call(this, filter);
        if (map) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addTransferMapAlphaConversion, addTransferMapAlphaConversion).call(this, tableA, filter);
        }
        return url;
    }
    addHighlightHCMFilter(filterName, fgColor, bgColor, newFgColor, newBgColor) {
        const key = "".concat(fgColor, "-").concat(bgColor, "-").concat(newFgColor, "-").concat(newBgColor);
        let info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hcmCache).get(filterName);
        if ((info === null || info === void 0 ? void 0 : info.key) === key) {
            return info.url;
        }
        if (info) {
            var _info_filter;
            (_info_filter = info.filter) === null || _info_filter === void 0 ? void 0 : _info_filter.remove();
            info.key = key;
            info.url = "none";
            info.filter = null;
        } else {
            info = {
                key,
                url: "none",
                filter: null
            };
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hcmCache).set(filterName, info);
        }
        if (!fgColor || !bgColor) {
            return info.url;
        }
        const [fgRGB, bgRGB] = [
            fgColor,
            bgColor
        ].map((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getRGB, getRGB1).bind(this));
        let fgGray = Math.round(0.2126 * fgRGB[0] + 0.7152 * fgRGB[1] + 0.0722 * fgRGB[2]);
        let bgGray = Math.round(0.2126 * bgRGB[0] + 0.7152 * bgRGB[1] + 0.0722 * bgRGB[2]);
        let [newFgRGB, newBgRGB] = [
            newFgColor,
            newBgColor
        ].map((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getRGB, getRGB1).bind(this));
        if (bgGray < fgGray) {
            [fgGray, bgGray, newFgRGB, newBgRGB] = [
                bgGray,
                fgGray,
                newBgRGB,
                newFgRGB
            ];
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _defs).style.color = "";
        const getSteps = (fg, bg, n)=>{
            const arr = new Array(256);
            const step = (bgGray - fgGray) / n;
            const newStart = fg / 255;
            const newStep = (bg - fg) / (255 * n);
            let prev = 0;
            for(let i = 0; i <= n; i++){
                const k = Math.round(fgGray + i * step);
                const value = newStart + i * newStep;
                for(let j = prev; j <= k; j++){
                    arr[j] = value;
                }
                prev = k + 1;
            }
            for(let i = prev; i < 256; i++){
                arr[i] = arr[prev - 1];
            }
            return arr.join(",");
        };
        const id = "g_".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _docId), "_hcm_").concat(filterName, "_filter");
        const filter = info.filter = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createFilter, createFilter).call(this, id);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addGrayConversion, addGrayConversion).call(this, filter);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addTransferMapConversion, addTransferMapConversion).call(this, getSteps(newFgRGB[0], newBgRGB[0], 5), getSteps(newFgRGB[1], newBgRGB[1], 5), getSteps(newFgRGB[2], newBgRGB[2], 5), filter);
        info.url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createUrl, createUrl).call(this, id);
        return info.url;
    }
    destroy() {
        let keepHCM = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        var _class_private_field_get, _class_private_field_get1, _class_private_field_get2, _class_private_field_get3;
        if (keepHCM && ((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __hcmCache)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.size)) {
            return;
        }
        (_class_private_field_get1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __defs)) === null || _class_private_field_get1 === void 0 ? void 0 : _class_private_field_get1.parentNode.parentNode.remove();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __defs, null);
        (_class_private_field_get2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __cache)) === null || _class_private_field_get2 === void 0 ? void 0 : _class_private_field_get2.clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __cache, null);
        (_class_private_field_get3 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __hcmCache)) === null || _class_private_field_get3 === void 0 ? void 0 : _class_private_field_get3.clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __hcmCache, null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id2, 0);
    }
    constructor({ docId, ownerDocument = globalThis.document }){
        super(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cache1, {
            get: get_cache,
            set: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hcmCache, {
            get: get_hcmCache,
            set: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _defs, {
            get: get_defs,
            set: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createTables), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createUrl), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addLuminosityConversion), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addGrayConversion), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createFilter), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _appendFeFunc), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addTransferMapConversion), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addTransferMapAlphaConversion), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getRGB), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _baseUrl, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __cache, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __defs, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _docId, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _document, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __hcmCache, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id2, {
            writable: true,
            value: 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _docId, docId);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _document, ownerDocument);
    }
}
function get_cache() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __cache, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __cache) || new Map());
}
function get_hcmCache() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __hcmCache, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __hcmCache) || new Map());
}
function get_defs() {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __defs)) {
        const div = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _document).createElement("div");
        const { style } = div;
        style.visibility = "hidden";
        style.contain = "strict";
        style.width = style.height = 0;
        style.position = "absolute";
        style.top = style.left = 0;
        style.zIndex = -1;
        const svg = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _document).createElementNS(SVG_NS, "svg");
        svg.setAttribute("width", 0);
        svg.setAttribute("height", 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __defs, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _document).createElementNS(SVG_NS, "defs"));
        div.append(svg);
        svg.append((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __defs));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _document).body.append(div);
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, __defs);
}
function createTables(maps) {
    if (maps.length === 1) {
        const mapR = maps[0];
        const buffer = new Array(256);
        for(let i = 0; i < 256; i++){
            buffer[i] = mapR[i] / 255;
        }
        const table = buffer.join(",");
        return [
            table,
            table,
            table
        ];
    }
    const [mapR, mapG, mapB] = maps;
    const bufferR = new Array(256);
    const bufferG = new Array(256);
    const bufferB = new Array(256);
    for(let i = 0; i < 256; i++){
        bufferR[i] = mapR[i] / 255;
        bufferG[i] = mapG[i] / 255;
        bufferB[i] = mapB[i] / 255;
    }
    return [
        bufferR.join(","),
        bufferG.join(","),
        bufferB.join(",")
    ];
}
function createUrl(id) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _baseUrl) === undefined) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _baseUrl, "");
        const url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _document).URL;
        if (url !== (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _document).baseURI) {
            if (isDataScheme(url)) {
                warn('#createUrl: ignore "data:"-URL for performance reasons.');
            } else {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _baseUrl, updateUrlHash(url, ""));
            }
        }
    }
    return "url(".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _baseUrl), "#").concat(id, ")");
}
function addLuminosityConversion(filter) {
    const feColorMatrix = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _document).createElementNS(SVG_NS, "feColorMatrix");
    feColorMatrix.setAttribute("type", "matrix");
    feColorMatrix.setAttribute("values", "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0.59 0.11 0 0");
    filter.append(feColorMatrix);
}
function addGrayConversion(filter) {
    const feColorMatrix = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _document).createElementNS(SVG_NS, "feColorMatrix");
    feColorMatrix.setAttribute("type", "matrix");
    feColorMatrix.setAttribute("values", "0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0");
    filter.append(feColorMatrix);
}
function createFilter(id) {
    const filter = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _document).createElementNS(SVG_NS, "filter");
    filter.setAttribute("color-interpolation-filters", "sRGB");
    filter.setAttribute("id", id);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _defs).append(filter);
    return filter;
}
function appendFeFunc(feComponentTransfer, func, table) {
    const feFunc = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _document).createElementNS(SVG_NS, func);
    feFunc.setAttribute("type", "discrete");
    feFunc.setAttribute("tableValues", table);
    feComponentTransfer.append(feFunc);
}
function addTransferMapConversion(rTable, gTable, bTable, filter) {
    const feComponentTransfer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _document).createElementNS(SVG_NS, "feComponentTransfer");
    filter.append(feComponentTransfer);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _appendFeFunc, appendFeFunc).call(this, feComponentTransfer, "feFuncR", rTable);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _appendFeFunc, appendFeFunc).call(this, feComponentTransfer, "feFuncG", gTable);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _appendFeFunc, appendFeFunc).call(this, feComponentTransfer, "feFuncB", bTable);
}
function addTransferMapAlphaConversion(aTable, filter) {
    const feComponentTransfer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _document).createElementNS(SVG_NS, "feComponentTransfer");
    filter.append(feComponentTransfer);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _appendFeFunc, appendFeFunc).call(this, feComponentTransfer, "feFuncA", aTable);
}
function getRGB1(color) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _defs).style.color = color;
    return getRGB(getComputedStyle((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _defs)).getPropertyValue("color"));
}
; // ./src/display/standard_fontdata_factory.js
class BaseStandardFontDataFactory {
    async fetch(param) {
        let { filename } = param;
        if (!this.baseUrl) {
            throw new Error("Ensure that the `standardFontDataUrl` API parameter is provided.");
        }
        if (!filename) {
            throw new Error("Font filename must be specified.");
        }
        const url = "".concat(this.baseUrl).concat(filename);
        return this._fetch(url).catch((reason)=>{
            throw new Error("Unable to load font data at: ".concat(url));
        });
    }
    async _fetch(url) {
        unreachable("Abstract method `_fetch` called.");
    }
    constructor({ baseUrl = null }){
        this.baseUrl = baseUrl;
    }
}
class DOMStandardFontDataFactory extends BaseStandardFontDataFactory {
    async _fetch(url) {
        const data = await fetchData(url, "arraybuffer");
        return new Uint8Array(data);
    }
}
; // ./src/display/wasm_factory.js
class BaseWasmFactory {
    async fetch(param) {
        let { filename } = param;
        if (!this.baseUrl) {
            throw new Error("Ensure that the `wasmUrl` API parameter is provided.");
        }
        if (!filename) {
            throw new Error("Wasm filename must be specified.");
        }
        const url = "".concat(this.baseUrl).concat(filename);
        return this._fetch(url).catch((reason)=>{
            throw new Error("Unable to load wasm data at: ".concat(url));
        });
    }
    async _fetch(url) {
        unreachable("Abstract method `_fetch` called.");
    }
    constructor({ baseUrl = null }){
        this.baseUrl = baseUrl;
    }
}
class DOMWasmFactory extends BaseWasmFactory {
    async _fetch(url) {
        const data = await fetchData(url, "arraybuffer");
        return new Uint8Array(data);
    }
}
; // ./src/display/node_utils.js
if (isNodeJS) {
    warn("Please use the `legacy` build in Node.js environments.");
}
async function node_utils_fetchData(url) {
    const fs = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].getBuiltinModule("fs");
    const data = await fs.promises.readFile(url);
    return new Uint8Array(data);
}
class NodeFilterFactory extends BaseFilterFactory {
}
class NodeCanvasFactory extends BaseCanvasFactory {
    _createCanvas(width, height) {
        const require = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].getBuiltinModule("module").createRequire(__TURBOPACK__import$2e$meta__.url);
        const canvas = require("@napi-rs/canvas");
        return canvas.createCanvas(width, height);
    }
}
class NodeCMapReaderFactory extends BaseCMapReaderFactory {
    async _fetch(url) {
        return node_utils_fetchData(url);
    }
}
class NodeStandardFontDataFactory extends BaseStandardFontDataFactory {
    async _fetch(url) {
        return node_utils_fetchData(url);
    }
}
class NodeWasmFactory extends BaseWasmFactory {
    async _fetch(url) {
        return node_utils_fetchData(url);
    }
}
; // ./src/display/pattern_helper.js
const PathType = {
    FILL: "Fill",
    STROKE: "Stroke",
    SHADING: "Shading"
};
function applyBoundingBox(ctx, bbox) {
    if (!bbox) {
        return;
    }
    const width = bbox[2] - bbox[0];
    const height = bbox[3] - bbox[1];
    const region = new Path2D();
    region.rect(bbox[0], bbox[1], width, height);
    ctx.clip(region);
}
class BaseShadingPattern {
    isModifyingCurrentTransform() {
        return false;
    }
    getPattern() {
        unreachable("Abstract method `getPattern` called.");
    }
}
class RadialAxialShadingPattern extends BaseShadingPattern {
    _createGradient(ctx) {
        let grad;
        if (this._type === "axial") {
            grad = ctx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);
        } else if (this._type === "radial") {
            grad = ctx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);
        }
        for (const colorStop of this._colorStops){
            grad.addColorStop(colorStop[0], colorStop[1]);
        }
        return grad;
    }
    getPattern(ctx, owner, inverse, pathType) {
        let pattern;
        if (pathType === PathType.STROKE || pathType === PathType.FILL) {
            const ownerBBox = owner.current.getClippedPathBoundingBox(pathType, getCurrentTransform(ctx)) || [
                0,
                0,
                0,
                0
            ];
            const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;
            const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;
            const tmpCanvas = owner.cachedCanvases.getCanvas("pattern", width, height);
            const tmpCtx = tmpCanvas.context;
            tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);
            tmpCtx.beginPath();
            tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);
            tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);
            inverse = Util.transform(inverse, [
                1,
                0,
                0,
                1,
                ownerBBox[0],
                ownerBBox[1]
            ]);
            tmpCtx.transform(...owner.baseTransform);
            if (this.matrix) {
                tmpCtx.transform(...this.matrix);
            }
            applyBoundingBox(tmpCtx, this._bbox);
            tmpCtx.fillStyle = this._createGradient(tmpCtx);
            tmpCtx.fill();
            pattern = ctx.createPattern(tmpCanvas.canvas, "no-repeat");
            const domMatrix = new DOMMatrix(inverse);
            pattern.setTransform(domMatrix);
        } else {
            applyBoundingBox(ctx, this._bbox);
            pattern = this._createGradient(ctx);
        }
        return pattern;
    }
    constructor(IR){
        super();
        this._type = IR[1];
        this._bbox = IR[2];
        this._colorStops = IR[3];
        this._p0 = IR[4];
        this._p1 = IR[5];
        this._r0 = IR[6];
        this._r1 = IR[7];
        this.matrix = null;
    }
}
function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {
    const coords = context.coords, colors = context.colors;
    const bytes = data.data, rowSize = data.width * 4;
    let tmp;
    if (coords[p1 + 1] > coords[p2 + 1]) {
        tmp = p1;
        p1 = p2;
        p2 = tmp;
        tmp = c1;
        c1 = c2;
        c2 = tmp;
    }
    if (coords[p2 + 1] > coords[p3 + 1]) {
        tmp = p2;
        p2 = p3;
        p3 = tmp;
        tmp = c2;
        c2 = c3;
        c3 = tmp;
    }
    if (coords[p1 + 1] > coords[p2 + 1]) {
        tmp = p1;
        p1 = p2;
        p2 = tmp;
        tmp = c1;
        c1 = c2;
        c2 = tmp;
    }
    const x1 = (coords[p1] + context.offsetX) * context.scaleX;
    const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;
    const x2 = (coords[p2] + context.offsetX) * context.scaleX;
    const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;
    const x3 = (coords[p3] + context.offsetX) * context.scaleX;
    const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;
    if (y1 >= y3) {
        return;
    }
    const c1r = colors[c1], c1g = colors[c1 + 1], c1b = colors[c1 + 2];
    const c2r = colors[c2], c2g = colors[c2 + 1], c2b = colors[c2 + 2];
    const c3r = colors[c3], c3g = colors[c3 + 1], c3b = colors[c3 + 2];
    const minY = Math.round(y1), maxY = Math.round(y3);
    let xa, car, cag, cab;
    let xb, cbr, cbg, cbb;
    for(let y = minY; y <= maxY; y++){
        if (y < y2) {
            const k = y < y1 ? 0 : (y1 - y) / (y1 - y2);
            xa = x1 - (x1 - x2) * k;
            car = c1r - (c1r - c2r) * k;
            cag = c1g - (c1g - c2g) * k;
            cab = c1b - (c1b - c2b) * k;
        } else {
            let k;
            if (y > y3) {
                k = 1;
            } else if (y2 === y3) {
                k = 0;
            } else {
                k = (y2 - y) / (y2 - y3);
            }
            xa = x2 - (x2 - x3) * k;
            car = c2r - (c2r - c3r) * k;
            cag = c2g - (c2g - c3g) * k;
            cab = c2b - (c2b - c3b) * k;
        }
        let k;
        if (y < y1) {
            k = 0;
        } else if (y > y3) {
            k = 1;
        } else {
            k = (y1 - y) / (y1 - y3);
        }
        xb = x1 - (x1 - x3) * k;
        cbr = c1r - (c1r - c3r) * k;
        cbg = c1g - (c1g - c3g) * k;
        cbb = c1b - (c1b - c3b) * k;
        const x1_ = Math.round(Math.min(xa, xb));
        const x2_ = Math.round(Math.max(xa, xb));
        let j = rowSize * y + x1_ * 4;
        for(let x = x1_; x <= x2_; x++){
            k = (xa - x) / (xa - xb);
            if (k < 0) {
                k = 0;
            } else if (k > 1) {
                k = 1;
            }
            bytes[j++] = car - (car - cbr) * k | 0;
            bytes[j++] = cag - (cag - cbg) * k | 0;
            bytes[j++] = cab - (cab - cbb) * k | 0;
            bytes[j++] = 255;
        }
    }
}
function drawFigure(data, figure, context) {
    const ps = figure.coords;
    const cs = figure.colors;
    let i, ii;
    switch(figure.type){
        case "lattice":
            const verticesPerRow = figure.verticesPerRow;
            const rows = Math.floor(ps.length / verticesPerRow) - 1;
            const cols = verticesPerRow - 1;
            for(i = 0; i < rows; i++){
                let q = i * verticesPerRow;
                for(let j = 0; j < cols; j++, q++){
                    drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);
                    drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);
                }
            }
            break;
        case "triangles":
            for(i = 0, ii = ps.length; i < ii; i += 3){
                drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);
            }
            break;
        default:
            throw new Error("illegal figure");
    }
}
class MeshShadingPattern extends BaseShadingPattern {
    _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {
        const EXPECTED_SCALE = 1.1;
        const MAX_PATTERN_SIZE = 3000;
        const BORDER_SIZE = 2;
        const offsetX = Math.floor(this._bounds[0]);
        const offsetY = Math.floor(this._bounds[1]);
        const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;
        const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;
        const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);
        const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);
        const scaleX = boundsWidth / width;
        const scaleY = boundsHeight / height;
        const context = {
            coords: this._coords,
            colors: this._colors,
            offsetX: -offsetX,
            offsetY: -offsetY,
            scaleX: 1 / scaleX,
            scaleY: 1 / scaleY
        };
        const paddedWidth = width + BORDER_SIZE * 2;
        const paddedHeight = height + BORDER_SIZE * 2;
        const tmpCanvas = cachedCanvases.getCanvas("mesh", paddedWidth, paddedHeight);
        const tmpCtx = tmpCanvas.context;
        const data = tmpCtx.createImageData(width, height);
        if (backgroundColor) {
            const bytes = data.data;
            for(let i = 0, ii = bytes.length; i < ii; i += 4){
                bytes[i] = backgroundColor[0];
                bytes[i + 1] = backgroundColor[1];
                bytes[i + 2] = backgroundColor[2];
                bytes[i + 3] = 255;
            }
        }
        for (const figure of this._figures){
            drawFigure(data, figure, context);
        }
        tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);
        const canvas = tmpCanvas.canvas;
        return {
            canvas,
            offsetX: offsetX - BORDER_SIZE * scaleX,
            offsetY: offsetY - BORDER_SIZE * scaleY,
            scaleX,
            scaleY
        };
    }
    isModifyingCurrentTransform() {
        return true;
    }
    getPattern(ctx, owner, inverse, pathType) {
        applyBoundingBox(ctx, this._bbox);
        const scale = new Float32Array(2);
        if (pathType === PathType.SHADING) {
            Util.singularValueDecompose2dScale(getCurrentTransform(ctx), scale);
        } else if (this.matrix) {
            Util.singularValueDecompose2dScale(this.matrix, scale);
            const [matrixScaleX, matrixScaleY] = scale;
            Util.singularValueDecompose2dScale(owner.baseTransform, scale);
            scale[0] *= matrixScaleX;
            scale[1] *= matrixScaleY;
        } else {
            Util.singularValueDecompose2dScale(owner.baseTransform, scale);
        }
        const temporaryPatternCanvas = this._createMeshCanvas(scale, pathType === PathType.SHADING ? null : this._background, owner.cachedCanvases);
        if (pathType !== PathType.SHADING) {
            ctx.setTransform(...owner.baseTransform);
            if (this.matrix) {
                ctx.transform(...this.matrix);
            }
        }
        ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);
        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);
        return ctx.createPattern(temporaryPatternCanvas.canvas, "no-repeat");
    }
    constructor(IR){
        super();
        this._coords = IR[2];
        this._colors = IR[3];
        this._figures = IR[4];
        this._bounds = IR[5];
        this._bbox = IR[6];
        this._background = IR[7];
        this.matrix = null;
    }
}
class DummyShadingPattern extends BaseShadingPattern {
    getPattern() {
        return "hotpink";
    }
}
function getShadingPattern(IR) {
    switch(IR[0]){
        case "RadialAxial":
            return new RadialAxialShadingPattern(IR);
        case "Mesh":
            return new MeshShadingPattern(IR);
        case "Dummy":
            return new DummyShadingPattern();
    }
    throw new Error("Unknown IR type: ".concat(IR[0]));
}
const PaintType = {
    COLORED: 1,
    UNCOLORED: 2
};
class TilingPattern {
    createPatternCanvas(owner) {
        const { bbox, operatorList, paintType, tilingType, color, canvasGraphicsFactory } = this;
        let { xstep, ystep } = this;
        xstep = Math.abs(xstep);
        ystep = Math.abs(ystep);
        info("TilingType: " + tilingType);
        const x0 = bbox[0], y0 = bbox[1], x1 = bbox[2], y1 = bbox[3];
        const width = x1 - x0;
        const height = y1 - y0;
        const scale = new Float32Array(2);
        Util.singularValueDecompose2dScale(this.matrix, scale);
        const [matrixScaleX, matrixScaleY] = scale;
        Util.singularValueDecompose2dScale(this.baseTransform, scale);
        const combinedScaleX = matrixScaleX * scale[0];
        const combinedScaleY = matrixScaleY * scale[1];
        let canvasWidth = width, canvasHeight = height, redrawHorizontally = false, redrawVertically = false;
        const xScaledStep = Math.ceil(xstep * combinedScaleX);
        const yScaledStep = Math.ceil(ystep * combinedScaleY);
        const xScaledWidth = Math.ceil(width * combinedScaleX);
        const yScaledHeight = Math.ceil(height * combinedScaleY);
        if (xScaledStep >= xScaledWidth) {
            canvasWidth = xstep;
        } else {
            redrawHorizontally = true;
        }
        if (yScaledStep >= yScaledHeight) {
            canvasHeight = ystep;
        } else {
            redrawVertically = true;
        }
        const dimx = this.getSizeAndScale(canvasWidth, this.ctx.canvas.width, combinedScaleX);
        const dimy = this.getSizeAndScale(canvasHeight, this.ctx.canvas.height, combinedScaleY);
        const tmpCanvas = owner.cachedCanvases.getCanvas("pattern", dimx.size, dimy.size);
        const tmpCtx = tmpCanvas.context;
        const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);
        graphics.groupLevel = owner.groupLevel;
        this.setFillAndStrokeStyleToContext(graphics, paintType, color);
        tmpCtx.translate(-dimx.scale * x0, -dimy.scale * y0);
        graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);
        tmpCtx.save();
        this.clipBbox(graphics, x0, y0, x1, y1);
        graphics.baseTransform = getCurrentTransform(graphics.ctx);
        graphics.executeOperatorList(operatorList);
        graphics.endDrawing();
        tmpCtx.restore();
        if (redrawHorizontally || redrawVertically) {
            const image = tmpCanvas.canvas;
            if (redrawHorizontally) {
                canvasWidth = xstep;
            }
            if (redrawVertically) {
                canvasHeight = ystep;
            }
            const dimx2 = this.getSizeAndScale(canvasWidth, this.ctx.canvas.width, combinedScaleX);
            const dimy2 = this.getSizeAndScale(canvasHeight, this.ctx.canvas.height, combinedScaleY);
            const xSize = dimx2.size;
            const ySize = dimy2.size;
            const tmpCanvas2 = owner.cachedCanvases.getCanvas("pattern-workaround", xSize, ySize);
            const tmpCtx2 = tmpCanvas2.context;
            const ii = redrawHorizontally ? Math.floor(width / xstep) : 0;
            const jj = redrawVertically ? Math.floor(height / ystep) : 0;
            for(let i = 0; i <= ii; i++){
                for(let j = 0; j <= jj; j++){
                    tmpCtx2.drawImage(image, xSize * i, ySize * j, xSize, ySize, 0, 0, xSize, ySize);
                }
            }
            return {
                canvas: tmpCanvas2.canvas,
                scaleX: dimx2.scale,
                scaleY: dimy2.scale,
                offsetX: x0,
                offsetY: y0
            };
        }
        return {
            canvas: tmpCanvas.canvas,
            scaleX: dimx.scale,
            scaleY: dimy.scale,
            offsetX: x0,
            offsetY: y0
        };
    }
    getSizeAndScale(step, realOutputSize, scale) {
        const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);
        let size = Math.ceil(step * scale);
        if (size >= maxSize) {
            size = maxSize;
        } else {
            scale = size / step;
        }
        return {
            scale,
            size
        };
    }
    clipBbox(graphics, x0, y0, x1, y1) {
        const bboxWidth = x1 - x0;
        const bboxHeight = y1 - y0;
        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);
        Util.axialAlignedBoundingBox([
            x0,
            y0,
            x1,
            y1
        ], getCurrentTransform(graphics.ctx), graphics.current.minMax);
        graphics.clip();
        graphics.endPath();
    }
    setFillAndStrokeStyleToContext(graphics, paintType, color) {
        const context = graphics.ctx, current = graphics.current;
        switch(paintType){
            case PaintType.COLORED:
                const { fillStyle, strokeStyle } = this.ctx;
                context.fillStyle = current.fillColor = fillStyle;
                context.strokeStyle = current.strokeColor = strokeStyle;
                break;
            case PaintType.UNCOLORED:
                context.fillStyle = context.strokeStyle = color;
                current.fillColor = current.strokeColor = color;
                break;
            default:
                throw new FormatError("Unsupported paint type: ".concat(paintType));
        }
    }
    isModifyingCurrentTransform() {
        return false;
    }
    getPattern(ctx, owner, inverse, pathType) {
        let matrix = inverse;
        if (pathType !== PathType.SHADING) {
            matrix = Util.transform(matrix, owner.baseTransform);
            if (this.matrix) {
                matrix = Util.transform(matrix, this.matrix);
            }
        }
        const temporaryPatternCanvas = this.createPatternCanvas(owner);
        let domMatrix = new DOMMatrix(matrix);
        domMatrix = domMatrix.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);
        domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);
        const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, "repeat");
        pattern.setTransform(domMatrix);
        return pattern;
    }
    constructor(IR, ctx, canvasGraphicsFactory, baseTransform){
        this.color = IR[1];
        this.operatorList = IR[2];
        this.matrix = IR[3];
        this.bbox = IR[4];
        this.xstep = IR[5];
        this.ystep = IR[6];
        this.paintType = IR[7];
        this.tilingType = IR[8];
        this.ctx = ctx;
        this.canvasGraphicsFactory = canvasGraphicsFactory;
        this.baseTransform = baseTransform;
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(TilingPattern, "MAX_PATTERN_SIZE", 3000);
; // ./src/shared/image_utils.js
function convertToRGBA(params) {
    switch(params.kind){
        case ImageKind.GRAYSCALE_1BPP:
            return convertBlackAndWhiteToRGBA(params);
        case ImageKind.RGB_24BPP:
            return convertRGBToRGBA(params);
    }
    return null;
}
function convertBlackAndWhiteToRGBA(param) {
    let { src, srcPos = 0, dest, width, height, nonBlackColor = 0xffffffff, inverseDecode = false } = param;
    const black = util_FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;
    const [zeroMapping, oneMapping] = inverseDecode ? [
        nonBlackColor,
        black
    ] : [
        black,
        nonBlackColor
    ];
    const widthInSource = width >> 3;
    const widthRemainder = width & 7;
    const srcLength = src.length;
    dest = new Uint32Array(dest.buffer);
    let destPos = 0;
    for(let i = 0; i < height; i++){
        for(const max = srcPos + widthInSource; srcPos < max; srcPos++){
            const elem = srcPos < srcLength ? src[srcPos] : 255;
            dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;
            dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;
            dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;
            dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;
            dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;
            dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;
            dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;
            dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;
        }
        if (widthRemainder === 0) {
            continue;
        }
        const elem = srcPos < srcLength ? src[srcPos++] : 255;
        for(let j = 0; j < widthRemainder; j++){
            dest[destPos++] = elem & 1 << 7 - j ? oneMapping : zeroMapping;
        }
    }
    return {
        srcPos,
        destPos
    };
}
function convertRGBToRGBA(param) {
    let { src, srcPos = 0, dest, destPos = 0, width, height } = param;
    let i = 0;
    const len = width * height * 3;
    const len32 = len >> 2;
    const src32 = new Uint32Array(src.buffer, srcPos, len32);
    if (FeatureTest.isLittleEndian) {
        for(; i < len32 - 2; i += 3, destPos += 4){
            const s1 = src32[i];
            const s2 = src32[i + 1];
            const s3 = src32[i + 2];
            dest[destPos] = s1 | 0xff000000;
            dest[destPos + 1] = s1 >>> 24 | s2 << 8 | 0xff000000;
            dest[destPos + 2] = s2 >>> 16 | s3 << 16 | 0xff000000;
            dest[destPos + 3] = s3 >>> 8 | 0xff000000;
        }
        for(let j = i * 4, jj = srcPos + len; j < jj; j += 3){
            dest[destPos++] = src[j] | src[j + 1] << 8 | src[j + 2] << 16 | 0xff000000;
        }
    } else {
        for(; i < len32 - 2; i += 3, destPos += 4){
            const s1 = src32[i];
            const s2 = src32[i + 1];
            const s3 = src32[i + 2];
            dest[destPos] = s1 | 0xff;
            dest[destPos + 1] = s1 << 24 | s2 >>> 8 | 0xff;
            dest[destPos + 2] = s2 << 16 | s3 >>> 16 | 0xff;
            dest[destPos + 3] = s3 << 8 | 0xff;
        }
        for(let j = i * 4, jj = srcPos + len; j < jj; j += 3){
            dest[destPos++] = src[j] << 24 | src[j + 1] << 16 | src[j + 2] << 8 | 0xff;
        }
    }
    return {
        srcPos: srcPos + len,
        destPos
    };
}
function grayToRGBA(src, dest) {
    if (FeatureTest.isLittleEndian) {
        for(let i = 0, ii = src.length; i < ii; i++){
            dest[i] = src[i] * 0x10101 | 0xff000000;
        }
    } else {
        for(let i = 0, ii = src.length; i < ii; i++){
            dest[i] = src[i] * 0x1010100 | 0x000000ff;
        }
    }
}
; // ./src/display/canvas.js
const MIN_FONT_SIZE = 16;
const MAX_FONT_SIZE = 100;
const EXECUTION_TIME = 15;
const EXECUTION_STEPS = 10;
const FULL_CHUNK_HEIGHT = 16;
const SCALE_MATRIX = new DOMMatrix();
const XY = new Float32Array(2);
const MIN_MAX_INIT = new Float32Array([
    Infinity,
    Infinity,
    -Infinity,
    -Infinity
]);
function mirrorContextOperations(ctx, destCtx) {
    if (ctx._removeMirroring) {
        throw new Error("Context is already forwarding operations.");
    }
    ctx.__originalSave = ctx.save;
    ctx.__originalRestore = ctx.restore;
    ctx.__originalRotate = ctx.rotate;
    ctx.__originalScale = ctx.scale;
    ctx.__originalTranslate = ctx.translate;
    ctx.__originalTransform = ctx.transform;
    ctx.__originalSetTransform = ctx.setTransform;
    ctx.__originalResetTransform = ctx.resetTransform;
    ctx.__originalClip = ctx.clip;
    ctx.__originalMoveTo = ctx.moveTo;
    ctx.__originalLineTo = ctx.lineTo;
    ctx.__originalBezierCurveTo = ctx.bezierCurveTo;
    ctx.__originalRect = ctx.rect;
    ctx.__originalClosePath = ctx.closePath;
    ctx.__originalBeginPath = ctx.beginPath;
    ctx._removeMirroring = ()=>{
        ctx.save = ctx.__originalSave;
        ctx.restore = ctx.__originalRestore;
        ctx.rotate = ctx.__originalRotate;
        ctx.scale = ctx.__originalScale;
        ctx.translate = ctx.__originalTranslate;
        ctx.transform = ctx.__originalTransform;
        ctx.setTransform = ctx.__originalSetTransform;
        ctx.resetTransform = ctx.__originalResetTransform;
        ctx.clip = ctx.__originalClip;
        ctx.moveTo = ctx.__originalMoveTo;
        ctx.lineTo = ctx.__originalLineTo;
        ctx.bezierCurveTo = ctx.__originalBezierCurveTo;
        ctx.rect = ctx.__originalRect;
        ctx.closePath = ctx.__originalClosePath;
        ctx.beginPath = ctx.__originalBeginPath;
        delete ctx._removeMirroring;
    };
    ctx.save = function() {
        destCtx.save();
        this.__originalSave();
    };
    ctx.restore = function() {
        destCtx.restore();
        this.__originalRestore();
    };
    ctx.translate = function(x, y) {
        destCtx.translate(x, y);
        this.__originalTranslate(x, y);
    };
    ctx.scale = function(x, y) {
        destCtx.scale(x, y);
        this.__originalScale(x, y);
    };
    ctx.transform = function(a, b, c, d, e, f) {
        destCtx.transform(a, b, c, d, e, f);
        this.__originalTransform(a, b, c, d, e, f);
    };
    ctx.setTransform = function(a, b, c, d, e, f) {
        destCtx.setTransform(a, b, c, d, e, f);
        this.__originalSetTransform(a, b, c, d, e, f);
    };
    ctx.resetTransform = function() {
        destCtx.resetTransform();
        this.__originalResetTransform();
    };
    ctx.rotate = function(angle) {
        destCtx.rotate(angle);
        this.__originalRotate(angle);
    };
    ctx.clip = function(rule) {
        destCtx.clip(rule);
        this.__originalClip(rule);
    };
    ctx.moveTo = function(x, y) {
        destCtx.moveTo(x, y);
        this.__originalMoveTo(x, y);
    };
    ctx.lineTo = function(x, y) {
        destCtx.lineTo(x, y);
        this.__originalLineTo(x, y);
    };
    ctx.bezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {
        destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);
        this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);
    };
    ctx.rect = function(x, y, width, height) {
        destCtx.rect(x, y, width, height);
        this.__originalRect(x, y, width, height);
    };
    ctx.closePath = function() {
        destCtx.closePath();
        this.__originalClosePath();
    };
    ctx.beginPath = function() {
        destCtx.beginPath();
        this.__originalBeginPath();
    };
}
class CachedCanvases {
    getCanvas(id, width, height) {
        let canvasEntry;
        if (this.cache[id] !== undefined) {
            canvasEntry = this.cache[id];
            this.canvasFactory.reset(canvasEntry, width, height);
        } else {
            canvasEntry = this.canvasFactory.create(width, height);
            this.cache[id] = canvasEntry;
        }
        return canvasEntry;
    }
    delete(id) {
        delete this.cache[id];
    }
    clear() {
        for(const id in this.cache){
            const canvasEntry = this.cache[id];
            this.canvasFactory.destroy(canvasEntry);
            delete this.cache[id];
        }
    }
    constructor(canvasFactory){
        this.canvasFactory = canvasFactory;
        this.cache = Object.create(null);
    }
}
function drawImageAtIntegerCoords(ctx, srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH) {
    const [a, b, c, d, tx, ty] = getCurrentTransform(ctx);
    if (b === 0 && c === 0) {
        const tlX = destX * a + tx;
        const rTlX = Math.round(tlX);
        const tlY = destY * d + ty;
        const rTlY = Math.round(tlY);
        const brX = (destX + destW) * a + tx;
        const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;
        const brY = (destY + destH) * d + ty;
        const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;
        ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);
        ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);
        ctx.setTransform(a, b, c, d, tx, ty);
        return [
            rWidth,
            rHeight
        ];
    }
    if (a === 0 && d === 0) {
        const tlX = destY * c + tx;
        const rTlX = Math.round(tlX);
        const tlY = destX * b + ty;
        const rTlY = Math.round(tlY);
        const brX = (destY + destH) * c + tx;
        const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;
        const brY = (destX + destW) * b + ty;
        const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;
        ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);
        ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);
        ctx.setTransform(a, b, c, d, tx, ty);
        return [
            rHeight,
            rWidth
        ];
    }
    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);
    const scaleX = Math.hypot(a, b);
    const scaleY = Math.hypot(c, d);
    return [
        scaleX * destW,
        scaleY * destH
    ];
}
class CanvasExtraState {
    clone() {
        const clone = Object.create(this);
        clone.clipBox = this.clipBox.slice();
        clone.minMax = this.minMax.slice();
        return clone;
    }
    getPathBoundingBox() {
        let pathType = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : PathType.FILL, transform = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
        const box = this.minMax.slice();
        if (pathType === PathType.STROKE) {
            if (!transform) {
                unreachable("Stroke bounding box must include transform.");
            }
            Util.singularValueDecompose2dScale(transform, XY);
            const xStrokePad = XY[0] * this.lineWidth / 2;
            const yStrokePad = XY[1] * this.lineWidth / 2;
            box[0] -= xStrokePad;
            box[1] -= yStrokePad;
            box[2] += xStrokePad;
            box[3] += yStrokePad;
        }
        return box;
    }
    updateClipFromPath() {
        const intersect = Util.intersect(this.clipBox, this.getPathBoundingBox());
        this.startNewPathAndClipBox(intersect || [
            0,
            0,
            0,
            0
        ]);
    }
    isEmptyClip() {
        return this.minMax[0] === Infinity;
    }
    startNewPathAndClipBox(box) {
        this.clipBox.set(box, 0);
        this.minMax.set(MIN_MAX_INIT, 0);
    }
    getClippedPathBoundingBox() {
        let pathType = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : PathType.FILL, transform = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
        return Util.intersect(this.clipBox, this.getPathBoundingBox(pathType, transform));
    }
    constructor(width, height){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "alphaIsShape", false);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "fontSize", 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "fontSizeScale", 1);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "textMatrix", null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "textMatrixScale", 1);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "fontMatrix", FONT_IDENTITY_MATRIX);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "leading", 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "x", 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "y", 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "lineX", 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "lineY", 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "charSpacing", 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "wordSpacing", 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "textHScale", 1);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "textRenderingMode", TextRenderingMode.FILL);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "textRise", 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "fillColor", "#000000");
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "strokeColor", "#000000");
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "patternFill", false);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "patternStroke", false);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "fillAlpha", 1);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "strokeAlpha", 1);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "lineWidth", 1);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "activeSMask", null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "transferMaps", "none");
        this.clipBox = new Float32Array([
            0,
            0,
            width,
            height
        ]);
        this.minMax = MIN_MAX_INIT.slice();
    }
}
function putBinaryImageData(ctx, imgData) {
    if (imgData instanceof ImageData) {
        ctx.putImageData(imgData, 0, 0);
        return;
    }
    const height = imgData.height, width = imgData.width;
    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;
    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;
    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;
    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);
    let srcPos = 0, destPos;
    const src = imgData.data;
    const dest = chunkImgData.data;
    let i, j, thisChunkHeight, elemsInThisChunk;
    if (imgData.kind === util_ImageKind.GRAYSCALE_1BPP) {
        const srcLength = src.byteLength;
        const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);
        const dest32DataLength = dest32.length;
        const fullSrcDiff = width + 7 >> 3;
        const white = 0xffffffff;
        const black = util_FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;
        for(i = 0; i < totalChunks; i++){
            thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;
            destPos = 0;
            for(j = 0; j < thisChunkHeight; j++){
                const srcDiff = srcLength - srcPos;
                let k = 0;
                const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;
                const kEndUnrolled = kEnd & ~7;
                let mask = 0;
                let srcByte = 0;
                for(; k < kEndUnrolled; k += 8){
                    srcByte = src[srcPos++];
                    dest32[destPos++] = srcByte & 128 ? white : black;
                    dest32[destPos++] = srcByte & 64 ? white : black;
                    dest32[destPos++] = srcByte & 32 ? white : black;
                    dest32[destPos++] = srcByte & 16 ? white : black;
                    dest32[destPos++] = srcByte & 8 ? white : black;
                    dest32[destPos++] = srcByte & 4 ? white : black;
                    dest32[destPos++] = srcByte & 2 ? white : black;
                    dest32[destPos++] = srcByte & 1 ? white : black;
                }
                for(; k < kEnd; k++){
                    if (mask === 0) {
                        srcByte = src[srcPos++];
                        mask = 128;
                    }
                    dest32[destPos++] = srcByte & mask ? white : black;
                    mask >>= 1;
                }
            }
            while(destPos < dest32DataLength){
                dest32[destPos++] = 0;
            }
            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);
        }
    } else if (imgData.kind === util_ImageKind.RGBA_32BPP) {
        j = 0;
        elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;
        for(i = 0; i < fullChunks; i++){
            dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));
            srcPos += elemsInThisChunk;
            ctx.putImageData(chunkImgData, 0, j);
            j += FULL_CHUNK_HEIGHT;
        }
        if (i < totalChunks) {
            elemsInThisChunk = width * partialChunkHeight * 4;
            dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));
            ctx.putImageData(chunkImgData, 0, j);
        }
    } else if (imgData.kind === util_ImageKind.RGB_24BPP) {
        thisChunkHeight = FULL_CHUNK_HEIGHT;
        elemsInThisChunk = width * thisChunkHeight;
        for(i = 0; i < totalChunks; i++){
            if (i >= fullChunks) {
                thisChunkHeight = partialChunkHeight;
                elemsInThisChunk = width * thisChunkHeight;
            }
            destPos = 0;
            for(j = elemsInThisChunk; j--;){
                dest[destPos++] = src[srcPos++];
                dest[destPos++] = src[srcPos++];
                dest[destPos++] = src[srcPos++];
                dest[destPos++] = 255;
            }
            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);
        }
    } else {
        throw new Error("bad image kind: ".concat(imgData.kind));
    }
}
function putBinaryImageMask(ctx, imgData) {
    if (imgData.bitmap) {
        ctx.drawImage(imgData.bitmap, 0, 0);
        return;
    }
    const height = imgData.height, width = imgData.width;
    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;
    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;
    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;
    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);
    let srcPos = 0;
    const src = imgData.data;
    const dest = chunkImgData.data;
    for(let i = 0; i < totalChunks; i++){
        const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;
        ({ srcPos } = convertBlackAndWhiteToRGBA({
            src,
            srcPos,
            dest,
            width,
            height: thisChunkHeight,
            nonBlackColor: 0
        }));
        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);
    }
}
function copyCtxState(sourceCtx, destCtx) {
    const properties = [
        "strokeStyle",
        "fillStyle",
        "fillRule",
        "globalAlpha",
        "lineWidth",
        "lineCap",
        "lineJoin",
        "miterLimit",
        "globalCompositeOperation",
        "font",
        "filter"
    ];
    for (const property of properties){
        if (sourceCtx[property] !== undefined) {
            destCtx[property] = sourceCtx[property];
        }
    }
    if (sourceCtx.setLineDash !== undefined) {
        destCtx.setLineDash(sourceCtx.getLineDash());
        destCtx.lineDashOffset = sourceCtx.lineDashOffset;
    }
}
function resetCtxToDefault(ctx) {
    ctx.strokeStyle = ctx.fillStyle = "#000000";
    ctx.fillRule = "nonzero";
    ctx.globalAlpha = 1;
    ctx.lineWidth = 1;
    ctx.lineCap = "butt";
    ctx.lineJoin = "miter";
    ctx.miterLimit = 10;
    ctx.globalCompositeOperation = "source-over";
    ctx.font = "10px sans-serif";
    if (ctx.setLineDash !== undefined) {
        ctx.setLineDash([]);
        ctx.lineDashOffset = 0;
    }
    const { filter } = ctx;
    if (filter !== "none" && filter !== "") {
        ctx.filter = "none";
    }
}
function getImageSmoothingEnabled(transform, interpolate) {
    if (interpolate) {
        return true;
    }
    Util.singularValueDecompose2dScale(transform, XY);
    const actualScale = Math.fround(OutputScale.pixelRatio * PixelsPerInch.PDF_TO_CSS_UNITS);
    return XY[0] <= actualScale && XY[1] <= actualScale;
}
const LINE_CAP_STYLES = [
    "butt",
    "round",
    "square"
];
const LINE_JOIN_STYLES = [
    "miter",
    "round",
    "bevel"
];
const NORMAL_CLIP = {};
const EO_CLIP = {};
var _restoreInitialState = /*#__PURE__*/ new WeakSet(), _drawFilter = /*#__PURE__*/ new WeakSet(), _getScaledPath = /*#__PURE__*/ new WeakSet();
class CanvasGraphics {
    getObject(data) {
        let fallback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
        if (typeof data === "string") {
            return data.startsWith("g_") ? this.commonObjs.get(data) : this.objs.get(data);
        }
        return fallback;
    }
    beginDrawing(param) {
        let { transform, viewport, transparency = false, background = null } = param;
        const width = this.ctx.canvas.width;
        const height = this.ctx.canvas.height;
        const savedFillStyle = this.ctx.fillStyle;
        this.ctx.fillStyle = background || "#ffffff";
        this.ctx.fillRect(0, 0, width, height);
        this.ctx.fillStyle = savedFillStyle;
        if (transparency) {
            const transparentCanvas = this.cachedCanvases.getCanvas("transparent", width, height);
            this.compositeCtx = this.ctx;
            this.transparentCanvas = transparentCanvas.canvas;
            this.ctx = transparentCanvas.context;
            this.ctx.save();
            this.ctx.transform(...getCurrentTransform(this.compositeCtx));
        }
        this.ctx.save();
        resetCtxToDefault(this.ctx);
        if (transform) {
            this.ctx.transform(...transform);
            this.outputScaleX = transform[0];
            this.outputScaleY = transform[0];
        }
        this.ctx.transform(...viewport.transform);
        this.viewportScale = viewport.scale;
        this.baseTransform = getCurrentTransform(this.ctx);
    }
    executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {
        const argsArray = operatorList.argsArray;
        const fnArray = operatorList.fnArray;
        let i = executionStartIdx || 0;
        const argsArrayLen = argsArray.length;
        if (argsArrayLen === i) {
            return i;
        }
        const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === "function";
        const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;
        let steps = 0;
        const commonObjs = this.commonObjs;
        const objs = this.objs;
        let fnId;
        while(true){
            if (stepper !== undefined && i === stepper.nextBreakPoint) {
                stepper.breakIt(i, continueCallback);
                return i;
            }
            fnId = fnArray[i];
            if (fnId !== OPS.dependency) {
                this[fnId].apply(this, argsArray[i]);
            } else {
                for (const depObjId of argsArray[i]){
                    const objsPool = depObjId.startsWith("g_") ? commonObjs : objs;
                    if (!objsPool.has(depObjId)) {
                        objsPool.get(depObjId, continueCallback);
                        return i;
                    }
                }
            }
            i++;
            if (i === argsArrayLen) {
                return i;
            }
            if (chunkOperations && ++steps > EXECUTION_STEPS) {
                if (Date.now() > endTime) {
                    continueCallback();
                    return i;
                }
                steps = 0;
            }
        }
    }
    endDrawing() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _restoreInitialState, restoreInitialState).call(this);
        this.cachedCanvases.clear();
        this.cachedPatterns.clear();
        for (const cache of this._cachedBitmapsMap.values()){
            for (const canvas of cache.values()){
                if (typeof HTMLCanvasElement !== "undefined" && canvas instanceof HTMLCanvasElement) {
                    canvas.width = canvas.height = 0;
                }
            }
            cache.clear();
        }
        this._cachedBitmapsMap.clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawFilter, drawFilter).call(this);
    }
    _scaleImage(img, inverseTransform) {
        var _img_width;
        const width = (_img_width = img.width) !== null && _img_width !== void 0 ? _img_width : img.displayWidth;
        var _img_height;
        const height = (_img_height = img.height) !== null && _img_height !== void 0 ? _img_height : img.displayHeight;
        let widthScale = Math.max(Math.hypot(inverseTransform[0], inverseTransform[1]), 1);
        let heightScale = Math.max(Math.hypot(inverseTransform[2], inverseTransform[3]), 1);
        let paintWidth = width, paintHeight = height;
        let tmpCanvasId = "prescale1";
        let tmpCanvas, tmpCtx;
        while(widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1){
            let newWidth = paintWidth, newHeight = paintHeight;
            if (widthScale > 2 && paintWidth > 1) {
                newWidth = paintWidth >= 16384 ? Math.floor(paintWidth / 2) - 1 || 1 : Math.ceil(paintWidth / 2);
                widthScale /= paintWidth / newWidth;
            }
            if (heightScale > 2 && paintHeight > 1) {
                newHeight = paintHeight >= 16384 ? Math.floor(paintHeight / 2) - 1 || 1 : Math.ceil(paintHeight) / 2;
                heightScale /= paintHeight / newHeight;
            }
            tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);
            tmpCtx = tmpCanvas.context;
            tmpCtx.clearRect(0, 0, newWidth, newHeight);
            tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);
            img = tmpCanvas.canvas;
            paintWidth = newWidth;
            paintHeight = newHeight;
            tmpCanvasId = tmpCanvasId === "prescale1" ? "prescale2" : "prescale1";
        }
        return {
            img,
            paintWidth,
            paintHeight
        };
    }
    _createMaskCanvas(img) {
        const ctx = this.ctx;
        const { width, height } = img;
        const fillColor = this.current.fillColor;
        const isPatternFill = this.current.patternFill;
        const currentTransform = getCurrentTransform(ctx);
        let cache, cacheKey, scaled, maskCanvas;
        if ((img.bitmap || img.data) && img.count > 1) {
            const mainKey = img.bitmap || img.data.buffer;
            cacheKey = JSON.stringify(isPatternFill ? currentTransform : [
                currentTransform.slice(0, 4),
                fillColor
            ]);
            cache = this._cachedBitmapsMap.get(mainKey);
            if (!cache) {
                cache = new Map();
                this._cachedBitmapsMap.set(mainKey, cache);
            }
            const cachedImage = cache.get(cacheKey);
            if (cachedImage && !isPatternFill) {
                const offsetX = Math.round(Math.min(currentTransform[0], currentTransform[2]) + currentTransform[4]);
                const offsetY = Math.round(Math.min(currentTransform[1], currentTransform[3]) + currentTransform[5]);
                return {
                    canvas: cachedImage,
                    offsetX,
                    offsetY
                };
            }
            scaled = cachedImage;
        }
        if (!scaled) {
            maskCanvas = this.cachedCanvases.getCanvas("maskCanvas", width, height);
            putBinaryImageMask(maskCanvas.context, img);
        }
        let maskToCanvas = Util.transform(currentTransform, [
            1 / width,
            0,
            0,
            -1 / height,
            0,
            0
        ]);
        maskToCanvas = Util.transform(maskToCanvas, [
            1,
            0,
            0,
            1,
            0,
            -height
        ]);
        const minMax = MIN_MAX_INIT.slice();
        Util.axialAlignedBoundingBox([
            0,
            0,
            width,
            height
        ], maskToCanvas, minMax);
        const [minX, minY, maxX, maxY] = minMax;
        const drawnWidth = Math.round(maxX - minX) || 1;
        const drawnHeight = Math.round(maxY - minY) || 1;
        const fillCanvas = this.cachedCanvases.getCanvas("fillCanvas", drawnWidth, drawnHeight);
        const fillCtx = fillCanvas.context;
        const offsetX = minX;
        const offsetY = minY;
        fillCtx.translate(-offsetX, -offsetY);
        fillCtx.transform(...maskToCanvas);
        if (!scaled) {
            scaled = this._scaleImage(maskCanvas.canvas, getCurrentTransformInverse(fillCtx));
            scaled = scaled.img;
            if (cache && isPatternFill) {
                cache.set(cacheKey, scaled);
            }
        }
        fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(getCurrentTransform(fillCtx), img.interpolate);
        drawImageAtIntegerCoords(fillCtx, scaled, 0, 0, scaled.width, scaled.height, 0, 0, width, height);
        fillCtx.globalCompositeOperation = "source-in";
        const inverse = Util.transform(getCurrentTransformInverse(fillCtx), [
            1,
            0,
            0,
            1,
            -offsetX,
            -offsetY
        ]);
        fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, PathType.FILL) : fillColor;
        fillCtx.fillRect(0, 0, width, height);
        if (cache && !isPatternFill) {
            this.cachedCanvases.delete("fillCanvas");
            cache.set(cacheKey, fillCanvas.canvas);
        }
        return {
            canvas: fillCanvas.canvas,
            offsetX: Math.round(offsetX),
            offsetY: Math.round(offsetY)
        };
    }
    setLineWidth(width) {
        if (width !== this.current.lineWidth) {
            this._cachedScaleForStroking[0] = -1;
        }
        this.current.lineWidth = width;
        this.ctx.lineWidth = width;
    }
    setLineCap(style) {
        this.ctx.lineCap = LINE_CAP_STYLES[style];
    }
    setLineJoin(style) {
        this.ctx.lineJoin = LINE_JOIN_STYLES[style];
    }
    setMiterLimit(limit) {
        this.ctx.miterLimit = limit;
    }
    setDash(dashArray, dashPhase) {
        const ctx = this.ctx;
        if (ctx.setLineDash !== undefined) {
            ctx.setLineDash(dashArray);
            ctx.lineDashOffset = dashPhase;
        }
    }
    setRenderingIntent(intent) {}
    setFlatness(flatness) {}
    setGState(states) {
        for (const [key, value] of states){
            switch(key){
                case "LW":
                    this.setLineWidth(value);
                    break;
                case "LC":
                    this.setLineCap(value);
                    break;
                case "LJ":
                    this.setLineJoin(value);
                    break;
                case "ML":
                    this.setMiterLimit(value);
                    break;
                case "D":
                    this.setDash(value[0], value[1]);
                    break;
                case "RI":
                    this.setRenderingIntent(value);
                    break;
                case "FL":
                    this.setFlatness(value);
                    break;
                case "Font":
                    this.setFont(value[0], value[1]);
                    break;
                case "CA":
                    this.current.strokeAlpha = value;
                    break;
                case "ca":
                    this.ctx.globalAlpha = this.current.fillAlpha = value;
                    break;
                case "BM":
                    this.ctx.globalCompositeOperation = value;
                    break;
                case "SMask":
                    this.current.activeSMask = value ? this.tempSMask : null;
                    this.tempSMask = null;
                    this.checkSMaskState();
                    break;
                case "TR":
                    this.ctx.filter = this.current.transferMaps = this.filterFactory.addFilter(value);
                    break;
            }
        }
    }
    get inSMaskMode() {
        return !!this.suspendedCtx;
    }
    checkSMaskState() {
        const inSMaskMode = this.inSMaskMode;
        if (this.current.activeSMask && !inSMaskMode) {
            this.beginSMaskMode();
        } else if (!this.current.activeSMask && inSMaskMode) {
            this.endSMaskMode();
        }
    }
    beginSMaskMode() {
        if (this.inSMaskMode) {
            throw new Error("beginSMaskMode called while already in smask mode");
        }
        const drawnWidth = this.ctx.canvas.width;
        const drawnHeight = this.ctx.canvas.height;
        const cacheId = "smaskGroupAt" + this.groupLevel;
        const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);
        this.suspendedCtx = this.ctx;
        const ctx = this.ctx = scratchCanvas.context;
        ctx.setTransform(this.suspendedCtx.getTransform());
        copyCtxState(this.suspendedCtx, ctx);
        mirrorContextOperations(ctx, this.suspendedCtx);
        this.setGState([
            [
                "BM",
                "source-over"
            ]
        ]);
    }
    endSMaskMode() {
        if (!this.inSMaskMode) {
            throw new Error("endSMaskMode called while not in smask mode");
        }
        this.ctx._removeMirroring();
        copyCtxState(this.ctx, this.suspendedCtx);
        this.ctx = this.suspendedCtx;
        this.suspendedCtx = null;
    }
    compose(dirtyBox) {
        if (!this.current.activeSMask) {
            return;
        }
        if (!dirtyBox) {
            dirtyBox = [
                0,
                0,
                this.ctx.canvas.width,
                this.ctx.canvas.height
            ];
        } else {
            dirtyBox[0] = Math.floor(dirtyBox[0]);
            dirtyBox[1] = Math.floor(dirtyBox[1]);
            dirtyBox[2] = Math.ceil(dirtyBox[2]);
            dirtyBox[3] = Math.ceil(dirtyBox[3]);
        }
        const smask = this.current.activeSMask;
        const suspendedCtx = this.suspendedCtx;
        this.composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);
        this.ctx.save();
        this.ctx.setTransform(1, 0, 0, 1, 0, 0);
        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);
        this.ctx.restore();
    }
    composeSMask(ctx, smask, layerCtx, layerBox) {
        const layerOffsetX = layerBox[0];
        const layerOffsetY = layerBox[1];
        const layerWidth = layerBox[2] - layerOffsetX;
        const layerHeight = layerBox[3] - layerOffsetY;
        if (layerWidth === 0 || layerHeight === 0) {
            return;
        }
        this.genericComposeSMask(smask.context, layerCtx, layerWidth, layerHeight, smask.subtype, smask.backdrop, smask.transferMap, layerOffsetX, layerOffsetY, smask.offsetX, smask.offsetY);
        ctx.save();
        ctx.globalAlpha = 1;
        ctx.globalCompositeOperation = "source-over";
        ctx.setTransform(1, 0, 0, 1, 0, 0);
        ctx.drawImage(layerCtx.canvas, 0, 0);
        ctx.restore();
    }
    genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap, layerOffsetX, layerOffsetY, maskOffsetX, maskOffsetY) {
        let maskCanvas = maskCtx.canvas;
        let maskX = layerOffsetX - maskOffsetX;
        let maskY = layerOffsetY - maskOffsetY;
        if (backdrop) {
            if (maskX < 0 || maskY < 0 || maskX + width > maskCanvas.width || maskY + height > maskCanvas.height) {
                const canvas = this.cachedCanvases.getCanvas("maskExtension", width, height);
                const ctx = canvas.context;
                ctx.drawImage(maskCanvas, -maskX, -maskY);
                ctx.globalCompositeOperation = "destination-atop";
                ctx.fillStyle = backdrop;
                ctx.fillRect(0, 0, width, height);
                ctx.globalCompositeOperation = "source-over";
                maskCanvas = canvas.canvas;
                maskX = maskY = 0;
            } else {
                maskCtx.save();
                maskCtx.globalAlpha = 1;
                maskCtx.setTransform(1, 0, 0, 1, 0, 0);
                const clip = new Path2D();
                clip.rect(maskX, maskY, width, height);
                maskCtx.clip(clip);
                maskCtx.globalCompositeOperation = "destination-atop";
                maskCtx.fillStyle = backdrop;
                maskCtx.fillRect(maskX, maskY, width, height);
                maskCtx.restore();
            }
        }
        layerCtx.save();
        layerCtx.globalAlpha = 1;
        layerCtx.setTransform(1, 0, 0, 1, 0, 0);
        if (subtype === "Alpha" && transferMap) {
            layerCtx.filter = this.filterFactory.addAlphaFilter(transferMap);
        } else if (subtype === "Luminosity") {
            layerCtx.filter = this.filterFactory.addLuminosityFilter(transferMap);
        }
        const clip = new Path2D();
        clip.rect(layerOffsetX, layerOffsetY, width, height);
        layerCtx.clip(clip);
        layerCtx.globalCompositeOperation = "destination-in";
        layerCtx.drawImage(maskCanvas, maskX, maskY, width, height, layerOffsetX, layerOffsetY, width, height);
        layerCtx.restore();
    }
    save() {
        if (this.inSMaskMode) {
            copyCtxState(this.ctx, this.suspendedCtx);
        }
        this.ctx.save();
        const old = this.current;
        this.stateStack.push(old);
        this.current = old.clone();
    }
    restore() {
        if (this.stateStack.length === 0) {
            if (this.inSMaskMode) {
                this.endSMaskMode();
            }
            return;
        }
        this.current = this.stateStack.pop();
        this.ctx.restore();
        if (this.inSMaskMode) {
            copyCtxState(this.suspendedCtx, this.ctx);
        }
        this.checkSMaskState();
        this.pendingClip = null;
        this._cachedScaleForStroking[0] = -1;
        this._cachedGetSinglePixelWidth = null;
    }
    transform(a, b, c, d, e, f) {
        this.ctx.transform(a, b, c, d, e, f);
        this._cachedScaleForStroking[0] = -1;
        this._cachedGetSinglePixelWidth = null;
    }
    constructPath(op, data, minMax) {
        let [path] = data;
        if (!minMax) {
            path || (path = data[0] = new Path2D());
            this[op](path);
            return;
        }
        if (!(path instanceof Path2D)) {
            const path2d = data[0] = new Path2D();
            for(let i = 0, ii = path.length; i < ii;){
                switch(path[i++]){
                    case DrawOPS.moveTo:
                        path2d.moveTo(path[i++], path[i++]);
                        break;
                    case DrawOPS.lineTo:
                        path2d.lineTo(path[i++], path[i++]);
                        break;
                    case DrawOPS.curveTo:
                        path2d.bezierCurveTo(path[i++], path[i++], path[i++], path[i++], path[i++], path[i++]);
                        break;
                    case DrawOPS.closePath:
                        path2d.closePath();
                        break;
                    default:
                        warn("Unrecognized drawing path operator: ".concat(path[i - 1]));
                        break;
                }
            }
            path = path2d;
        }
        Util.axialAlignedBoundingBox(minMax, getCurrentTransform(this.ctx), this.current.minMax);
        this[op](path);
    }
    closePath() {
        this.ctx.closePath();
    }
    stroke(path) {
        let consumePath = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
        const ctx = this.ctx;
        const strokeColor = this.current.strokeColor;
        ctx.globalAlpha = this.current.strokeAlpha;
        if (this.contentVisible) {
            if (typeof strokeColor === "object" && (strokeColor === null || strokeColor === void 0 ? void 0 : strokeColor.getPattern)) {
                const baseTransform = strokeColor.isModifyingCurrentTransform() ? ctx.getTransform() : null;
                ctx.save();
                ctx.strokeStyle = strokeColor.getPattern(ctx, this, getCurrentTransformInverse(ctx), PathType.STROKE);
                if (baseTransform) {
                    const newPath = new Path2D();
                    newPath.addPath(path, ctx.getTransform().invertSelf().multiplySelf(baseTransform));
                    path = newPath;
                }
                this.rescaleAndStroke(path, false);
                ctx.restore();
            } else {
                this.rescaleAndStroke(path, true);
            }
        }
        if (consumePath) {
            this.consumePath(path, this.current.getClippedPathBoundingBox(PathType.STROKE, getCurrentTransform(this.ctx)));
        }
        ctx.globalAlpha = this.current.fillAlpha;
    }
    closeStroke(path) {
        this.stroke(path);
    }
    fill(path) {
        let consumePath = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
        const ctx = this.ctx;
        const fillColor = this.current.fillColor;
        const isPatternFill = this.current.patternFill;
        let needRestore = false;
        if (isPatternFill) {
            const baseTransform = fillColor.isModifyingCurrentTransform() ? ctx.getTransform() : null;
            ctx.save();
            ctx.fillStyle = fillColor.getPattern(ctx, this, getCurrentTransformInverse(ctx), PathType.FILL);
            if (baseTransform) {
                const newPath = new Path2D();
                newPath.addPath(path, ctx.getTransform().invertSelf().multiplySelf(baseTransform));
                path = newPath;
            }
            needRestore = true;
        }
        const intersect = this.current.getClippedPathBoundingBox();
        if (this.contentVisible && intersect !== null) {
            if (this.pendingEOFill) {
                ctx.fill(path, "evenodd");
                this.pendingEOFill = false;
            } else {
                ctx.fill(path);
            }
        }
        if (needRestore) {
            ctx.restore();
        }
        if (consumePath) {
            this.consumePath(path, intersect);
        }
    }
    eoFill(path) {
        this.pendingEOFill = true;
        this.fill(path);
    }
    fillStroke(path) {
        this.fill(path, false);
        this.stroke(path, false);
        this.consumePath(path);
    }
    eoFillStroke(path) {
        this.pendingEOFill = true;
        this.fillStroke(path);
    }
    closeFillStroke(path) {
        this.fillStroke(path);
    }
    closeEOFillStroke(path) {
        this.pendingEOFill = true;
        this.fillStroke(path);
    }
    endPath(path) {
        this.consumePath(path);
    }
    rawFillPath(path) {
        this.ctx.fill(path);
    }
    clip() {
        this.pendingClip = NORMAL_CLIP;
    }
    eoClip() {
        this.pendingClip = EO_CLIP;
    }
    beginText() {
        this.current.textMatrix = null;
        this.current.textMatrixScale = 1;
        this.current.x = this.current.lineX = 0;
        this.current.y = this.current.lineY = 0;
    }
    endText() {
        const paths = this.pendingTextPaths;
        const ctx = this.ctx;
        if (paths === undefined) {
            return;
        }
        const newPath = new Path2D();
        const invTransf = ctx.getTransform().invertSelf();
        for (const { transform, x, y, fontSize, path } of paths){
            newPath.addPath(path, new DOMMatrix(transform).preMultiplySelf(invTransf).translate(x, y).scale(fontSize, -fontSize));
        }
        ctx.clip(newPath);
        delete this.pendingTextPaths;
    }
    setCharSpacing(spacing) {
        this.current.charSpacing = spacing;
    }
    setWordSpacing(spacing) {
        this.current.wordSpacing = spacing;
    }
    setHScale(scale) {
        this.current.textHScale = scale / 100;
    }
    setLeading(leading) {
        this.current.leading = -leading;
    }
    setFont(fontRefName, size) {
        var _fontObj_systemFontInfo;
        const fontObj = this.commonObjs.get(fontRefName);
        const current = this.current;
        if (!fontObj) {
            throw new Error("Can't find font for ".concat(fontRefName));
        }
        current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;
        if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {
            warn("Invalid font matrix for font " + fontRefName);
        }
        if (size < 0) {
            size = -size;
            current.fontDirection = -1;
        } else {
            current.fontDirection = 1;
        }
        this.current.font = fontObj;
        this.current.fontSize = size;
        if (fontObj.isType3Font) {
            return;
        }
        const name = fontObj.loadedName || "sans-serif";
        const typeface = ((_fontObj_systemFontInfo = fontObj.systemFontInfo) === null || _fontObj_systemFontInfo === void 0 ? void 0 : _fontObj_systemFontInfo.css) || '"'.concat(name, '", ').concat(fontObj.fallbackName);
        let bold = "normal";
        if (fontObj.black) {
            bold = "900";
        } else if (fontObj.bold) {
            bold = "bold";
        }
        const italic = fontObj.italic ? "italic" : "normal";
        let browserFontSize = size;
        if (size < MIN_FONT_SIZE) {
            browserFontSize = MIN_FONT_SIZE;
        } else if (size > MAX_FONT_SIZE) {
            browserFontSize = MAX_FONT_SIZE;
        }
        this.current.fontSizeScale = size / browserFontSize;
        this.ctx.font = "".concat(italic, " ").concat(bold, " ").concat(browserFontSize, "px ").concat(typeface);
    }
    setTextRenderingMode(mode) {
        this.current.textRenderingMode = mode;
    }
    setTextRise(rise) {
        this.current.textRise = rise;
    }
    moveText(x, y) {
        this.current.x = this.current.lineX += x;
        this.current.y = this.current.lineY += y;
    }
    setLeadingMoveText(x, y) {
        this.setLeading(-y);
        this.moveText(x, y);
    }
    setTextMatrix(matrix) {
        const { current } = this;
        current.textMatrix = matrix;
        current.textMatrixScale = Math.hypot(matrix[0], matrix[1]);
        current.x = current.lineX = 0;
        current.y = current.lineY = 0;
    }
    nextLine() {
        this.moveText(0, this.current.leading);
    }
    paintChar(character, x, y, patternFillTransform, patternStrokeTransform) {
        const ctx = this.ctx;
        const current = this.current;
        const font = current.font;
        const textRenderingMode = current.textRenderingMode;
        const fontSize = current.fontSize / current.fontSizeScale;
        const fillStrokeMode = textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;
        const isAddToPathSet = !!(textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG);
        const patternFill = current.patternFill && !font.missingFile;
        const patternStroke = current.patternStroke && !font.missingFile;
        let path;
        if (font.disableFontFace || isAddToPathSet || patternFill || patternStroke) {
            path = font.getPathGenerator(this.commonObjs, character);
        }
        if (font.disableFontFace || patternFill || patternStroke) {
            ctx.save();
            ctx.translate(x, y);
            ctx.scale(fontSize, -fontSize);
            let currentTransform;
            if (fillStrokeMode === TextRenderingMode.FILL || fillStrokeMode === TextRenderingMode.FILL_STROKE) {
                if (patternFillTransform) {
                    currentTransform = ctx.getTransform();
                    ctx.setTransform(...patternFillTransform);
                    ctx.fill((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getScaledPath, getScaledPath).call(this, path, currentTransform, patternFillTransform));
                } else {
                    ctx.fill(path);
                }
            }
            if (fillStrokeMode === TextRenderingMode.STROKE || fillStrokeMode === TextRenderingMode.FILL_STROKE) {
                if (patternStrokeTransform) {
                    currentTransform || (currentTransform = ctx.getTransform());
                    ctx.setTransform(...patternStrokeTransform);
                    const { a, b, c, d } = currentTransform;
                    const invPatternTransform = Util.inverseTransform(patternStrokeTransform);
                    const transf = Util.transform([
                        a,
                        b,
                        c,
                        d,
                        0,
                        0
                    ], invPatternTransform);
                    Util.singularValueDecompose2dScale(transf, XY);
                    ctx.lineWidth *= Math.max(XY[0], XY[1]) / fontSize;
                    ctx.stroke((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getScaledPath, getScaledPath).call(this, path, currentTransform, patternStrokeTransform));
                } else {
                    ctx.lineWidth /= fontSize;
                    ctx.stroke(path);
                }
            }
            ctx.restore();
        } else {
            if (fillStrokeMode === TextRenderingMode.FILL || fillStrokeMode === TextRenderingMode.FILL_STROKE) {
                ctx.fillText(character, x, y);
            }
            if (fillStrokeMode === TextRenderingMode.STROKE || fillStrokeMode === TextRenderingMode.FILL_STROKE) {
                ctx.strokeText(character, x, y);
            }
        }
        if (isAddToPathSet) {
            const paths = this.pendingTextPaths || (this.pendingTextPaths = []);
            paths.push({
                transform: getCurrentTransform(ctx),
                x,
                y,
                fontSize,
                path
            });
        }
    }
    get isFontSubpixelAAEnabled() {
        const { context: ctx } = this.cachedCanvases.getCanvas("isFontSubpixelAAEnabled", 10, 10);
        ctx.scale(1.5, 1);
        ctx.fillText("I", 0, 10);
        const data = ctx.getImageData(0, 0, 10, 10).data;
        let enabled = false;
        for(let i = 3; i < data.length; i += 4){
            if (data[i] > 0 && data[i] < 255) {
                enabled = true;
                break;
            }
        }
        return shadow(this, "isFontSubpixelAAEnabled", enabled);
    }
    showText(glyphs) {
        const current = this.current;
        const font = current.font;
        if (font.isType3Font) {
            return this.showType3Text(glyphs);
        }
        const fontSize = current.fontSize;
        if (fontSize === 0) {
            return undefined;
        }
        const ctx = this.ctx;
        const fontSizeScale = current.fontSizeScale;
        const charSpacing = current.charSpacing;
        const wordSpacing = current.wordSpacing;
        const fontDirection = current.fontDirection;
        const textHScale = current.textHScale * fontDirection;
        const glyphsLength = glyphs.length;
        const vertical = font.vertical;
        const spacingDir = vertical ? 1 : -1;
        const defaultVMetrics = font.defaultVMetrics;
        const widthAdvanceScale = fontSize * current.fontMatrix[0];
        const simpleFillText = current.textRenderingMode === TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;
        ctx.save();
        if (current.textMatrix) {
            ctx.transform(...current.textMatrix);
        }
        ctx.translate(current.x, current.y + current.textRise);
        if (fontDirection > 0) {
            ctx.scale(textHScale, -1);
        } else {
            ctx.scale(textHScale, 1);
        }
        let patternFillTransform, patternStrokeTransform;
        if (current.patternFill) {
            ctx.save();
            const pattern = current.fillColor.getPattern(ctx, this, getCurrentTransformInverse(ctx), PathType.FILL);
            patternFillTransform = getCurrentTransform(ctx);
            ctx.restore();
            ctx.fillStyle = pattern;
        }
        if (current.patternStroke) {
            ctx.save();
            const pattern = current.strokeColor.getPattern(ctx, this, getCurrentTransformInverse(ctx), PathType.STROKE);
            patternStrokeTransform = getCurrentTransform(ctx);
            ctx.restore();
            ctx.strokeStyle = pattern;
        }
        let lineWidth = current.lineWidth;
        const scale = current.textMatrixScale;
        if (scale === 0 || lineWidth === 0) {
            const fillStrokeMode = current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;
            if (fillStrokeMode === TextRenderingMode.STROKE || fillStrokeMode === TextRenderingMode.FILL_STROKE) {
                lineWidth = this.getSinglePixelWidth();
            }
        } else {
            lineWidth /= scale;
        }
        if (fontSizeScale !== 1.0) {
            ctx.scale(fontSizeScale, fontSizeScale);
            lineWidth /= fontSizeScale;
        }
        ctx.lineWidth = lineWidth;
        if (font.isInvalidPDFjsFont) {
            const chars = [];
            let width = 0;
            for (const glyph of glyphs){
                chars.push(glyph.unicode);
                width += glyph.width;
            }
            ctx.fillText(chars.join(""), 0, 0);
            current.x += width * widthAdvanceScale * textHScale;
            ctx.restore();
            this.compose();
            return undefined;
        }
        let x = 0, i;
        for(i = 0; i < glyphsLength; ++i){
            const glyph = glyphs[i];
            if (typeof glyph === "number") {
                x += spacingDir * glyph * fontSize / 1000;
                continue;
            }
            let restoreNeeded = false;
            const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;
            const character = glyph.fontChar;
            const accent = glyph.accent;
            let scaledX, scaledY;
            let width = glyph.width;
            if (vertical) {
                const vmetric = glyph.vmetric || defaultVMetrics;
                const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;
                const vy = vmetric[2] * widthAdvanceScale;
                width = vmetric ? -vmetric[0] : width;
                scaledX = vx / fontSizeScale;
                scaledY = (x + vy) / fontSizeScale;
            } else {
                scaledX = x / fontSizeScale;
                scaledY = 0;
            }
            if (font.remeasure && width > 0) {
                const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;
                if (width < measuredWidth && this.isFontSubpixelAAEnabled) {
                    const characterScaleX = width / measuredWidth;
                    restoreNeeded = true;
                    ctx.save();
                    ctx.scale(characterScaleX, 1);
                    scaledX /= characterScaleX;
                } else if (width !== measuredWidth) {
                    scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;
                }
            }
            if (this.contentVisible && (glyph.isInFont || font.missingFile)) {
                if (simpleFillText && !accent) {
                    ctx.fillText(character, scaledX, scaledY);
                } else {
                    this.paintChar(character, scaledX, scaledY, patternFillTransform, patternStrokeTransform);
                    if (accent) {
                        const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;
                        const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;
                        this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternFillTransform, patternStrokeTransform);
                    }
                }
            }
            const charWidth = vertical ? width * widthAdvanceScale - spacing * fontDirection : width * widthAdvanceScale + spacing * fontDirection;
            x += charWidth;
            if (restoreNeeded) {
                ctx.restore();
            }
        }
        if (vertical) {
            current.y -= x;
        } else {
            current.x += x * textHScale;
        }
        ctx.restore();
        this.compose();
        return undefined;
    }
    showType3Text(glyphs) {
        const ctx = this.ctx;
        const current = this.current;
        const font = current.font;
        const fontSize = current.fontSize;
        const fontDirection = current.fontDirection;
        const spacingDir = font.vertical ? 1 : -1;
        const charSpacing = current.charSpacing;
        const wordSpacing = current.wordSpacing;
        const textHScale = current.textHScale * fontDirection;
        const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;
        const glyphsLength = glyphs.length;
        const isTextInvisible = current.textRenderingMode === TextRenderingMode.INVISIBLE;
        let i, glyph, width, spacingLength;
        if (isTextInvisible || fontSize === 0) {
            return;
        }
        this._cachedScaleForStroking[0] = -1;
        this._cachedGetSinglePixelWidth = null;
        ctx.save();
        if (current.textMatrix) {
            ctx.transform(...current.textMatrix);
        }
        ctx.translate(current.x, current.y + current.textRise);
        ctx.scale(textHScale, fontDirection);
        for(i = 0; i < glyphsLength; ++i){
            glyph = glyphs[i];
            if (typeof glyph === "number") {
                spacingLength = spacingDir * glyph * fontSize / 1000;
                this.ctx.translate(spacingLength, 0);
                current.x += spacingLength * textHScale;
                continue;
            }
            const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;
            const operatorList = font.charProcOperatorList[glyph.operatorListId];
            if (!operatorList) {
                warn('Type3 character "'.concat(glyph.operatorListId, '" is not available.'));
            } else if (this.contentVisible) {
                this.save();
                ctx.scale(fontSize, fontSize);
                ctx.transform(...fontMatrix);
                this.executeOperatorList(operatorList);
                this.restore();
            }
            const p = [
                glyph.width,
                0
            ];
            Util.applyTransform(p, fontMatrix);
            width = p[0] * fontSize + spacing;
            ctx.translate(width, 0);
            current.x += width * textHScale;
        }
        ctx.restore();
    }
    setCharWidth(xWidth, yWidth) {}
    setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {
        const clip = new Path2D();
        clip.rect(llx, lly, urx - llx, ury - lly);
        this.ctx.clip(clip);
        this.endPath();
    }
    getColorN_Pattern(IR) {
        let pattern;
        if (IR[0] === "TilingPattern") {
            const baseTransform = this.baseTransform || getCurrentTransform(this.ctx);
            const canvasGraphicsFactory = {
                createCanvasGraphics: (ctx)=>new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {
                        optionalContentConfig: this.optionalContentConfig,
                        markedContentStack: this.markedContentStack
                    })
            };
            pattern = new TilingPattern(IR, this.ctx, canvasGraphicsFactory, baseTransform);
        } else {
            pattern = this._getPattern(IR[1], IR[2]);
        }
        return pattern;
    }
    setStrokeColorN() {
        this.current.strokeColor = this.getColorN_Pattern(arguments);
        this.current.patternStroke = true;
    }
    setFillColorN() {
        this.current.fillColor = this.getColorN_Pattern(arguments);
        this.current.patternFill = true;
    }
    setStrokeRGBColor(color) {
        this.ctx.strokeStyle = this.current.strokeColor = color;
        this.current.patternStroke = false;
    }
    setStrokeTransparent() {
        this.ctx.strokeStyle = this.current.strokeColor = "transparent";
        this.current.patternStroke = false;
    }
    setFillRGBColor(color) {
        this.ctx.fillStyle = this.current.fillColor = color;
        this.current.patternFill = false;
    }
    setFillTransparent() {
        this.ctx.fillStyle = this.current.fillColor = "transparent";
        this.current.patternFill = false;
    }
    _getPattern(objId) {
        let matrix = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
        let pattern;
        if (this.cachedPatterns.has(objId)) {
            pattern = this.cachedPatterns.get(objId);
        } else {
            pattern = getShadingPattern(this.getObject(objId));
            this.cachedPatterns.set(objId, pattern);
        }
        if (matrix) {
            pattern.matrix = matrix;
        }
        return pattern;
    }
    shadingFill(objId) {
        if (!this.contentVisible) {
            return;
        }
        const ctx = this.ctx;
        this.save();
        const pattern = this._getPattern(objId);
        ctx.fillStyle = pattern.getPattern(ctx, this, getCurrentTransformInverse(ctx), PathType.SHADING);
        const inv = getCurrentTransformInverse(ctx);
        if ("TURBOPACK compile-time truthy", 1) {
            const { width, height } = ctx.canvas;
            const minMax = MIN_MAX_INIT.slice();
            Util.axialAlignedBoundingBox([
                0,
                0,
                width,
                height
            ], inv, minMax);
            const [x0, y0, x1, y1] = minMax;
            this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);
        } else //TURBOPACK unreachable
        ;
        this.compose(this.current.getClippedPathBoundingBox());
        this.restore();
    }
    beginInlineImage() {
        unreachable("Should not call beginInlineImage");
    }
    beginImageData() {
        unreachable("Should not call beginImageData");
    }
    paintFormXObjectBegin(matrix, bbox) {
        if (!this.contentVisible) {
            return;
        }
        this.save();
        this.baseTransformStack.push(this.baseTransform);
        if (matrix) {
            this.transform(...matrix);
        }
        this.baseTransform = getCurrentTransform(this.ctx);
        if (bbox) {
            Util.axialAlignedBoundingBox(bbox, this.baseTransform, this.current.minMax);
            const [x0, y0, x1, y1] = bbox;
            const clip = new Path2D();
            clip.rect(x0, y0, x1 - x0, y1 - y0);
            this.ctx.clip(clip);
            this.endPath();
        }
    }
    paintFormXObjectEnd() {
        if (!this.contentVisible) {
            return;
        }
        this.restore();
        this.baseTransform = this.baseTransformStack.pop();
    }
    beginGroup(group) {
        if (!this.contentVisible) {
            return;
        }
        this.save();
        if (this.inSMaskMode) {
            this.endSMaskMode();
            this.current.activeSMask = null;
        }
        const currentCtx = this.ctx;
        if (!group.isolated) {
            info("TODO: Support non-isolated groups.");
        }
        if (group.knockout) {
            warn("Knockout groups not supported.");
        }
        const currentTransform = getCurrentTransform(currentCtx);
        if (group.matrix) {
            currentCtx.transform(...group.matrix);
        }
        if (!group.bbox) {
            throw new Error("Bounding box is required.");
        }
        let bounds = MIN_MAX_INIT.slice();
        Util.axialAlignedBoundingBox(group.bbox, getCurrentTransform(currentCtx), bounds);
        const canvasBounds = [
            0,
            0,
            currentCtx.canvas.width,
            currentCtx.canvas.height
        ];
        bounds = Util.intersect(bounds, canvasBounds) || [
            0,
            0,
            0,
            0
        ];
        const offsetX = Math.floor(bounds[0]);
        const offsetY = Math.floor(bounds[1]);
        const drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);
        const drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);
        this.current.startNewPathAndClipBox([
            0,
            0,
            drawnWidth,
            drawnHeight
        ]);
        let cacheId = "groupAt" + this.groupLevel;
        if (group.smask) {
            cacheId += "_smask_" + this.smaskCounter++ % 2;
        }
        const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);
        const groupCtx = scratchCanvas.context;
        groupCtx.translate(-offsetX, -offsetY);
        groupCtx.transform(...currentTransform);
        let clip = new Path2D();
        const [x0, y0, x1, y1] = group.bbox;
        clip.rect(x0, y0, x1 - x0, y1 - y0);
        if (group.matrix) {
            const path = new Path2D();
            path.addPath(clip, new DOMMatrix(group.matrix));
            clip = path;
        }
        groupCtx.clip(clip);
        if (group.smask) {
            this.smaskStack.push({
                canvas: scratchCanvas.canvas,
                context: groupCtx,
                offsetX,
                offsetY,
                subtype: group.smask.subtype,
                backdrop: group.smask.backdrop,
                transferMap: group.smask.transferMap || null,
                startTransformInverse: null
            });
        } else {
            currentCtx.setTransform(1, 0, 0, 1, 0, 0);
            currentCtx.translate(offsetX, offsetY);
            currentCtx.save();
        }
        copyCtxState(currentCtx, groupCtx);
        this.ctx = groupCtx;
        this.setGState([
            [
                "BM",
                "source-over"
            ],
            [
                "ca",
                1
            ],
            [
                "CA",
                1
            ]
        ]);
        this.groupStack.push(currentCtx);
        this.groupLevel++;
    }
    endGroup(group) {
        if (!this.contentVisible) {
            return;
        }
        this.groupLevel--;
        const groupCtx = this.ctx;
        const ctx = this.groupStack.pop();
        this.ctx = ctx;
        this.ctx.imageSmoothingEnabled = false;
        if (group.smask) {
            this.tempSMask = this.smaskStack.pop();
            this.restore();
        } else {
            this.ctx.restore();
            const currentMtx = getCurrentTransform(this.ctx);
            this.restore();
            this.ctx.save();
            this.ctx.setTransform(...currentMtx);
            const dirtyBox = MIN_MAX_INIT.slice();
            Util.axialAlignedBoundingBox([
                0,
                0,
                groupCtx.canvas.width,
                groupCtx.canvas.height
            ], currentMtx, dirtyBox);
            this.ctx.drawImage(groupCtx.canvas, 0, 0);
            this.ctx.restore();
            this.compose(dirtyBox);
        }
    }
    beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _restoreInitialState, restoreInitialState).call(this);
        resetCtxToDefault(this.ctx);
        this.ctx.save();
        this.save();
        if (this.baseTransform) {
            this.ctx.setTransform(...this.baseTransform);
        }
        if (rect) {
            const width = rect[2] - rect[0];
            const height = rect[3] - rect[1];
            if (hasOwnCanvas && this.annotationCanvasMap) {
                transform = transform.slice();
                transform[4] -= rect[0];
                transform[5] -= rect[1];
                rect = rect.slice();
                rect[0] = rect[1] = 0;
                rect[2] = width;
                rect[3] = height;
                Util.singularValueDecompose2dScale(getCurrentTransform(this.ctx), XY);
                const { viewportScale } = this;
                const canvasWidth = Math.ceil(width * this.outputScaleX * viewportScale);
                const canvasHeight = Math.ceil(height * this.outputScaleY * viewportScale);
                this.annotationCanvas = this.canvasFactory.create(canvasWidth, canvasHeight);
                const { canvas, context } = this.annotationCanvas;
                this.annotationCanvasMap.set(id, canvas);
                this.annotationCanvas.savedCtx = this.ctx;
                this.ctx = context;
                this.ctx.save();
                this.ctx.setTransform(XY[0], 0, 0, -XY[1], 0, height * XY[1]);
                resetCtxToDefault(this.ctx);
            } else {
                resetCtxToDefault(this.ctx);
                this.endPath();
                const clip = new Path2D();
                clip.rect(rect[0], rect[1], width, height);
                this.ctx.clip(clip);
            }
        }
        this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);
        this.transform(...transform);
        this.transform(...matrix);
    }
    endAnnotation() {
        if (this.annotationCanvas) {
            this.ctx.restore();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawFilter, drawFilter).call(this);
            this.ctx = this.annotationCanvas.savedCtx;
            delete this.annotationCanvas.savedCtx;
            delete this.annotationCanvas;
        }
    }
    paintImageMaskXObject(img) {
        if (!this.contentVisible) {
            return;
        }
        const count = img.count;
        img = this.getObject(img.data, img);
        img.count = count;
        const ctx = this.ctx;
        const mask = this._createMaskCanvas(img);
        const maskCanvas = mask.canvas;
        ctx.save();
        ctx.setTransform(1, 0, 0, 1, 0, 0);
        ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);
        ctx.restore();
        this.compose();
    }
    paintImageMaskXObjectRepeat(img, scaleX) {
        let skewX = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, skewY = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, scaleY = arguments.length > 4 ? arguments[4] : void 0, positions = arguments.length > 5 ? arguments[5] : void 0;
        if (!this.contentVisible) {
            return;
        }
        img = this.getObject(img.data, img);
        const ctx = this.ctx;
        ctx.save();
        const currentTransform = getCurrentTransform(ctx);
        ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);
        const mask = this._createMaskCanvas(img);
        ctx.setTransform(1, 0, 0, 1, mask.offsetX - currentTransform[4], mask.offsetY - currentTransform[5]);
        for(let i = 0, ii = positions.length; i < ii; i += 2){
            const trans = Util.transform(currentTransform, [
                scaleX,
                skewX,
                skewY,
                scaleY,
                positions[i],
                positions[i + 1]
            ]);
            ctx.drawImage(mask.canvas, trans[4], trans[5]);
        }
        ctx.restore();
        this.compose();
    }
    paintImageMaskXObjectGroup(images) {
        if (!this.contentVisible) {
            return;
        }
        const ctx = this.ctx;
        const fillColor = this.current.fillColor;
        const isPatternFill = this.current.patternFill;
        for (const image of images){
            const { data, width, height, transform } = image;
            const maskCanvas = this.cachedCanvases.getCanvas("maskCanvas", width, height);
            const maskCtx = maskCanvas.context;
            maskCtx.save();
            const img = this.getObject(data, image);
            putBinaryImageMask(maskCtx, img);
            maskCtx.globalCompositeOperation = "source-in";
            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this, getCurrentTransformInverse(ctx), PathType.FILL) : fillColor;
            maskCtx.fillRect(0, 0, width, height);
            maskCtx.restore();
            ctx.save();
            ctx.transform(...transform);
            ctx.scale(1, -1);
            drawImageAtIntegerCoords(ctx, maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);
            ctx.restore();
        }
        this.compose();
    }
    paintImageXObject(objId) {
        if (!this.contentVisible) {
            return;
        }
        const imgData = this.getObject(objId);
        if (!imgData) {
            warn("Dependent image isn't ready yet");
            return;
        }
        this.paintInlineImageXObject(imgData);
    }
    paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {
        if (!this.contentVisible) {
            return;
        }
        const imgData = this.getObject(objId);
        if (!imgData) {
            warn("Dependent image isn't ready yet");
            return;
        }
        const width = imgData.width;
        const height = imgData.height;
        const map = [];
        for(let i = 0, ii = positions.length; i < ii; i += 2){
            map.push({
                transform: [
                    scaleX,
                    0,
                    0,
                    scaleY,
                    positions[i],
                    positions[i + 1]
                ],
                x: 0,
                y: 0,
                w: width,
                h: height
            });
        }
        this.paintInlineImageXObjectGroup(imgData, map);
    }
    applyTransferMapsToCanvas(ctx) {
        if (this.current.transferMaps !== "none") {
            ctx.filter = this.current.transferMaps;
            ctx.drawImage(ctx.canvas, 0, 0);
            ctx.filter = "none";
        }
        return ctx.canvas;
    }
    applyTransferMapsToBitmap(imgData) {
        if (this.current.transferMaps === "none") {
            return imgData.bitmap;
        }
        const { bitmap, width, height } = imgData;
        const tmpCanvas = this.cachedCanvases.getCanvas("inlineImage", width, height);
        const tmpCtx = tmpCanvas.context;
        tmpCtx.filter = this.current.transferMaps;
        tmpCtx.drawImage(bitmap, 0, 0);
        tmpCtx.filter = "none";
        return tmpCanvas.canvas;
    }
    paintInlineImageXObject(imgData) {
        if (!this.contentVisible) {
            return;
        }
        const width = imgData.width;
        const height = imgData.height;
        const ctx = this.ctx;
        this.save();
        const { filter } = ctx;
        if (filter !== "none" && filter !== "") {
            ctx.filter = "none";
        }
        ctx.scale(1 / width, -1 / height);
        let imgToPaint;
        if (imgData.bitmap) {
            imgToPaint = this.applyTransferMapsToBitmap(imgData);
        } else if (typeof HTMLElement === "function" && imgData instanceof HTMLElement || !imgData.data) {
            imgToPaint = imgData;
        } else {
            const tmpCanvas = this.cachedCanvases.getCanvas("inlineImage", width, height);
            const tmpCtx = tmpCanvas.context;
            putBinaryImageData(tmpCtx, imgData);
            imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);
        }
        const scaled = this._scaleImage(imgToPaint, getCurrentTransformInverse(ctx));
        ctx.imageSmoothingEnabled = getImageSmoothingEnabled(getCurrentTransform(ctx), imgData.interpolate);
        drawImageAtIntegerCoords(ctx, scaled.img, 0, 0, scaled.paintWidth, scaled.paintHeight, 0, -height, width, height);
        this.compose();
        this.restore();
    }
    paintInlineImageXObjectGroup(imgData, map) {
        if (!this.contentVisible) {
            return;
        }
        const ctx = this.ctx;
        let imgToPaint;
        if (imgData.bitmap) {
            imgToPaint = imgData.bitmap;
        } else {
            const w = imgData.width;
            const h = imgData.height;
            const tmpCanvas = this.cachedCanvases.getCanvas("inlineImage", w, h);
            const tmpCtx = tmpCanvas.context;
            putBinaryImageData(tmpCtx, imgData);
            imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);
        }
        for (const entry of map){
            ctx.save();
            ctx.transform(...entry.transform);
            ctx.scale(1, -1);
            drawImageAtIntegerCoords(ctx, imgToPaint, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);
            ctx.restore();
        }
        this.compose();
    }
    paintSolidColorImageMask() {
        if (!this.contentVisible) {
            return;
        }
        this.ctx.fillRect(0, 0, 1, 1);
        this.compose();
    }
    markPoint(tag) {}
    markPointProps(tag, properties) {}
    beginMarkedContent(tag) {
        this.markedContentStack.push({
            visible: true
        });
    }
    beginMarkedContentProps(tag, properties) {
        if (tag === "OC") {
            this.markedContentStack.push({
                visible: this.optionalContentConfig.isVisible(properties)
            });
        } else {
            this.markedContentStack.push({
                visible: true
            });
        }
        this.contentVisible = this.isContentVisible();
    }
    endMarkedContent() {
        this.markedContentStack.pop();
        this.contentVisible = this.isContentVisible();
    }
    beginCompat() {}
    endCompat() {}
    consumePath(path, clipBox) {
        const isEmpty = this.current.isEmptyClip();
        if (this.pendingClip) {
            this.current.updateClipFromPath();
        }
        if (!this.pendingClip) {
            this.compose(clipBox);
        }
        const ctx = this.ctx;
        if (this.pendingClip) {
            if (!isEmpty) {
                if (this.pendingClip === EO_CLIP) {
                    ctx.clip(path, "evenodd");
                } else {
                    ctx.clip(path);
                }
            }
            this.pendingClip = null;
        }
        this.current.startNewPathAndClipBox(this.current.clipBox);
    }
    getSinglePixelWidth() {
        if (!this._cachedGetSinglePixelWidth) {
            const m = getCurrentTransform(this.ctx);
            if (m[1] === 0 && m[2] === 0) {
                this._cachedGetSinglePixelWidth = 1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));
            } else {
                const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);
                const normX = Math.hypot(m[0], m[2]);
                const normY = Math.hypot(m[1], m[3]);
                this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;
            }
        }
        return this._cachedGetSinglePixelWidth;
    }
    getScaleForStroking() {
        if (this._cachedScaleForStroking[0] === -1) {
            const { lineWidth } = this.current;
            const { a, b, c, d } = this.ctx.getTransform();
            let scaleX, scaleY;
            if (b === 0 && c === 0) {
                const normX = Math.abs(a);
                const normY = Math.abs(d);
                if (normX === normY) {
                    if (lineWidth === 0) {
                        scaleX = scaleY = 1 / normX;
                    } else {
                        const scaledLineWidth = normX * lineWidth;
                        scaleX = scaleY = scaledLineWidth < 1 ? 1 / scaledLineWidth : 1;
                    }
                } else if (lineWidth === 0) {
                    scaleX = 1 / normX;
                    scaleY = 1 / normY;
                } else {
                    const scaledXLineWidth = normX * lineWidth;
                    const scaledYLineWidth = normY * lineWidth;
                    scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;
                    scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;
                }
            } else {
                const absDet = Math.abs(a * d - b * c);
                const normX = Math.hypot(a, b);
                const normY = Math.hypot(c, d);
                if (lineWidth === 0) {
                    scaleX = normY / absDet;
                    scaleY = normX / absDet;
                } else {
                    const baseArea = lineWidth * absDet;
                    scaleX = normY > baseArea ? normY / baseArea : 1;
                    scaleY = normX > baseArea ? normX / baseArea : 1;
                }
            }
            this._cachedScaleForStroking[0] = scaleX;
            this._cachedScaleForStroking[1] = scaleY;
        }
        return this._cachedScaleForStroking;
    }
    rescaleAndStroke(path, saveRestore) {
        const { ctx, current: { lineWidth } } = this;
        const [scaleX, scaleY] = this.getScaleForStroking();
        if (scaleX === scaleY) {
            ctx.lineWidth = (lineWidth || 1) * scaleX;
            ctx.stroke(path);
            return;
        }
        const dashes = ctx.getLineDash();
        if (saveRestore) {
            ctx.save();
        }
        ctx.scale(scaleX, scaleY);
        SCALE_MATRIX.a = 1 / scaleX;
        SCALE_MATRIX.d = 1 / scaleY;
        const newPath = new Path2D();
        newPath.addPath(path, SCALE_MATRIX);
        if (dashes.length > 0) {
            const scale = Math.max(scaleX, scaleY);
            ctx.setLineDash(dashes.map((x)=>x / scale));
            ctx.lineDashOffset /= scale;
        }
        ctx.lineWidth = lineWidth || 1;
        ctx.stroke(newPath);
        if (saveRestore) {
            ctx.restore();
        }
    }
    isContentVisible() {
        for(let i = this.markedContentStack.length - 1; i >= 0; i--){
            if (!this.markedContentStack[i].visible) {
                return false;
            }
        }
        return true;
    }
    constructor(canvasCtx, commonObjs, objs, canvasFactory, filterFactory, { optionalContentConfig, markedContentStack = null }, annotationCanvasMap, pageColors){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _restoreInitialState);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawFilter);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getScaledPath);
        this.ctx = canvasCtx;
        this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);
        this.stateStack = [];
        this.pendingClip = null;
        this.pendingEOFill = false;
        this.res = null;
        this.xobjs = null;
        this.commonObjs = commonObjs;
        this.objs = objs;
        this.canvasFactory = canvasFactory;
        this.filterFactory = filterFactory;
        this.groupStack = [];
        this.baseTransform = null;
        this.baseTransformStack = [];
        this.groupLevel = 0;
        this.smaskStack = [];
        this.smaskCounter = 0;
        this.tempSMask = null;
        this.suspendedCtx = null;
        this.contentVisible = true;
        this.markedContentStack = markedContentStack || [];
        this.optionalContentConfig = optionalContentConfig;
        this.cachedCanvases = new CachedCanvases(this.canvasFactory);
        this.cachedPatterns = new Map();
        this.annotationCanvasMap = annotationCanvasMap;
        this.viewportScale = 1;
        this.outputScaleX = 1;
        this.outputScaleY = 1;
        this.pageColors = pageColors;
        this._cachedScaleForStroking = [
            -1,
            0
        ];
        this._cachedGetSinglePixelWidth = null;
        this._cachedBitmapsMap = new Map();
    }
}
function restoreInitialState() {
    while(this.stateStack.length || this.inSMaskMode){
        this.restore();
    }
    this.current.activeSMask = null;
    this.ctx.restore();
    if (this.transparentCanvas) {
        this.ctx = this.compositeCtx;
        this.ctx.save();
        this.ctx.setTransform(1, 0, 0, 1, 0, 0);
        this.ctx.drawImage(this.transparentCanvas, 0, 0);
        this.ctx.restore();
        this.transparentCanvas = null;
    }
}
function drawFilter() {
    if (this.pageColors) {
        const hcmFilterId = this.filterFactory.addHCMFilter(this.pageColors.foreground, this.pageColors.background);
        if (hcmFilterId !== "none") {
            const savedFilter = this.ctx.filter;
            this.ctx.filter = hcmFilterId;
            this.ctx.drawImage(this.ctx.canvas, 0, 0);
            this.ctx.filter = savedFilter;
        }
    }
}
function getScaledPath(path, currentTransform, transform) {
    const newPath = new Path2D();
    newPath.addPath(path, new DOMMatrix(transform).invertSelf().multiplySelf(currentTransform));
    return newPath;
}
for(const op in OPS){
    if (CanvasGraphics.prototype[op] !== undefined) {
        CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];
    }
}
; // ./src/display/worker_options.js
class GlobalWorkerOptions {
    static get workerPort() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, GlobalWorkerOptions, _port);
    }
    static set workerPort(val) {
        if (!(typeof Worker !== "undefined" && val instanceof Worker) && val !== null) {
            throw new Error("Invalid `workerPort` type.");
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, GlobalWorkerOptions, _port, val);
    }
    static get workerSrc() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, GlobalWorkerOptions, _src);
    }
    static set workerSrc(val) {
        if (typeof val !== "string") {
            throw new Error("Invalid `workerSrc` type.");
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, GlobalWorkerOptions, _src, val);
    }
}
var _port = {
    writable: true,
    value: null
};
var _src = {
    writable: true,
    value: ""
};
; // ./src/display/metadata.js
var _map = /*#__PURE__*/ new WeakMap(), _data = /*#__PURE__*/ new WeakMap();
class Metadata {
    getRaw() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _data);
    }
    get(name) {
        var _class_private_field_get_get;
        return (_class_private_field_get_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _map).get(name)) !== null && _class_private_field_get_get !== void 0 ? _class_private_field_get_get : null;
    }
    [Symbol.iterator]() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _map).entries();
    }
    constructor({ parsedData, rawData }){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _map, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _data, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _map, parsedData);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _data, rawData);
    }
}
; // ./src/display/optional_content_config.js
const INTERNAL = Symbol("INTERNAL");
var _isDisplay = /*#__PURE__*/ new WeakMap(), _isPrint = /*#__PURE__*/ new WeakMap(), _userSet = /*#__PURE__*/ new WeakMap(), _visible = /*#__PURE__*/ new WeakMap();
class OptionalContentGroup {
    get visible() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _userSet)) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _visible);
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _visible)) {
            return false;
        }
        const { print, view } = this.usage;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDisplay)) {
            return (view === null || view === void 0 ? void 0 : view.viewState) !== "OFF";
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isPrint)) {
            return (print === null || print === void 0 ? void 0 : print.printState) !== "OFF";
        }
        return true;
    }
    _setVisible(internal, visible) {
        let userSet = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
        if (internal !== INTERNAL) {
            unreachable("Internal method `_setVisible` called.");
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _userSet, userSet);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _visible, visible);
    }
    constructor(renderingIntent, { name, intent, usage, rbGroups }){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDisplay, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isPrint, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _userSet, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _visible, {
            writable: true,
            value: true
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDisplay, !!(renderingIntent & RenderingIntentFlag.DISPLAY));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isPrint, !!(renderingIntent & RenderingIntentFlag.PRINT));
        this.name = name;
        this.intent = intent;
        this.usage = usage;
        this.rbGroups = rbGroups;
    }
}
var _cachedGetHash = /*#__PURE__*/ new WeakMap(), _groups = /*#__PURE__*/ new WeakMap(), _initialHash = /*#__PURE__*/ new WeakMap(), _order = /*#__PURE__*/ new WeakMap(), _evaluateVisibilityExpression = /*#__PURE__*/ new WeakSet();
class OptionalContentConfig {
    isVisible(group) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).size === 0) {
            return true;
        }
        if (!group) {
            info("Optional content group not defined.");
            return true;
        }
        if (group.type === "OCG") {
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).has(group.id)) {
                warn("Optional content group not found: ".concat(group.id));
                return true;
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).get(group.id).visible;
        } else if (group.type === "OCMD") {
            if (group.expression) {
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _evaluateVisibilityExpression, evaluateVisibilityExpression).call(this, group.expression);
            }
            if (!group.policy || group.policy === "AnyOn") {
                for (const id of group.ids){
                    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).has(id)) {
                        warn("Optional content group not found: ".concat(id));
                        return true;
                    }
                    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).get(id).visible) {
                        return true;
                    }
                }
                return false;
            } else if (group.policy === "AllOn") {
                for (const id of group.ids){
                    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).has(id)) {
                        warn("Optional content group not found: ".concat(id));
                        return true;
                    }
                    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).get(id).visible) {
                        return false;
                    }
                }
                return true;
            } else if (group.policy === "AnyOff") {
                for (const id of group.ids){
                    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).has(id)) {
                        warn("Optional content group not found: ".concat(id));
                        return true;
                    }
                    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).get(id).visible) {
                        return true;
                    }
                }
                return false;
            } else if (group.policy === "AllOff") {
                for (const id of group.ids){
                    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).has(id)) {
                        warn("Optional content group not found: ".concat(id));
                        return true;
                    }
                    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).get(id).visible) {
                        return false;
                    }
                }
                return true;
            }
            warn("Unknown optional content policy ".concat(group.policy, "."));
            return true;
        }
        warn("Unknown group type ".concat(group.type, "."));
        return true;
    }
    setVisibility(id) {
        let visible = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true, preserveRB = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
        const group = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).get(id);
        if (!group) {
            warn("Optional content group not found: ".concat(id));
            return;
        }
        if (preserveRB && visible && group.rbGroups.length) {
            for (const rbGroup of group.rbGroups){
                for (const otherId of rbGroup){
                    if (otherId !== id) {
                        var _class_private_field_get_get;
                        (_class_private_field_get_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).get(otherId)) === null || _class_private_field_get_get === void 0 ? void 0 : _class_private_field_get_get._setVisible(INTERNAL, false, true);
                    }
                }
            }
        }
        group._setVisible(INTERNAL, !!visible, true);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cachedGetHash, null);
    }
    setOCGState(param) {
        let { state, preserveRB } = param;
        let operator;
        for (const elem of state){
            switch(elem){
                case "ON":
                case "OFF":
                case "Toggle":
                    operator = elem;
                    continue;
            }
            const group = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).get(elem);
            if (!group) {
                continue;
            }
            switch(operator){
                case "ON":
                    this.setVisibility(elem, true, preserveRB);
                    break;
                case "OFF":
                    this.setVisibility(elem, false, preserveRB);
                    break;
                case "Toggle":
                    this.setVisibility(elem, !group.visible, preserveRB);
                    break;
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cachedGetHash, null);
    }
    get hasInitialVisibility() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialHash) === null || this.getHash() === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialHash);
    }
    getOrder() {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).size) {
            return null;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _order)) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _order).slice();
        }
        return [
            ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).keys()
        ];
    }
    getGroup(id) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).get(id) || null;
    }
    getHash() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cachedGetHash) !== null) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cachedGetHash);
        }
        const hash = new MurmurHash3_64();
        for (const [id, group] of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups)){
            hash.update("".concat(id, ":").concat(group.visible));
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cachedGetHash, hash.hexdigest());
    }
    [Symbol.iterator]() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).entries();
    }
    constructor(data, renderingIntent = RenderingIntentFlag.DISPLAY){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _evaluateVisibilityExpression);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cachedGetHash, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups, {
            writable: true,
            value: new Map()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialHash, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _order, {
            writable: true,
            value: null
        });
        this.renderingIntent = renderingIntent;
        this.name = null;
        this.creator = null;
        if (data === null) {
            return;
        }
        this.name = data.name;
        this.creator = data.creator;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _order, data.order);
        for (const group of data.groups){
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).set(group.id, new OptionalContentGroup(renderingIntent, group));
        }
        if (data.baseState === "OFF") {
            for (const group of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).values()){
                group._setVisible(INTERNAL, false);
            }
        }
        for (const on of data.on){
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).get(on)._setVisible(INTERNAL, true);
        }
        for (const off of data.off){
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).get(off)._setVisible(INTERNAL, false);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialHash, this.getHash());
    }
}
function evaluateVisibilityExpression(array) {
    const length = array.length;
    if (length < 2) {
        return true;
    }
    const operator = array[0];
    for(let i = 1; i < length; i++){
        const element = array[i];
        let state;
        if (Array.isArray(element)) {
            state = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _evaluateVisibilityExpression, evaluateVisibilityExpression).call(this, element);
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).has(element)) {
            state = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _groups).get(element).visible;
        } else {
            warn("Optional content group not found: ".concat(element));
            return true;
        }
        switch(operator){
            case "And":
                if (!state) {
                    return false;
                }
                break;
            case "Or":
                if (state) {
                    return true;
                }
                break;
            case "Not":
                return !state;
            default:
                return true;
        }
    }
    return operator === "And";
}
; // ./src/display/transport_stream.js
class PDFDataTransportStream {
    _onReceiveData(param) {
        let { begin, chunk } = param;
        const buffer = chunk instanceof Uint8Array && chunk.byteLength === chunk.buffer.byteLength ? chunk.buffer : new Uint8Array(chunk).buffer;
        if (begin === undefined) {
            if (this._fullRequestReader) {
                this._fullRequestReader._enqueue(buffer);
            } else {
                this._queuedChunks.push(buffer);
            }
        } else {
            const found = this._rangeReaders.some(function(rangeReader) {
                if (rangeReader._begin !== begin) {
                    return false;
                }
                rangeReader._enqueue(buffer);
                return true;
            });
            assert(found, "_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.");
        }
    }
    get _progressiveDataLength() {
        var _this__fullRequestReader;
        var _this__fullRequestReader__loaded;
        return (_this__fullRequestReader__loaded = (_this__fullRequestReader = this._fullRequestReader) === null || _this__fullRequestReader === void 0 ? void 0 : _this__fullRequestReader._loaded) !== null && _this__fullRequestReader__loaded !== void 0 ? _this__fullRequestReader__loaded : 0;
    }
    _onProgress(evt) {
        if (evt.total === undefined) {
            var _this__rangeReaders__onProgress, _this__rangeReaders_;
            (_this__rangeReaders_ = this._rangeReaders[0]) === null || _this__rangeReaders_ === void 0 ? void 0 : (_this__rangeReaders__onProgress = _this__rangeReaders_.onProgress) === null || _this__rangeReaders__onProgress === void 0 ? void 0 : _this__rangeReaders__onProgress.call(_this__rangeReaders_, {
                loaded: evt.loaded
            });
        } else {
            var _this__fullRequestReader_onProgress, _this__fullRequestReader;
            (_this__fullRequestReader = this._fullRequestReader) === null || _this__fullRequestReader === void 0 ? void 0 : (_this__fullRequestReader_onProgress = _this__fullRequestReader.onProgress) === null || _this__fullRequestReader_onProgress === void 0 ? void 0 : _this__fullRequestReader_onProgress.call(_this__fullRequestReader, {
                loaded: evt.loaded,
                total: evt.total
            });
        }
    }
    _onProgressiveDone() {
        var _this__fullRequestReader;
        (_this__fullRequestReader = this._fullRequestReader) === null || _this__fullRequestReader === void 0 ? void 0 : _this__fullRequestReader.progressiveDone();
        this._progressiveDone = true;
    }
    _removeRangeReader(reader) {
        const i = this._rangeReaders.indexOf(reader);
        if (i >= 0) {
            this._rangeReaders.splice(i, 1);
        }
    }
    getFullReader() {
        assert(!this._fullRequestReader, "PDFDataTransportStream.getFullReader can only be called once.");
        const queuedChunks = this._queuedChunks;
        this._queuedChunks = null;
        return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);
    }
    getRangeReader(begin, end) {
        if (end <= this._progressiveDataLength) {
            return null;
        }
        const reader = new PDFDataTransportStreamRangeReader(this, begin, end);
        this._pdfDataRangeTransport.requestDataRange(begin, end);
        this._rangeReaders.push(reader);
        return reader;
    }
    cancelAllRequests(reason) {
        var _this__fullRequestReader;
        (_this__fullRequestReader = this._fullRequestReader) === null || _this__fullRequestReader === void 0 ? void 0 : _this__fullRequestReader.cancel(reason);
        for (const reader of this._rangeReaders.slice(0)){
            reader.cancel(reason);
        }
        this._pdfDataRangeTransport.abort();
    }
    constructor(pdfDataRangeTransport, { disableRange = false, disableStream = false }){
        assert(pdfDataRangeTransport, 'PDFDataTransportStream - missing required "pdfDataRangeTransport" argument.');
        const { length, initialData, progressiveDone, contentDispositionFilename } = pdfDataRangeTransport;
        this._queuedChunks = [];
        this._progressiveDone = progressiveDone;
        this._contentDispositionFilename = contentDispositionFilename;
        if ((initialData === null || initialData === void 0 ? void 0 : initialData.length) > 0) {
            const buffer = initialData instanceof Uint8Array && initialData.byteLength === initialData.buffer.byteLength ? initialData.buffer : new Uint8Array(initialData).buffer;
            this._queuedChunks.push(buffer);
        }
        this._pdfDataRangeTransport = pdfDataRangeTransport;
        this._isStreamingSupported = !disableStream;
        this._isRangeSupported = !disableRange;
        this._contentLength = length;
        this._fullRequestReader = null;
        this._rangeReaders = [];
        pdfDataRangeTransport.addRangeListener((begin, chunk)=>{
            this._onReceiveData({
                begin,
                chunk
            });
        });
        pdfDataRangeTransport.addProgressListener((loaded, total)=>{
            this._onProgress({
                loaded,
                total
            });
        });
        pdfDataRangeTransport.addProgressiveReadListener((chunk)=>{
            this._onReceiveData({
                chunk
            });
        });
        pdfDataRangeTransport.addProgressiveDoneListener(()=>{
            this._onProgressiveDone();
        });
        pdfDataRangeTransport.transportReady();
    }
}
class PDFDataTransportStreamReader {
    _enqueue(chunk) {
        if (this._done) {
            return;
        }
        if (this._requests.length > 0) {
            const requestCapability = this._requests.shift();
            requestCapability.resolve({
                value: chunk,
                done: false
            });
        } else {
            this._queuedChunks.push(chunk);
        }
        this._loaded += chunk.byteLength;
    }
    get headersReady() {
        return this._headersReady;
    }
    get filename() {
        return this._filename;
    }
    get isRangeSupported() {
        return this._stream._isRangeSupported;
    }
    get isStreamingSupported() {
        return this._stream._isStreamingSupported;
    }
    get contentLength() {
        return this._stream._contentLength;
    }
    async read() {
        if (this._queuedChunks.length > 0) {
            const chunk = this._queuedChunks.shift();
            return {
                value: chunk,
                done: false
            };
        }
        if (this._done) {
            return {
                value: undefined,
                done: true
            };
        }
        const requestCapability = Promise.withResolvers();
        this._requests.push(requestCapability);
        return requestCapability.promise;
    }
    cancel(reason) {
        this._done = true;
        for (const requestCapability of this._requests){
            requestCapability.resolve({
                value: undefined,
                done: true
            });
        }
        this._requests.length = 0;
    }
    progressiveDone() {
        if (this._done) {
            return;
        }
        this._done = true;
    }
    constructor(stream, queuedChunks, progressiveDone = false, contentDispositionFilename = null){
        this._stream = stream;
        this._done = progressiveDone || false;
        this._filename = isPdfFile(contentDispositionFilename) ? contentDispositionFilename : null;
        this._queuedChunks = queuedChunks || [];
        this._loaded = 0;
        for (const chunk of this._queuedChunks){
            this._loaded += chunk.byteLength;
        }
        this._requests = [];
        this._headersReady = Promise.resolve();
        stream._fullRequestReader = this;
        this.onProgress = null;
    }
}
class PDFDataTransportStreamRangeReader {
    _enqueue(chunk) {
        if (this._done) {
            return;
        }
        if (this._requests.length === 0) {
            this._queuedChunk = chunk;
        } else {
            const requestsCapability = this._requests.shift();
            requestsCapability.resolve({
                value: chunk,
                done: false
            });
            for (const requestCapability of this._requests){
                requestCapability.resolve({
                    value: undefined,
                    done: true
                });
            }
            this._requests.length = 0;
        }
        this._done = true;
        this._stream._removeRangeReader(this);
    }
    get isStreamingSupported() {
        return false;
    }
    async read() {
        if (this._queuedChunk) {
            const chunk = this._queuedChunk;
            this._queuedChunk = null;
            return {
                value: chunk,
                done: false
            };
        }
        if (this._done) {
            return {
                value: undefined,
                done: true
            };
        }
        const requestCapability = Promise.withResolvers();
        this._requests.push(requestCapability);
        return requestCapability.promise;
    }
    cancel(reason) {
        this._done = true;
        for (const requestCapability of this._requests){
            requestCapability.resolve({
                value: undefined,
                done: true
            });
        }
        this._requests.length = 0;
        this._stream._removeRangeReader(this);
    }
    constructor(stream, begin, end){
        this._stream = stream;
        this._begin = begin;
        this._end = end;
        this._queuedChunk = null;
        this._requests = [];
        this._done = false;
        this.onProgress = null;
    }
}
; // ./src/display/content_disposition.js
function getFilenameFromContentDispositionHeader(contentDisposition) {
    let needsEncodingFixup = true;
    let tmp = toParamRegExp("filename\\*", "i").exec(contentDisposition);
    if (tmp) {
        tmp = tmp[1];
        let filename = rfc2616unquote(tmp);
        filename = unescape(filename);
        filename = rfc5987decode(filename);
        filename = rfc2047decode(filename);
        return fixupEncoding(filename);
    }
    tmp = rfc2231getparam(contentDisposition);
    if (tmp) {
        const filename = rfc2047decode(tmp);
        return fixupEncoding(filename);
    }
    tmp = toParamRegExp("filename", "i").exec(contentDisposition);
    if (tmp) {
        tmp = tmp[1];
        let filename = rfc2616unquote(tmp);
        filename = rfc2047decode(filename);
        return fixupEncoding(filename);
    }
    function toParamRegExp(attributePattern, flags) {
        return new RegExp("(?:^|;)\\s*" + attributePattern + "\\s*=\\s*" + "(" + '[^";\\s][^;\\s]*' + "|" + '"(?:[^"\\\\]|\\\\"?)+"?' + ")", flags);
    }
    function textdecode(encoding, value) {
        if (encoding) {
            if (!/^[\x00-\xFF]+$/.test(value)) {
                return value;
            }
            try {
                const decoder = new TextDecoder(encoding, {
                    fatal: true
                });
                const buffer = stringToBytes(value);
                value = decoder.decode(buffer);
                needsEncodingFixup = false;
            } catch (e) {}
        }
        return value;
    }
    function fixupEncoding(value) {
        if (needsEncodingFixup && /[\x80-\xff]/.test(value)) {
            value = textdecode("utf-8", value);
            if (needsEncodingFixup) {
                value = textdecode("iso-8859-1", value);
            }
        }
        return value;
    }
    function rfc2231getparam(contentDispositionStr) {
        const matches = [];
        let match;
        const iter = toParamRegExp("filename\\*((?!0\\d)\\d+)(\\*?)", "ig");
        while((match = iter.exec(contentDispositionStr)) !== null){
            let [, n, quot, part] = match;
            n = parseInt(n, 10);
            if (n in matches) {
                if (n === 0) {
                    break;
                }
                continue;
            }
            matches[n] = [
                quot,
                part
            ];
        }
        const parts = [];
        for(let n = 0; n < matches.length; ++n){
            if (!(n in matches)) {
                break;
            }
            let [quot, part] = matches[n];
            part = rfc2616unquote(part);
            if (quot) {
                part = unescape(part);
                if (n === 0) {
                    part = rfc5987decode(part);
                }
            }
            parts.push(part);
        }
        return parts.join("");
    }
    function rfc2616unquote(value) {
        if (value.startsWith('"')) {
            const parts = value.slice(1).split('\\"');
            for(let i = 0; i < parts.length; ++i){
                const quotindex = parts[i].indexOf('"');
                if (quotindex !== -1) {
                    parts[i] = parts[i].slice(0, quotindex);
                    parts.length = i + 1;
                }
                parts[i] = parts[i].replaceAll(/\\(.)/g, "$1");
            }
            value = parts.join('"');
        }
        return value;
    }
    function rfc5987decode(extvalue) {
        const encodingend = extvalue.indexOf("'");
        if (encodingend === -1) {
            return extvalue;
        }
        const encoding = extvalue.slice(0, encodingend);
        const langvalue = extvalue.slice(encodingend + 1);
        const value = langvalue.replace(/^[^']*'/, "");
        return textdecode(encoding, value);
    }
    function rfc2047decode(value) {
        if (!value.startsWith("=?") || /[\x00-\x19\x80-\xff]/.test(value)) {
            return value;
        }
        return value.replaceAll(/=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g, function(matches, charset, encoding, text) {
            if (encoding === "q" || encoding === "Q") {
                text = text.replaceAll("_", " ");
                text = text.replaceAll(/=([0-9a-fA-F]{2})/g, function(match, hex) {
                    return String.fromCharCode(parseInt(hex, 16));
                });
                return textdecode(charset, text);
            }
            try {
                text = atob(text);
            } catch (e) {}
            return textdecode(charset, text);
        });
    }
    return "";
}
; // ./src/display/network_utils.js
function createHeaders(isHttp, httpHeaders) {
    const headers = new Headers();
    if (!isHttp || !httpHeaders || typeof httpHeaders !== "object") {
        return headers;
    }
    for(const key in httpHeaders){
        const val = httpHeaders[key];
        if (val !== undefined) {
            headers.append(key, val);
        }
    }
    return headers;
}
function getResponseOrigin(url) {
    var _URL_parse;
    var _URL_parse_origin;
    return (_URL_parse_origin = (_URL_parse = URL.parse(url)) === null || _URL_parse === void 0 ? void 0 : _URL_parse.origin) !== null && _URL_parse_origin !== void 0 ? _URL_parse_origin : null;
}
function validateRangeRequestCapabilities(param) {
    let { responseHeaders, isHttp, rangeChunkSize, disableRange } = param;
    const returnValues = {
        allowRangeRequests: false,
        suggestedLength: undefined
    };
    const length = parseInt(responseHeaders.get("Content-Length"), 10);
    if (!Number.isInteger(length)) {
        return returnValues;
    }
    returnValues.suggestedLength = length;
    if (length <= 2 * rangeChunkSize) {
        return returnValues;
    }
    if (disableRange || !isHttp) {
        return returnValues;
    }
    if (responseHeaders.get("Accept-Ranges") !== "bytes") {
        return returnValues;
    }
    const contentEncoding = responseHeaders.get("Content-Encoding") || "identity";
    if (contentEncoding !== "identity") {
        return returnValues;
    }
    returnValues.allowRangeRequests = true;
    return returnValues;
}
function extractFilenameFromHeader(responseHeaders) {
    const contentDisposition = responseHeaders.get("Content-Disposition");
    if (contentDisposition) {
        let filename = getFilenameFromContentDispositionHeader(contentDisposition);
        if (filename.includes("%")) {
            try {
                filename = decodeURIComponent(filename);
            } catch (e) {}
        }
        if (isPdfFile(filename)) {
            return filename;
        }
    }
    return null;
}
function createResponseError(status, url) {
    return new ResponseException("Unexpected server response (".concat(status, ') while retrieving PDF "').concat(url, '".'), status, status === 404 || status === 0 && url.startsWith("file:"));
}
function validateResponseStatus(status) {
    return status === 200 || status === 206;
}
; // ./src/display/fetch_stream.js
function createFetchOptions(headers, withCredentials, abortController) {
    return {
        method: "GET",
        headers,
        signal: abortController.signal,
        mode: "cors",
        credentials: withCredentials ? "include" : "same-origin",
        redirect: "follow"
    };
}
function getArrayBuffer(val) {
    if (val instanceof Uint8Array) {
        return val.buffer;
    }
    if (val instanceof ArrayBuffer) {
        return val;
    }
    warn("getArrayBuffer - unexpected data format: ".concat(val));
    return new Uint8Array(val).buffer;
}
class PDFFetchStream {
    get _progressiveDataLength() {
        var _this__fullRequestReader;
        var _this__fullRequestReader__loaded;
        return (_this__fullRequestReader__loaded = (_this__fullRequestReader = this._fullRequestReader) === null || _this__fullRequestReader === void 0 ? void 0 : _this__fullRequestReader._loaded) !== null && _this__fullRequestReader__loaded !== void 0 ? _this__fullRequestReader__loaded : 0;
    }
    getFullReader() {
        assert(!this._fullRequestReader, "PDFFetchStream.getFullReader can only be called once.");
        this._fullRequestReader = new PDFFetchStreamReader(this);
        return this._fullRequestReader;
    }
    getRangeReader(begin, end) {
        if (end <= this._progressiveDataLength) {
            return null;
        }
        const reader = new PDFFetchStreamRangeReader(this, begin, end);
        this._rangeRequestReaders.push(reader);
        return reader;
    }
    cancelAllRequests(reason) {
        var _this__fullRequestReader;
        (_this__fullRequestReader = this._fullRequestReader) === null || _this__fullRequestReader === void 0 ? void 0 : _this__fullRequestReader.cancel(reason);
        for (const reader of this._rangeRequestReaders.slice(0)){
            reader.cancel(reason);
        }
    }
    constructor(source){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "_responseOrigin", null);
        this.source = source;
        this.isHttp = /^https?:/i.test(source.url);
        this.headers = createHeaders(this.isHttp, source.httpHeaders);
        this._fullRequestReader = null;
        this._rangeRequestReaders = [];
    }
}
class PDFFetchStreamReader {
    get headersReady() {
        return this._headersCapability.promise;
    }
    get filename() {
        return this._filename;
    }
    get contentLength() {
        return this._contentLength;
    }
    get isRangeSupported() {
        return this._isRangeSupported;
    }
    get isStreamingSupported() {
        return this._isStreamingSupported;
    }
    async read() {
        var _this_onProgress, _this;
        await this._headersCapability.promise;
        const { value, done } = await this._reader.read();
        if (done) {
            return {
                value,
                done
            };
        }
        this._loaded += value.byteLength;
        (_this_onProgress = (_this = this).onProgress) === null || _this_onProgress === void 0 ? void 0 : _this_onProgress.call(_this, {
            loaded: this._loaded,
            total: this._contentLength
        });
        return {
            value: getArrayBuffer(value),
            done: false
        };
    }
    cancel(reason) {
        var _this__reader;
        (_this__reader = this._reader) === null || _this__reader === void 0 ? void 0 : _this__reader.cancel(reason);
        this._abortController.abort();
    }
    constructor(stream){
        this._stream = stream;
        this._reader = null;
        this._loaded = 0;
        this._filename = null;
        const source = stream.source;
        this._withCredentials = source.withCredentials || false;
        this._contentLength = source.length;
        this._headersCapability = Promise.withResolvers();
        this._disableRange = source.disableRange || false;
        this._rangeChunkSize = source.rangeChunkSize;
        if (!this._rangeChunkSize && !this._disableRange) {
            this._disableRange = true;
        }
        this._abortController = new AbortController();
        this._isStreamingSupported = !source.disableStream;
        this._isRangeSupported = !source.disableRange;
        const headers = new Headers(stream.headers);
        const url = source.url;
        fetch(url, createFetchOptions(headers, this._withCredentials, this._abortController)).then((response)=>{
            stream._responseOrigin = getResponseOrigin(response.url);
            if (!validateResponseStatus(response.status)) {
                throw createResponseError(response.status, url);
            }
            this._reader = response.body.getReader();
            this._headersCapability.resolve();
            const responseHeaders = response.headers;
            const { allowRangeRequests, suggestedLength } = validateRangeRequestCapabilities({
                responseHeaders,
                isHttp: stream.isHttp,
                rangeChunkSize: this._rangeChunkSize,
                disableRange: this._disableRange
            });
            this._isRangeSupported = allowRangeRequests;
            this._contentLength = suggestedLength || this._contentLength;
            this._filename = extractFilenameFromHeader(responseHeaders);
            if (!this._isStreamingSupported && this._isRangeSupported) {
                this.cancel(new AbortException("Streaming is disabled."));
            }
        }).catch(this._headersCapability.reject);
        this.onProgress = null;
    }
}
class PDFFetchStreamRangeReader {
    get isStreamingSupported() {
        return this._isStreamingSupported;
    }
    async read() {
        var _this_onProgress, _this;
        await this._readCapability.promise;
        const { value, done } = await this._reader.read();
        if (done) {
            return {
                value,
                done
            };
        }
        this._loaded += value.byteLength;
        (_this_onProgress = (_this = this).onProgress) === null || _this_onProgress === void 0 ? void 0 : _this_onProgress.call(_this, {
            loaded: this._loaded
        });
        return {
            value: getArrayBuffer(value),
            done: false
        };
    }
    cancel(reason) {
        var _this__reader;
        (_this__reader = this._reader) === null || _this__reader === void 0 ? void 0 : _this__reader.cancel(reason);
        this._abortController.abort();
    }
    constructor(stream, begin, end){
        this._stream = stream;
        this._reader = null;
        this._loaded = 0;
        const source = stream.source;
        this._withCredentials = source.withCredentials || false;
        this._readCapability = Promise.withResolvers();
        this._isStreamingSupported = !source.disableStream;
        this._abortController = new AbortController();
        const headers = new Headers(stream.headers);
        headers.append("Range", "bytes=".concat(begin, "-").concat(end - 1));
        const url = source.url;
        fetch(url, createFetchOptions(headers, this._withCredentials, this._abortController)).then((response)=>{
            const responseOrigin = getResponseOrigin(response.url);
            if (responseOrigin !== stream._responseOrigin) {
                throw new Error('Expected range response-origin "'.concat(responseOrigin, '" to match "').concat(stream._responseOrigin, '".'));
            }
            if (!validateResponseStatus(response.status)) {
                throw createResponseError(response.status, url);
            }
            this._readCapability.resolve();
            this._reader = response.body.getReader();
        }).catch(this._readCapability.reject);
        this.onProgress = null;
    }
}
; // ./src/display/network.js
const OK_RESPONSE = 200;
const PARTIAL_CONTENT_RESPONSE = 206;
function network_getArrayBuffer(xhr) {
    const data = xhr.response;
    if (typeof data !== "string") {
        return data;
    }
    return stringToBytes(data).buffer;
}
class NetworkManager {
    request(args) {
        const xhr = new XMLHttpRequest();
        const xhrId = this.currXhrId++;
        const pendingRequest = this.pendingRequests[xhrId] = {
            xhr
        };
        xhr.open("GET", this.url);
        xhr.withCredentials = this.withCredentials;
        for (const [key, val] of this.headers){
            xhr.setRequestHeader(key, val);
        }
        if (this.isHttp && "begin" in args && "end" in args) {
            xhr.setRequestHeader("Range", "bytes=".concat(args.begin, "-").concat(args.end - 1));
            pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;
        } else {
            pendingRequest.expectedStatus = OK_RESPONSE;
        }
        xhr.responseType = "arraybuffer";
        assert(args.onError, "Expected `onError` callback to be provided.");
        xhr.onerror = ()=>{
            args.onError(xhr.status);
        };
        xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);
        xhr.onprogress = this.onProgress.bind(this, xhrId);
        pendingRequest.onHeadersReceived = args.onHeadersReceived;
        pendingRequest.onDone = args.onDone;
        pendingRequest.onError = args.onError;
        pendingRequest.onProgress = args.onProgress;
        xhr.send(null);
        return xhrId;
    }
    onProgress(xhrId, evt) {
        var _pendingRequest_onProgress;
        const pendingRequest = this.pendingRequests[xhrId];
        if (!pendingRequest) {
            return;
        }
        (_pendingRequest_onProgress = pendingRequest.onProgress) === null || _pendingRequest_onProgress === void 0 ? void 0 : _pendingRequest_onProgress.call(pendingRequest, evt);
    }
    onStateChange(xhrId, evt) {
        const pendingRequest = this.pendingRequests[xhrId];
        if (!pendingRequest) {
            return;
        }
        const xhr = pendingRequest.xhr;
        if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {
            pendingRequest.onHeadersReceived();
            delete pendingRequest.onHeadersReceived;
        }
        if (xhr.readyState !== 4) {
            return;
        }
        if (!(xhrId in this.pendingRequests)) {
            return;
        }
        delete this.pendingRequests[xhrId];
        if (xhr.status === 0 && this.isHttp) {
            pendingRequest.onError(xhr.status);
            return;
        }
        const xhrStatus = xhr.status || OK_RESPONSE;
        const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;
        if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {
            pendingRequest.onError(xhr.status);
            return;
        }
        const chunk = network_getArrayBuffer(xhr);
        if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {
            const rangeHeader = xhr.getResponseHeader("Content-Range");
            const matches = /bytes (\d+)-(\d+)\/(\d+)/.exec(rangeHeader);
            if (matches) {
                pendingRequest.onDone({
                    begin: parseInt(matches[1], 10),
                    chunk
                });
            } else {
                warn('Missing or invalid "Content-Range" header.');
                pendingRequest.onError(0);
            }
        } else if (chunk) {
            pendingRequest.onDone({
                begin: 0,
                chunk
            });
        } else {
            pendingRequest.onError(xhr.status);
        }
    }
    getRequestXhr(xhrId) {
        return this.pendingRequests[xhrId].xhr;
    }
    isPendingRequest(xhrId) {
        return xhrId in this.pendingRequests;
    }
    abortRequest(xhrId) {
        const xhr = this.pendingRequests[xhrId].xhr;
        delete this.pendingRequests[xhrId];
        xhr.abort();
    }
    constructor({ url, httpHeaders, withCredentials }){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "_responseOrigin", null);
        this.url = url;
        this.isHttp = /^https?:/i.test(url);
        this.headers = createHeaders(this.isHttp, httpHeaders);
        this.withCredentials = withCredentials || false;
        this.currXhrId = 0;
        this.pendingRequests = Object.create(null);
    }
}
class PDFNetworkStream {
    _onRangeRequestReaderClosed(reader) {
        const i = this._rangeRequestReaders.indexOf(reader);
        if (i >= 0) {
            this._rangeRequestReaders.splice(i, 1);
        }
    }
    getFullReader() {
        assert(!this._fullRequestReader, "PDFNetworkStream.getFullReader can only be called once.");
        this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);
        return this._fullRequestReader;
    }
    getRangeReader(begin, end) {
        const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);
        reader.onClosed = this._onRangeRequestReaderClosed.bind(this);
        this._rangeRequestReaders.push(reader);
        return reader;
    }
    cancelAllRequests(reason) {
        var _this__fullRequestReader;
        (_this__fullRequestReader = this._fullRequestReader) === null || _this__fullRequestReader === void 0 ? void 0 : _this__fullRequestReader.cancel(reason);
        for (const reader of this._rangeRequestReaders.slice(0)){
            reader.cancel(reason);
        }
    }
    constructor(source){
        this._source = source;
        this._manager = new NetworkManager(source);
        this._rangeChunkSize = source.rangeChunkSize;
        this._fullRequestReader = null;
        this._rangeRequestReaders = [];
    }
}
class PDFNetworkStreamFullRequestReader {
    _onHeadersReceived() {
        const fullRequestXhrId = this._fullRequestId;
        const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);
        this._manager._responseOrigin = getResponseOrigin(fullRequestXhr.responseURL);
        const rawResponseHeaders = fullRequestXhr.getAllResponseHeaders();
        const responseHeaders = new Headers(rawResponseHeaders ? rawResponseHeaders.trimStart().replace(/[^\S ]+$/, "").split(/[\r\n]+/).map((x)=>{
            const [key, ...val] = x.split(": ");
            return [
                key,
                val.join(": ")
            ];
        }) : []);
        const { allowRangeRequests, suggestedLength } = validateRangeRequestCapabilities({
            responseHeaders,
            isHttp: this._manager.isHttp,
            rangeChunkSize: this._rangeChunkSize,
            disableRange: this._disableRange
        });
        if (allowRangeRequests) {
            this._isRangeSupported = true;
        }
        this._contentLength = suggestedLength || this._contentLength;
        this._filename = extractFilenameFromHeader(responseHeaders);
        if (this._isRangeSupported) {
            this._manager.abortRequest(fullRequestXhrId);
        }
        this._headersCapability.resolve();
    }
    _onDone(data) {
        if (data) {
            if (this._requests.length > 0) {
                const requestCapability = this._requests.shift();
                requestCapability.resolve({
                    value: data.chunk,
                    done: false
                });
            } else {
                this._cachedChunks.push(data.chunk);
            }
        }
        this._done = true;
        if (this._cachedChunks.length > 0) {
            return;
        }
        for (const requestCapability of this._requests){
            requestCapability.resolve({
                value: undefined,
                done: true
            });
        }
        this._requests.length = 0;
    }
    _onError(status) {
        this._storedError = createResponseError(status, this._url);
        this._headersCapability.reject(this._storedError);
        for (const requestCapability of this._requests){
            requestCapability.reject(this._storedError);
        }
        this._requests.length = 0;
        this._cachedChunks.length = 0;
    }
    _onProgress(evt) {
        var _this_onProgress, _this;
        (_this_onProgress = (_this = this).onProgress) === null || _this_onProgress === void 0 ? void 0 : _this_onProgress.call(_this, {
            loaded: evt.loaded,
            total: evt.lengthComputable ? evt.total : this._contentLength
        });
    }
    get filename() {
        return this._filename;
    }
    get isRangeSupported() {
        return this._isRangeSupported;
    }
    get isStreamingSupported() {
        return this._isStreamingSupported;
    }
    get contentLength() {
        return this._contentLength;
    }
    get headersReady() {
        return this._headersCapability.promise;
    }
    async read() {
        await this._headersCapability.promise;
        if (this._storedError) {
            throw this._storedError;
        }
        if (this._cachedChunks.length > 0) {
            const chunk = this._cachedChunks.shift();
            return {
                value: chunk,
                done: false
            };
        }
        if (this._done) {
            return {
                value: undefined,
                done: true
            };
        }
        const requestCapability = Promise.withResolvers();
        this._requests.push(requestCapability);
        return requestCapability.promise;
    }
    cancel(reason) {
        this._done = true;
        this._headersCapability.reject(reason);
        for (const requestCapability of this._requests){
            requestCapability.resolve({
                value: undefined,
                done: true
            });
        }
        this._requests.length = 0;
        if (this._manager.isPendingRequest(this._fullRequestId)) {
            this._manager.abortRequest(this._fullRequestId);
        }
        this._fullRequestReader = null;
    }
    constructor(manager, source){
        this._manager = manager;
        this._url = source.url;
        this._fullRequestId = manager.request({
            onHeadersReceived: this._onHeadersReceived.bind(this),
            onDone: this._onDone.bind(this),
            onError: this._onError.bind(this),
            onProgress: this._onProgress.bind(this)
        });
        this._headersCapability = Promise.withResolvers();
        this._disableRange = source.disableRange || false;
        this._contentLength = source.length;
        this._rangeChunkSize = source.rangeChunkSize;
        if (!this._rangeChunkSize && !this._disableRange) {
            this._disableRange = true;
        }
        this._isStreamingSupported = false;
        this._isRangeSupported = false;
        this._cachedChunks = [];
        this._requests = [];
        this._done = false;
        this._storedError = undefined;
        this._filename = null;
        this.onProgress = null;
    }
}
class PDFNetworkStreamRangeRequestReader {
    _onHeadersReceived() {
        var _this__manager_getRequestXhr;
        const responseOrigin = getResponseOrigin((_this__manager_getRequestXhr = this._manager.getRequestXhr(this._requestId)) === null || _this__manager_getRequestXhr === void 0 ? void 0 : _this__manager_getRequestXhr.responseURL);
        if (responseOrigin !== this._manager._responseOrigin) {
            this._storedError = new Error('Expected range response-origin "'.concat(responseOrigin, '" to match "').concat(this._manager._responseOrigin, '".'));
            this._onError(0);
        }
    }
    _close() {
        var _this_onClosed, _this;
        (_this_onClosed = (_this = this).onClosed) === null || _this_onClosed === void 0 ? void 0 : _this_onClosed.call(_this, this);
    }
    _onDone(data) {
        const chunk = data.chunk;
        if (this._requests.length > 0) {
            const requestCapability = this._requests.shift();
            requestCapability.resolve({
                value: chunk,
                done: false
            });
        } else {
            this._queuedChunk = chunk;
        }
        this._done = true;
        for (const requestCapability of this._requests){
            requestCapability.resolve({
                value: undefined,
                done: true
            });
        }
        this._requests.length = 0;
        this._close();
    }
    _onError(status) {
        var _this__storedError;
        (_this__storedError = this._storedError) !== null && _this__storedError !== void 0 ? _this__storedError : this._storedError = createResponseError(status, this._url);
        for (const requestCapability of this._requests){
            requestCapability.reject(this._storedError);
        }
        this._requests.length = 0;
        this._queuedChunk = null;
    }
    _onProgress(evt) {
        if (!this.isStreamingSupported) {
            var _this_onProgress, _this;
            (_this_onProgress = (_this = this).onProgress) === null || _this_onProgress === void 0 ? void 0 : _this_onProgress.call(_this, {
                loaded: evt.loaded
            });
        }
    }
    get isStreamingSupported() {
        return false;
    }
    async read() {
        if (this._storedError) {
            throw this._storedError;
        }
        if (this._queuedChunk !== null) {
            const chunk = this._queuedChunk;
            this._queuedChunk = null;
            return {
                value: chunk,
                done: false
            };
        }
        if (this._done) {
            return {
                value: undefined,
                done: true
            };
        }
        const requestCapability = Promise.withResolvers();
        this._requests.push(requestCapability);
        return requestCapability.promise;
    }
    cancel(reason) {
        this._done = true;
        for (const requestCapability of this._requests){
            requestCapability.resolve({
                value: undefined,
                done: true
            });
        }
        this._requests.length = 0;
        if (this._manager.isPendingRequest(this._requestId)) {
            this._manager.abortRequest(this._requestId);
        }
        this._close();
    }
    constructor(manager, begin, end){
        this._manager = manager;
        this._url = manager.url;
        this._requestId = manager.request({
            begin,
            end,
            onHeadersReceived: this._onHeadersReceived.bind(this),
            onDone: this._onDone.bind(this),
            onError: this._onError.bind(this),
            onProgress: this._onProgress.bind(this)
        });
        this._requests = [];
        this._queuedChunk = null;
        this._done = false;
        this._storedError = undefined;
        this.onProgress = null;
        this.onClosed = null;
    }
}
; // ./src/display/node_stream.js
const urlRegex = /^[a-z][a-z0-9\-+.]+:/i;
function parseUrlOrPath(sourceUrl) {
    if (urlRegex.test(sourceUrl)) {
        return new URL(sourceUrl);
    }
    const url = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].getBuiltinModule("url");
    return new URL(url.pathToFileURL(sourceUrl));
}
class PDFNodeStream {
    get _progressiveDataLength() {
        var _this__fullRequestReader;
        var _this__fullRequestReader__loaded;
        return (_this__fullRequestReader__loaded = (_this__fullRequestReader = this._fullRequestReader) === null || _this__fullRequestReader === void 0 ? void 0 : _this__fullRequestReader._loaded) !== null && _this__fullRequestReader__loaded !== void 0 ? _this__fullRequestReader__loaded : 0;
    }
    getFullReader() {
        assert(!this._fullRequestReader, "PDFNodeStream.getFullReader can only be called once.");
        this._fullRequestReader = new PDFNodeStreamFsFullReader(this);
        return this._fullRequestReader;
    }
    getRangeReader(start, end) {
        if (end <= this._progressiveDataLength) {
            return null;
        }
        const rangeReader = new PDFNodeStreamFsRangeReader(this, start, end);
        this._rangeRequestReaders.push(rangeReader);
        return rangeReader;
    }
    cancelAllRequests(reason) {
        var _this__fullRequestReader;
        (_this__fullRequestReader = this._fullRequestReader) === null || _this__fullRequestReader === void 0 ? void 0 : _this__fullRequestReader.cancel(reason);
        for (const reader of this._rangeRequestReaders.slice(0)){
            reader.cancel(reason);
        }
    }
    constructor(source){
        this.source = source;
        this.url = parseUrlOrPath(source.url);
        assert(this.url.protocol === "file:", "PDFNodeStream only supports file:// URLs.");
        this._fullRequestReader = null;
        this._rangeRequestReaders = [];
    }
}
class PDFNodeStreamFsFullReader {
    get headersReady() {
        return this._headersCapability.promise;
    }
    get filename() {
        return this._filename;
    }
    get contentLength() {
        return this._contentLength;
    }
    get isRangeSupported() {
        return this._isRangeSupported;
    }
    get isStreamingSupported() {
        return this._isStreamingSupported;
    }
    async read() {
        var _this_onProgress, _this;
        await this._readCapability.promise;
        if (this._done) {
            return {
                value: undefined,
                done: true
            };
        }
        if (this._storedError) {
            throw this._storedError;
        }
        const chunk = this._readableStream.read();
        if (chunk === null) {
            this._readCapability = Promise.withResolvers();
            return this.read();
        }
        this._loaded += chunk.length;
        (_this_onProgress = (_this = this).onProgress) === null || _this_onProgress === void 0 ? void 0 : _this_onProgress.call(_this, {
            loaded: this._loaded,
            total: this._contentLength
        });
        const buffer = new Uint8Array(chunk).buffer;
        return {
            value: buffer,
            done: false
        };
    }
    cancel(reason) {
        if (!this._readableStream) {
            this._error(reason);
            return;
        }
        this._readableStream.destroy(reason);
    }
    _error(reason) {
        this._storedError = reason;
        this._readCapability.resolve();
    }
    _setReadableStream(readableStream) {
        this._readableStream = readableStream;
        readableStream.on("readable", ()=>{
            this._readCapability.resolve();
        });
        readableStream.on("end", ()=>{
            readableStream.destroy();
            this._done = true;
            this._readCapability.resolve();
        });
        readableStream.on("error", (reason)=>{
            this._error(reason);
        });
        if (!this._isStreamingSupported && this._isRangeSupported) {
            this._error(new AbortException("streaming is disabled"));
        }
        if (this._storedError) {
            this._readableStream.destroy(this._storedError);
        }
    }
    constructor(stream){
        this._url = stream.url;
        this._done = false;
        this._storedError = null;
        this.onProgress = null;
        const source = stream.source;
        this._contentLength = source.length;
        this._loaded = 0;
        this._filename = null;
        this._disableRange = source.disableRange || false;
        this._rangeChunkSize = source.rangeChunkSize;
        if (!this._rangeChunkSize && !this._disableRange) {
            this._disableRange = true;
        }
        this._isStreamingSupported = !source.disableStream;
        this._isRangeSupported = !source.disableRange;
        this._readableStream = null;
        this._readCapability = Promise.withResolvers();
        this._headersCapability = Promise.withResolvers();
        const fs = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].getBuiltinModule("fs");
        fs.promises.lstat(this._url).then((stat)=>{
            this._contentLength = stat.size;
            this._setReadableStream(fs.createReadStream(this._url));
            this._headersCapability.resolve();
        }, (error)=>{
            if (error.code === "ENOENT") {
                error = createResponseError(0, this._url.href);
            }
            this._storedError = error;
            this._headersCapability.reject(error);
        });
    }
}
class PDFNodeStreamFsRangeReader {
    get isStreamingSupported() {
        return this._isStreamingSupported;
    }
    async read() {
        var _this_onProgress, _this;
        await this._readCapability.promise;
        if (this._done) {
            return {
                value: undefined,
                done: true
            };
        }
        if (this._storedError) {
            throw this._storedError;
        }
        const chunk = this._readableStream.read();
        if (chunk === null) {
            this._readCapability = Promise.withResolvers();
            return this.read();
        }
        this._loaded += chunk.length;
        (_this_onProgress = (_this = this).onProgress) === null || _this_onProgress === void 0 ? void 0 : _this_onProgress.call(_this, {
            loaded: this._loaded
        });
        const buffer = new Uint8Array(chunk).buffer;
        return {
            value: buffer,
            done: false
        };
    }
    cancel(reason) {
        if (!this._readableStream) {
            this._error(reason);
            return;
        }
        this._readableStream.destroy(reason);
    }
    _error(reason) {
        this._storedError = reason;
        this._readCapability.resolve();
    }
    _setReadableStream(readableStream) {
        this._readableStream = readableStream;
        readableStream.on("readable", ()=>{
            this._readCapability.resolve();
        });
        readableStream.on("end", ()=>{
            readableStream.destroy();
            this._done = true;
            this._readCapability.resolve();
        });
        readableStream.on("error", (reason)=>{
            this._error(reason);
        });
        if (this._storedError) {
            this._readableStream.destroy(this._storedError);
        }
    }
    constructor(stream, start, end){
        this._url = stream.url;
        this._done = false;
        this._storedError = null;
        this.onProgress = null;
        this._loaded = 0;
        this._readableStream = null;
        this._readCapability = Promise.withResolvers();
        const source = stream.source;
        this._isStreamingSupported = !source.disableStream;
        const fs = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].getBuiltinModule("fs");
        this._setReadableStream(fs.createReadStream(this._url, {
            start,
            end: end - 1
        }));
    }
}
; // ./src/display/pdf_objects.js
const INITIAL_DATA = Symbol("INITIAL_DATA");
var _objs = /*#__PURE__*/ new WeakMap(), _ensureObj = /*#__PURE__*/ new WeakSet();
class PDFObjects {
    get(objId) {
        let callback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
        if (callback) {
            const obj = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _ensureObj, ensureObj).call(this, objId);
            obj.promise.then(()=>callback(obj.data));
            return null;
        }
        const obj = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _objs)[objId];
        if (!obj || obj.data === INITIAL_DATA) {
            throw new Error("Requesting object that isn't resolved yet ".concat(objId, "."));
        }
        return obj.data;
    }
    has(objId) {
        const obj = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _objs)[objId];
        return !!obj && obj.data !== INITIAL_DATA;
    }
    delete(objId) {
        const obj = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _objs)[objId];
        if (!obj || obj.data === INITIAL_DATA) {
            return false;
        }
        delete (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _objs)[objId];
        return true;
    }
    resolve(objId) {
        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
        const obj = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _ensureObj, ensureObj).call(this, objId);
        obj.data = data;
        obj.resolve();
    }
    clear() {
        for(const objId in (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _objs)){
            var _data_bitmap;
            const { data } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _objs)[objId];
            data === null || data === void 0 ? void 0 : (_data_bitmap = data.bitmap) === null || _data_bitmap === void 0 ? void 0 : _data_bitmap.close();
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _objs, Object.create(null));
    }
    *[Symbol.iterator]() {
        for(const objId in (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _objs)){
            const { data } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _objs)[objId];
            if (data === INITIAL_DATA) {
                continue;
            }
            yield [
                objId,
                data
            ];
        }
    }
    constructor(){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _ensureObj);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _objs, {
            writable: true,
            value: Object.create(null)
        });
    }
}
function ensureObj(objId) {
    var _class_private_field_get, _objId;
    return (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _objs))[_objId = objId] || (_class_private_field_get[_objId] = {
        ...Promise.withResolvers(),
        data: INITIAL_DATA
    });
}
; // ./src/display/text_layer.js
const MAX_TEXT_DIVS_TO_RENDER = 100000;
const DEFAULT_FONT_SIZE = 30;
var _capability = /*#__PURE__*/ new WeakMap(), _container2 = /*#__PURE__*/ new WeakMap(), _disableProcessItems = /*#__PURE__*/ new WeakMap(), _fontInspectorEnabled = /*#__PURE__*/ new WeakMap(), _lang = /*#__PURE__*/ new WeakMap(), _layoutTextParams = /*#__PURE__*/ new WeakMap(), _pageHeight = /*#__PURE__*/ new WeakMap(), _pageWidth = /*#__PURE__*/ new WeakMap(), _reader = /*#__PURE__*/ new WeakMap(), _rootContainer = /*#__PURE__*/ new WeakMap(), _rotation = /*#__PURE__*/ new WeakMap(), _scale = /*#__PURE__*/ new WeakMap(), _styleCache = /*#__PURE__*/ new WeakMap(), _textContentItemsStr = /*#__PURE__*/ new WeakMap(), _textContentSource = /*#__PURE__*/ new WeakMap(), _textDivs = /*#__PURE__*/ new WeakMap(), _textDivProperties = /*#__PURE__*/ new WeakMap(), _transform = /*#__PURE__*/ new WeakMap(), _processItems = /*#__PURE__*/ new WeakSet(), _appendText = /*#__PURE__*/ new WeakSet(), _layout = /*#__PURE__*/ new WeakSet();
class TextLayer {
    static get fontFamilyMap() {
        const { isWindows, isFirefox } = util_FeatureTest.platform;
        return shadow(this, "fontFamilyMap", new Map([
            [
                "sans-serif",
                "".concat(isWindows && isFirefox ? "Calibri, " : "", "sans-serif")
            ],
            [
                "monospace",
                "".concat(isWindows && isFirefox ? "Lucida Console, " : "", "monospace")
            ]
        ]));
    }
    render() {
        const pump = ()=>{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _reader).read().then((param)=>{
                let { value, done } = param;
                if (done) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability).resolve();
                    return;
                }
                var _class_private_field_get;
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lang, (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lang)) !== null && _class_private_field_get !== void 0 ? _class_private_field_get : value.lang);
                Object.assign((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _styleCache), value.styles);
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _processItems, processItems).call(this, value.items);
                pump();
            }, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability).reject);
        };
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _reader, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textContentSource).getReader());
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(TextLayer, TextLayer, _pendingTextLayers).add(this);
        pump();
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability).promise;
    }
    update(param) {
        let { viewport, onBefore = null } = param;
        const scale = viewport.scale * OutputScale.pixelRatio;
        const rotation = viewport.rotation;
        if (rotation !== (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotation)) {
            onBefore === null || onBefore === void 0 ? void 0 : onBefore();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotation, rotation);
            setLayerDimensions((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rootContainer), {
                rotation
            });
        }
        if (scale !== (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scale)) {
            onBefore === null || onBefore === void 0 ? void 0 : onBefore();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scale, scale);
            const params = {
                div: null,
                properties: null,
                ctx: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(TextLayer, TextLayer, getCtx).call(TextLayer, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lang))
            };
            for (const div of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textDivs)){
                params.properties = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textDivProperties).get(div);
                params.div = div;
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _layout, layout).call(this, params);
            }
        }
    }
    cancel() {
        var _class_private_field_get;
        const abortEx = new AbortException("TextLayer task cancelled.");
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _reader)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.cancel(abortEx).catch(()=>{});
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _reader, null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability).reject(abortEx);
    }
    get textDivs() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textDivs);
    }
    get textContentItemsStr() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textContentItemsStr);
    }
    static cleanup() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, TextLayer, _pendingTextLayers).size > 0) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, TextLayer, _ascentCache).clear();
        for (const { canvas } of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, TextLayer, _canvasContexts).values()){
            canvas.remove();
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, TextLayer, _canvasContexts).clear();
    }
    constructor({ textContentSource, container, viewport }){
        var _globalThis_FontInspector;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _processItems);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _appendText);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _layout);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability, {
            writable: true,
            value: Promise.withResolvers()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container2, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _disableProcessItems, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontInspectorEnabled, {
            writable: true,
            value: !!((_globalThis_FontInspector = globalThis.FontInspector) === null || _globalThis_FontInspector === void 0 ? void 0 : _globalThis_FontInspector.enabled)
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lang, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _layoutTextParams, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageHeight, {
            writable: true,
            value: 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageWidth, {
            writable: true,
            value: 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _reader, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rootContainer, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotation, {
            writable: true,
            value: 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scale, {
            writable: true,
            value: 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _styleCache, {
            writable: true,
            value: Object.create(null)
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textContentItemsStr, {
            writable: true,
            value: []
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textContentSource, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textDivs, {
            writable: true,
            value: []
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textDivProperties, {
            writable: true,
            value: new WeakMap()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _transform, {
            writable: true,
            value: null
        });
        if (textContentSource instanceof ReadableStream) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textContentSource, textContentSource);
        } else if (typeof textContentSource === "object") {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textContentSource, new ReadableStream({
                start (controller) {
                    controller.enqueue(textContentSource);
                    controller.close();
                }
            }));
        } else {
            throw new Error('No "textContentSource" parameter specified.');
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container2, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rootContainer, container));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scale, viewport.scale * OutputScale.pixelRatio);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotation, viewport.rotation);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _layoutTextParams, {
            div: null,
            properties: null,
            ctx: null
        });
        const { pageWidth, pageHeight, pageX, pageY } = viewport.rawDims;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _transform, [
            1,
            0,
            0,
            -1,
            -pageX,
            pageY + pageHeight
        ]);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageWidth, pageWidth);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageHeight, pageHeight);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(TextLayer, TextLayer, ensureMinFontSizeComputed).call(TextLayer);
        setLayerDimensions(container, viewport);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability).promise.finally(()=>{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(TextLayer, TextLayer, _pendingTextLayers).delete(this);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _layoutTextParams, null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _styleCache, null);
        }).catch(()=>{});
    }
}
var _ascentCache = {
    writable: true,
    value: new Map()
};
var _canvasContexts = {
    writable: true,
    value: new Map()
};
var _canvasCtxFonts = {
    writable: true,
    value: new WeakMap()
};
var _minFontSize = {
    writable: true,
    value: null
};
var _pendingTextLayers = {
    writable: true,
    value: new Set()
};
function processItems(items) {
    var _class_private_field_get;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _disableProcessItems)) {
        return;
    }
    var _ctx;
    (_ctx = (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _layoutTextParams)).ctx) !== null && _ctx !== void 0 ? _ctx : _class_private_field_get.ctx = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(TextLayer, TextLayer, getCtx).call(TextLayer, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lang));
    const textDivs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textDivs), textContentItemsStr = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textContentItemsStr);
    for (const item of items){
        if (textDivs.length > MAX_TEXT_DIVS_TO_RENDER) {
            warn("Ignoring additional textDivs for performance reasons.");
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _disableProcessItems, true);
            return;
        }
        if (item.str === undefined) {
            if (item.type === "beginMarkedContentProps" || item.type === "beginMarkedContent") {
                const parent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container2);
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container2, document.createElement("span"));
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container2).classList.add("markedContent");
                if (item.id !== null) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container2).setAttribute("id", "".concat(item.id));
                }
                parent.append((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container2));
            } else if (item.type === "endMarkedContent") {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container2, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container2).parentNode);
            }
            continue;
        }
        textContentItemsStr.push(item.str);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _appendText, appendText).call(this, item);
    }
}
function appendText(geom) {
    const textDiv = document.createElement("span");
    const textDivProperties = {
        angle: 0,
        canvasWidth: 0,
        hasText: geom.str !== "",
        hasEOL: geom.hasEOL,
        fontSize: 0
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textDivs).push(textDiv);
    const tx = Util.transform((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _transform), geom.transform);
    let angle = Math.atan2(tx[1], tx[0]);
    const style = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _styleCache)[geom.fontName];
    if (style.vertical) {
        angle += Math.PI / 2;
    }
    let fontFamily = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontInspectorEnabled) && style.fontSubstitution || style.fontFamily;
    fontFamily = TextLayer.fontFamilyMap.get(fontFamily) || fontFamily;
    const fontHeight = Math.hypot(tx[2], tx[3]);
    const fontAscent = fontHeight * (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(TextLayer, TextLayer, getAscent).call(TextLayer, fontFamily, style, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lang));
    let left, top;
    if (angle === 0) {
        left = tx[4];
        top = tx[5] - fontAscent;
    } else {
        left = tx[4] + fontAscent * Math.sin(angle);
        top = tx[5] - fontAscent * Math.cos(angle);
    }
    const scaleFactorStr = "calc(var(--total-scale-factor) *";
    const divStyle = textDiv.style;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container2) === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rootContainer)) {
        divStyle.left = "".concat((100 * left / (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageWidth)).toFixed(2), "%");
        divStyle.top = "".concat((100 * top / (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageHeight)).toFixed(2), "%");
    } else {
        divStyle.left = "".concat(scaleFactorStr).concat(left.toFixed(2), "px)");
        divStyle.top = "".concat(scaleFactorStr).concat(top.toFixed(2), "px)");
    }
    divStyle.fontSize = "".concat(scaleFactorStr).concat(((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(TextLayer, TextLayer, _minFontSize) * fontHeight).toFixed(2), "px)");
    divStyle.fontFamily = fontFamily;
    textDivProperties.fontSize = fontHeight;
    textDiv.setAttribute("role", "presentation");
    textDiv.textContent = geom.str;
    textDiv.dir = geom.dir;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontInspectorEnabled)) {
        textDiv.dataset.fontName = style.fontSubstitutionLoadedName || geom.fontName;
    }
    if (angle !== 0) {
        textDivProperties.angle = angle * (180 / Math.PI);
    }
    let shouldScaleText = false;
    if (geom.str.length > 1) {
        shouldScaleText = true;
    } else if (geom.str !== " " && geom.transform[0] !== geom.transform[3]) {
        const absScaleX = Math.abs(geom.transform[0]), absScaleY = Math.abs(geom.transform[3]);
        if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {
            shouldScaleText = true;
        }
    }
    if (shouldScaleText) {
        textDivProperties.canvasWidth = style.vertical ? geom.height : geom.width;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textDivProperties).set(textDiv, textDivProperties);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _layoutTextParams).div = textDiv;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _layoutTextParams).properties = textDivProperties;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _layout, layout).call(this, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _layoutTextParams));
    if (textDivProperties.hasText) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container2).append(textDiv);
    }
    if (textDivProperties.hasEOL) {
        const br = document.createElement("br");
        br.setAttribute("role", "presentation");
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container2).append(br);
    }
}
function layout(params) {
    const { div, properties, ctx } = params;
    const { style } = div;
    let transform = "";
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(TextLayer, TextLayer, _minFontSize) > 1) {
        transform = "scale(".concat(1 / (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(TextLayer, TextLayer, _minFontSize), ")");
    }
    if (properties.canvasWidth !== 0 && properties.hasText) {
        const { fontFamily } = style;
        const { canvasWidth, fontSize } = properties;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(TextLayer, TextLayer, ensureCtxFont).call(TextLayer, ctx, fontSize * (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scale), fontFamily);
        const { width } = ctx.measureText(div.textContent);
        if (width > 0) {
            transform = "scaleX(".concat(canvasWidth * (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scale) / width, ") ").concat(transform);
        }
    }
    if (properties.angle !== 0) {
        transform = "rotate(".concat(properties.angle, "deg) ").concat(transform);
    }
    if (transform.length > 0) {
        style.transform = transform;
    }
}
function getCtx() {
    let lang = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
    let ctx = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, TextLayer, _canvasContexts).get(lang || (lang = ""));
    if (!ctx) {
        const canvas = document.createElement("canvas");
        canvas.className = "hiddenCanvasElement";
        canvas.lang = lang;
        document.body.append(canvas);
        ctx = canvas.getContext("2d", {
            alpha: false,
            willReadFrequently: true
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, TextLayer, _canvasContexts).set(lang, ctx);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, TextLayer, _canvasCtxFonts).set(ctx, {
            size: 0,
            family: ""
        });
    }
    return ctx;
}
function ensureCtxFont(ctx, size, family) {
    const cached = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, TextLayer, _canvasCtxFonts).get(ctx);
    if (size === cached.size && family === cached.family) {
        return;
    }
    ctx.font = "".concat(size, "px ").concat(family);
    cached.size = size;
    cached.family = family;
}
function ensureMinFontSizeComputed() {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, TextLayer, _minFontSize) !== null) {
        return;
    }
    const div = document.createElement("div");
    div.style.opacity = 0;
    div.style.lineHeight = 1;
    div.style.fontSize = "1px";
    div.style.position = "absolute";
    div.textContent = "X";
    document.body.append(div);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, TextLayer, _minFontSize, div.getBoundingClientRect().height);
    div.remove();
}
function getAscent(fontFamily, style, lang) {
    const cachedAscent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, TextLayer, _ascentCache).get(fontFamily);
    if (cachedAscent) {
        return cachedAscent;
    }
    const ctx = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, TextLayer, getCtx).call(TextLayer, lang);
    ctx.canvas.width = ctx.canvas.height = DEFAULT_FONT_SIZE;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, TextLayer, ensureCtxFont).call(TextLayer, ctx, DEFAULT_FONT_SIZE, fontFamily);
    const metrics = ctx.measureText("");
    const ascent = metrics.fontBoundingBoxAscent;
    const descent = Math.abs(metrics.fontBoundingBoxDescent);
    ctx.canvas.width = ctx.canvas.height = 0;
    let ratio = 0.8;
    if (ascent) {
        ratio = ascent / (ascent + descent);
    } else {
        if (util_FeatureTest.platform.isFirefox) {
            warn("Enable the `dom.textMetrics.fontBoundingBox.enabled` preference " + "in `about:config` to improve TextLayer rendering.");
        }
        if (style.ascent) {
            ratio = style.ascent;
        } else if (style.descent) {
            ratio = 1 + style.descent;
        }
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, TextLayer, _ascentCache).set(fontFamily, ratio);
    return ratio;
}
; // ./src/display/xfa_text.js
class XfaText {
    static textContent(xfa) {
        const items = [];
        const output = {
            items,
            styles: Object.create(null)
        };
        function walk(node) {
            var _node_attributes;
            if (!node) {
                return;
            }
            let str = null;
            const name = node.name;
            if (name === "#text") {
                str = node.value;
            } else if (!XfaText.shouldBuildText(name)) {
                return;
            } else if (node === null || node === void 0 ? void 0 : (_node_attributes = node.attributes) === null || _node_attributes === void 0 ? void 0 : _node_attributes.textContent) {
                str = node.attributes.textContent;
            } else if (node.value) {
                str = node.value;
            }
            if (str !== null) {
                items.push({
                    str
                });
            }
            if (!node.children) {
                return;
            }
            for (const child of node.children){
                walk(child);
            }
        }
        walk(xfa);
        return output;
    }
    static shouldBuildText(name) {
        return !(name === "textarea" || name === "input" || name === "option" || name === "select");
    }
}
; // ./src/display/api.js
const RENDERING_CANCELLED_TIMEOUT = 100;
function getDocument() {
    let src = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (typeof src === "string" || src instanceof URL) {
        src = {
            url: src
        };
    } else if (src instanceof ArrayBuffer || ArrayBuffer.isView(src)) {
        src = {
            data: src
        };
    }
    const task = new PDFDocumentLoadingTask();
    const { docId } = task;
    const url = src.url ? getUrlProp(src.url) : null;
    const data = src.data ? getDataProp(src.data) : null;
    const httpHeaders = src.httpHeaders || null;
    const withCredentials = src.withCredentials === true;
    var _src_password;
    const password = (_src_password = src.password) !== null && _src_password !== void 0 ? _src_password : null;
    const rangeTransport = src.range instanceof PDFDataRangeTransport ? src.range : null;
    const rangeChunkSize = Number.isInteger(src.rangeChunkSize) && src.rangeChunkSize > 0 ? src.rangeChunkSize : 2 ** 16;
    let worker = src.worker instanceof PDFWorker ? src.worker : null;
    const verbosity = src.verbosity;
    const docBaseUrl = typeof src.docBaseUrl === "string" && !isDataScheme(src.docBaseUrl) ? src.docBaseUrl : null;
    const cMapUrl = getFactoryUrlProp(src.cMapUrl);
    const cMapPacked = src.cMapPacked !== false;
    const CMapReaderFactory = src.CMapReaderFactory || (isNodeJS ? NodeCMapReaderFactory : DOMCMapReaderFactory);
    const iccUrl = getFactoryUrlProp(src.iccUrl);
    const standardFontDataUrl = getFactoryUrlProp(src.standardFontDataUrl);
    const StandardFontDataFactory = src.StandardFontDataFactory || (isNodeJS ? NodeStandardFontDataFactory : DOMStandardFontDataFactory);
    const wasmUrl = getFactoryUrlProp(src.wasmUrl);
    const WasmFactory = src.WasmFactory || (isNodeJS ? NodeWasmFactory : DOMWasmFactory);
    const ignoreErrors = src.stopAtErrors !== true;
    const maxImageSize = Number.isInteger(src.maxImageSize) && src.maxImageSize > -1 ? src.maxImageSize : -1;
    const isEvalSupported = src.isEvalSupported !== false;
    const isOffscreenCanvasSupported = typeof src.isOffscreenCanvasSupported === "boolean" ? src.isOffscreenCanvasSupported : !isNodeJS;
    const isImageDecoderSupported = typeof src.isImageDecoderSupported === "boolean" ? src.isImageDecoderSupported : !isNodeJS && (util_FeatureTest.platform.isFirefox || !globalThis.chrome);
    const canvasMaxAreaInBytes = Number.isInteger(src.canvasMaxAreaInBytes) ? src.canvasMaxAreaInBytes : -1;
    const disableFontFace = typeof src.disableFontFace === "boolean" ? src.disableFontFace : isNodeJS;
    const fontExtraProperties = src.fontExtraProperties === true;
    const enableXfa = src.enableXfa === true;
    const ownerDocument = src.ownerDocument || globalThis.document;
    const disableRange = src.disableRange === true;
    const disableStream = src.disableStream === true;
    const disableAutoFetch = src.disableAutoFetch === true;
    const pdfBug = src.pdfBug === true;
    const CanvasFactory = src.CanvasFactory || (isNodeJS ? NodeCanvasFactory : DOMCanvasFactory);
    const FilterFactory = src.FilterFactory || (isNodeJS ? NodeFilterFactory : DOMFilterFactory);
    const enableHWA = src.enableHWA === true;
    const useWasm = src.useWasm !== false;
    var _src_length;
    const length = rangeTransport ? rangeTransport.length : (_src_length = src.length) !== null && _src_length !== void 0 ? _src_length : NaN;
    const useSystemFonts = typeof src.useSystemFonts === "boolean" ? src.useSystemFonts : !isNodeJS && !disableFontFace;
    const useWorkerFetch = typeof src.useWorkerFetch === "boolean" ? src.useWorkerFetch : !!(CMapReaderFactory === DOMCMapReaderFactory && StandardFontDataFactory === DOMStandardFontDataFactory && WasmFactory === DOMWasmFactory && cMapUrl && standardFontDataUrl && wasmUrl && isValidFetchUrl(cMapUrl, document.baseURI) && isValidFetchUrl(standardFontDataUrl, document.baseURI) && isValidFetchUrl(wasmUrl, document.baseURI));
    const styleElement = null;
    setVerbosityLevel(verbosity);
    const transportFactory = {
        canvasFactory: new CanvasFactory({
            ownerDocument,
            enableHWA
        }),
        filterFactory: new FilterFactory({
            docId,
            ownerDocument
        }),
        cMapReaderFactory: useWorkerFetch ? null : new CMapReaderFactory({
            baseUrl: cMapUrl,
            isCompressed: cMapPacked
        }),
        standardFontDataFactory: useWorkerFetch ? null : new StandardFontDataFactory({
            baseUrl: standardFontDataUrl
        }),
        wasmFactory: useWorkerFetch ? null : new WasmFactory({
            baseUrl: wasmUrl
        })
    };
    if (!worker) {
        worker = PDFWorker.create({
            verbosity,
            port: GlobalWorkerOptions.workerPort
        });
        task._worker = worker;
    }
    const docParams = {
        docId,
        apiVersion: "5.3.31",
        data,
        password,
        disableAutoFetch,
        rangeChunkSize,
        length,
        docBaseUrl,
        enableXfa,
        evaluatorOptions: {
            maxImageSize,
            disableFontFace,
            ignoreErrors,
            isEvalSupported,
            isOffscreenCanvasSupported,
            isImageDecoderSupported,
            canvasMaxAreaInBytes,
            fontExtraProperties,
            useSystemFonts,
            useWasm,
            useWorkerFetch,
            cMapUrl,
            iccUrl,
            standardFontDataUrl,
            wasmUrl
        }
    };
    const transportParams = {
        ownerDocument,
        pdfBug,
        styleElement,
        loadingParams: {
            disableAutoFetch,
            enableXfa
        }
    };
    worker.promise.then(function() {
        if (task.destroyed) {
            throw new Error("Loading aborted");
        }
        if (worker.destroyed) {
            throw new Error("Worker was destroyed");
        }
        const workerIdPromise = worker.messageHandler.sendWithPromise("GetDocRequest", docParams, data ? [
            data.buffer
        ] : null);
        let networkStream;
        if (rangeTransport) {
            networkStream = new PDFDataTransportStream(rangeTransport, {
                disableRange,
                disableStream
            });
        } else if (!data) {
            if (!url) {
                throw new Error("getDocument - no `url` parameter provided.");
            }
            const NetworkStream = isValidFetchUrl(url) ? PDFFetchStream : isNodeJS ? PDFNodeStream : PDFNetworkStream;
            networkStream = new NetworkStream({
                url,
                length,
                httpHeaders,
                withCredentials,
                rangeChunkSize,
                disableRange,
                disableStream
            });
        }
        return workerIdPromise.then((workerId)=>{
            if (task.destroyed) {
                throw new Error("Loading aborted");
            }
            if (worker.destroyed) {
                throw new Error("Worker was destroyed");
            }
            const messageHandler = new MessageHandler(docId, workerId, worker.port);
            const transport = new WorkerTransport(messageHandler, task, networkStream, transportParams, transportFactory);
            task._transport = transport;
            messageHandler.send("Ready", null);
        });
    }).catch(task._capability.reject);
    return task;
}
class PDFDocumentLoadingTask {
    get promise() {
        return this._capability.promise;
    }
    async destroy() {
        var _this__worker;
        this.destroyed = true;
        try {
            var _this__worker1, _this__transport;
            if ((_this__worker1 = this._worker) === null || _this__worker1 === void 0 ? void 0 : _this__worker1.port) {
                this._worker._pendingDestroy = true;
            }
            await ((_this__transport = this._transport) === null || _this__transport === void 0 ? void 0 : _this__transport.destroy());
        } catch (ex) {
            var _this__worker2;
            if ((_this__worker2 = this._worker) === null || _this__worker2 === void 0 ? void 0 : _this__worker2.port) {
                delete this._worker._pendingDestroy;
            }
            throw ex;
        }
        this._transport = null;
        (_this__worker = this._worker) === null || _this__worker === void 0 ? void 0 : _this__worker.destroy();
        this._worker = null;
    }
    async getData() {
        return this._transport.getData();
    }
    constructor(){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "_capability", Promise.withResolvers());
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "_transport", null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "_worker", null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "docId", "d".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_update$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(PDFDocumentLoadingTask, PDFDocumentLoadingTask, _docId1).value++));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "destroyed", false);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "onPassword", null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "onProgress", null);
    }
}
var _docId1 = {
    writable: true,
    value: 0
};
var _capability1 = /*#__PURE__*/ new WeakMap(), _progressiveDoneListeners = /*#__PURE__*/ new WeakMap(), _progressiveReadListeners = /*#__PURE__*/ new WeakMap(), _progressListeners = /*#__PURE__*/ new WeakMap(), _rangeListeners = /*#__PURE__*/ new WeakMap();
class PDFDataRangeTransport {
    addRangeListener(listener) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rangeListeners).push(listener);
    }
    addProgressListener(listener) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _progressListeners).push(listener);
    }
    addProgressiveReadListener(listener) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _progressiveReadListeners).push(listener);
    }
    addProgressiveDoneListener(listener) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _progressiveDoneListeners).push(listener);
    }
    onDataRange(begin, chunk) {
        for (const listener of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rangeListeners)){
            listener(begin, chunk);
        }
    }
    onDataProgress(loaded, total) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability1).promise.then(()=>{
            for (const listener of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _progressListeners)){
                listener(loaded, total);
            }
        });
    }
    onDataProgressiveRead(chunk) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability1).promise.then(()=>{
            for (const listener of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _progressiveReadListeners)){
                listener(chunk);
            }
        });
    }
    onDataProgressiveDone() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability1).promise.then(()=>{
            for (const listener of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _progressiveDoneListeners)){
                listener();
            }
        });
    }
    transportReady() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability1).resolve();
    }
    requestDataRange(begin, end) {
        unreachable("Abstract method PDFDataRangeTransport.requestDataRange");
    }
    abort() {}
    constructor(length, initialData, progressiveDone = false, contentDispositionFilename = null){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability1, {
            writable: true,
            value: Promise.withResolvers()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _progressiveDoneListeners, {
            writable: true,
            value: []
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _progressiveReadListeners, {
            writable: true,
            value: []
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _progressListeners, {
            writable: true,
            value: []
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rangeListeners, {
            writable: true,
            value: []
        });
        this.length = length;
        this.initialData = initialData;
        this.progressiveDone = progressiveDone;
        this.contentDispositionFilename = contentDispositionFilename;
    }
}
class PDFDocumentProxy {
    get annotationStorage() {
        return this._transport.annotationStorage;
    }
    get canvasFactory() {
        return this._transport.canvasFactory;
    }
    get filterFactory() {
        return this._transport.filterFactory;
    }
    get numPages() {
        return this._pdfInfo.numPages;
    }
    get fingerprints() {
        return this._pdfInfo.fingerprints;
    }
    get isPureXfa() {
        return shadow(this, "isPureXfa", !!this._transport._htmlForXfa);
    }
    get allXfaHtml() {
        return this._transport._htmlForXfa;
    }
    getPage(pageNumber) {
        return this._transport.getPage(pageNumber);
    }
    getPageIndex(ref) {
        return this._transport.getPageIndex(ref);
    }
    getDestinations() {
        return this._transport.getDestinations();
    }
    getDestination(id) {
        return this._transport.getDestination(id);
    }
    getPageLabels() {
        return this._transport.getPageLabels();
    }
    getPageLayout() {
        return this._transport.getPageLayout();
    }
    getPageMode() {
        return this._transport.getPageMode();
    }
    getViewerPreferences() {
        return this._transport.getViewerPreferences();
    }
    getOpenAction() {
        return this._transport.getOpenAction();
    }
    getAttachments() {
        return this._transport.getAttachments();
    }
    getJSActions() {
        return this._transport.getDocJSActions();
    }
    getOutline() {
        return this._transport.getOutline();
    }
    getOptionalContentConfig() {
        let { intent = "display" } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        const { renderingIntent } = this._transport.getRenderingIntent(intent);
        return this._transport.getOptionalContentConfig(renderingIntent);
    }
    getPermissions() {
        return this._transport.getPermissions();
    }
    getMetadata() {
        return this._transport.getMetadata();
    }
    getMarkInfo() {
        return this._transport.getMarkInfo();
    }
    getData() {
        return this._transport.getData();
    }
    saveDocument() {
        return this._transport.saveDocument();
    }
    getDownloadInfo() {
        return this._transport.downloadInfoCapability.promise;
    }
    cleanup() {
        let keepLoadedFonts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);
    }
    destroy() {
        return this.loadingTask.destroy();
    }
    cachedPageNumber(ref) {
        return this._transport.cachedPageNumber(ref);
    }
    get loadingParams() {
        return this._transport.loadingParams;
    }
    get loadingTask() {
        return this._transport.loadingTask;
    }
    getFieldObjects() {
        return this._transport.getFieldObjects();
    }
    hasJSActions() {
        return this._transport.hasJSActions();
    }
    getCalculationOrderIds() {
        return this._transport.getCalculationOrderIds();
    }
    constructor(pdfInfo, transport){
        this._pdfInfo = pdfInfo;
        this._transport = transport;
    }
}
var _pendingCleanup = /*#__PURE__*/ new WeakMap(), _tryCleanup = /*#__PURE__*/ new WeakSet();
class PDFPageProxy {
    get pageNumber() {
        return this._pageIndex + 1;
    }
    get rotate() {
        return this._pageInfo.rotate;
    }
    get ref() {
        return this._pageInfo.ref;
    }
    get userUnit() {
        return this._pageInfo.userUnit;
    }
    get view() {
        return this._pageInfo.view;
    }
    getViewport() {
        let { scale, rotation = this.rotate, offsetX = 0, offsetY = 0, dontFlip = false } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        return new PageViewport({
            viewBox: this.view,
            userUnit: this.userUnit,
            scale,
            rotation,
            offsetX,
            offsetY,
            dontFlip
        });
    }
    getAnnotations() {
        let { intent = "display" } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        const { renderingIntent } = this._transport.getRenderingIntent(intent);
        return this._transport.getAnnotations(this._pageIndex, renderingIntent);
    }
    getJSActions() {
        return this._transport.getPageJSActions(this._pageIndex);
    }
    get filterFactory() {
        return this._transport.filterFactory;
    }
    get isPureXfa() {
        return shadow(this, "isPureXfa", !!this._transport._htmlForXfa);
    }
    async getXfa() {
        var _this__transport__htmlForXfa;
        return ((_this__transport__htmlForXfa = this._transport._htmlForXfa) === null || _this__transport__htmlForXfa === void 0 ? void 0 : _this__transport__htmlForXfa.children[this._pageIndex]) || null;
    }
    render(param) {
        let { canvasContext, viewport, intent = "display", annotationMode = AnnotationMode.ENABLE, transform = null, background = null, optionalContentConfigPromise = null, annotationCanvasMap = null, pageColors = null, printAnnotationStorage = null, isEditing = false } = param;
        var _this__stats;
        var _intentState;
        (_this__stats = this._stats) === null || _this__stats === void 0 ? void 0 : _this__stats.time("Overall");
        const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage, isEditing);
        const { renderingIntent, cacheKey } = intentArgs;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pendingCleanup, false);
        optionalContentConfigPromise || (optionalContentConfigPromise = this._transport.getOptionalContentConfig(renderingIntent));
        let intentState = this._intentStates.get(cacheKey);
        if (!intentState) {
            intentState = Object.create(null);
            this._intentStates.set(cacheKey, intentState);
        }
        if (intentState.streamReaderCancelTimeout) {
            clearTimeout(intentState.streamReaderCancelTimeout);
            intentState.streamReaderCancelTimeout = null;
        }
        const intentPrint = !!(renderingIntent & RenderingIntentFlag.PRINT);
        if (!intentState.displayReadyCapability) {
            var _this__stats1;
            intentState.displayReadyCapability = Promise.withResolvers();
            intentState.operatorList = {
                fnArray: [],
                argsArray: [],
                lastChunk: false,
                separateAnnots: null
            };
            (_this__stats1 = this._stats) === null || _this__stats1 === void 0 ? void 0 : _this__stats1.time("Page Request");
            this._pumpOperatorList(intentArgs);
        }
        const complete = (error)=>{
            intentState.renderTasks.delete(internalRenderTask);
            if (intentPrint) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pendingCleanup, true);
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _tryCleanup, tryCleanup).call(this);
            if (error) {
                internalRenderTask.capability.reject(error);
                this._abortOperatorList({
                    intentState,
                    reason: error instanceof Error ? error : new Error(error)
                });
            } else {
                internalRenderTask.capability.resolve();
            }
            if (this._stats) {
                var _globalThis_Stats;
                this._stats.timeEnd("Rendering");
                this._stats.timeEnd("Overall");
                if ((_globalThis_Stats = globalThis.Stats) === null || _globalThis_Stats === void 0 ? void 0 : _globalThis_Stats.enabled) {
                    globalThis.Stats.add(this.pageNumber, this._stats);
                }
            }
        };
        const internalRenderTask = new InternalRenderTask({
            callback: complete,
            params: {
                canvasContext,
                viewport,
                transform,
                background
            },
            objs: this.objs,
            commonObjs: this.commonObjs,
            annotationCanvasMap,
            operatorList: intentState.operatorList,
            pageIndex: this._pageIndex,
            canvasFactory: this._transport.canvasFactory,
            filterFactory: this._transport.filterFactory,
            useRequestAnimationFrame: !intentPrint,
            pdfBug: this._pdfBug,
            pageColors
        });
        ((_intentState = intentState).renderTasks || (_intentState.renderTasks = new Set())).add(internalRenderTask);
        const renderTask = internalRenderTask.task;
        Promise.all([
            intentState.displayReadyCapability.promise,
            optionalContentConfigPromise
        ]).then((param)=>{
            let [transparency, optionalContentConfig] = param;
            var _this__stats;
            if (this.destroyed) {
                complete();
                return;
            }
            (_this__stats = this._stats) === null || _this__stats === void 0 ? void 0 : _this__stats.time("Rendering");
            if (!(optionalContentConfig.renderingIntent & renderingIntent)) {
                throw new Error("Must use the same `intent`-argument when calling the `PDFPageProxy.render` " + "and `PDFDocumentProxy.getOptionalContentConfig` methods.");
            }
            internalRenderTask.initializeGraphics({
                transparency,
                optionalContentConfig
            });
            internalRenderTask.operatorListChanged();
        }).catch(complete);
        return renderTask;
    }
    getOperatorList() {
        let { intent = "display", annotationMode = AnnotationMode.ENABLE, printAnnotationStorage = null, isEditing = false } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        function operatorListChanged() {
            if (intentState.operatorList.lastChunk) {
                intentState.opListReadCapability.resolve(intentState.operatorList);
                intentState.renderTasks.delete(opListTask);
            }
        }
        const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage, isEditing, true);
        let intentState = this._intentStates.get(intentArgs.cacheKey);
        if (!intentState) {
            intentState = Object.create(null);
            this._intentStates.set(intentArgs.cacheKey, intentState);
        }
        let opListTask;
        if (!intentState.opListReadCapability) {
            var _this__stats;
            var _intentState;
            opListTask = Object.create(null);
            opListTask.operatorListChanged = operatorListChanged;
            intentState.opListReadCapability = Promise.withResolvers();
            ((_intentState = intentState).renderTasks || (_intentState.renderTasks = new Set())).add(opListTask);
            intentState.operatorList = {
                fnArray: [],
                argsArray: [],
                lastChunk: false,
                separateAnnots: null
            };
            (_this__stats = this._stats) === null || _this__stats === void 0 ? void 0 : _this__stats.time("Page Request");
            this._pumpOperatorList(intentArgs);
        }
        return intentState.opListReadCapability.promise;
    }
    streamTextContent() {
        let { includeMarkedContent = false, disableNormalization = false } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        const TEXT_CONTENT_CHUNK_SIZE = 100;
        return this._transport.messageHandler.sendWithStream("GetTextContent", {
            pageIndex: this._pageIndex,
            includeMarkedContent: includeMarkedContent === true,
            disableNormalization: disableNormalization === true
        }, {
            highWaterMark: TEXT_CONTENT_CHUNK_SIZE,
            size (textContent) {
                return textContent.items.length;
            }
        });
    }
    getTextContent() {
        let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        if (this._transport._htmlForXfa) {
            return this.getXfa().then((xfa)=>XfaText.textContent(xfa));
        }
        const readableStream = this.streamTextContent(params);
        return new Promise(function(resolve, reject) {
            function pump() {
                reader.read().then(function(param) {
                    let { value, done } = param;
                    var _textContent;
                    if (done) {
                        resolve(textContent);
                        return;
                    }
                    var _lang;
                    (_lang = (_textContent = textContent).lang) !== null && _lang !== void 0 ? _lang : _textContent.lang = value.lang;
                    Object.assign(textContent.styles, value.styles);
                    textContent.items.push(...value.items);
                    pump();
                }, reject);
            }
            const reader = readableStream.getReader();
            const textContent = {
                items: [],
                styles: Object.create(null),
                lang: null
            };
            pump();
        });
    }
    getStructTree() {
        return this._transport.getStructTree(this._pageIndex);
    }
    _destroy() {
        this.destroyed = true;
        const waitOn = [];
        for (const intentState of this._intentStates.values()){
            this._abortOperatorList({
                intentState,
                reason: new Error("Page was destroyed."),
                force: true
            });
            if (intentState.opListReadCapability) {
                continue;
            }
            for (const internalRenderTask of intentState.renderTasks){
                waitOn.push(internalRenderTask.completed);
                internalRenderTask.cancel();
            }
        }
        this.objs.clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pendingCleanup, false);
        return Promise.all(waitOn);
    }
    cleanup() {
        let resetStats = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pendingCleanup, true);
        const success = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _tryCleanup, tryCleanup).call(this);
        if (resetStats && success) {
            this._stats && (this._stats = new StatTimer());
        }
        return success;
    }
    _startRenderPage(transparency, cacheKey) {
        var _this__stats, _intentState_displayReadyCapability;
        const intentState = this._intentStates.get(cacheKey);
        if (!intentState) {
            return;
        }
        (_this__stats = this._stats) === null || _this__stats === void 0 ? void 0 : _this__stats.timeEnd("Page Request");
        (_intentState_displayReadyCapability = intentState.displayReadyCapability) === null || _intentState_displayReadyCapability === void 0 ? void 0 : _intentState_displayReadyCapability.resolve(transparency);
    }
    _renderPageChunk(operatorListChunk, intentState) {
        for(let i = 0, ii = operatorListChunk.length; i < ii; i++){
            intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);
            intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);
        }
        intentState.operatorList.lastChunk = operatorListChunk.lastChunk;
        intentState.operatorList.separateAnnots = operatorListChunk.separateAnnots;
        for (const internalRenderTask of intentState.renderTasks){
            internalRenderTask.operatorListChanged();
        }
        if (operatorListChunk.lastChunk) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _tryCleanup, tryCleanup).call(this);
        }
    }
    _pumpOperatorList(param) {
        let { renderingIntent, cacheKey, annotationStorageSerializable, modifiedIds } = param;
        const { map, transfer } = annotationStorageSerializable;
        const readableStream = this._transport.messageHandler.sendWithStream("GetOperatorList", {
            pageIndex: this._pageIndex,
            intent: renderingIntent,
            cacheKey,
            annotationStorage: map,
            modifiedIds
        }, transfer);
        const reader = readableStream.getReader();
        const intentState = this._intentStates.get(cacheKey);
        intentState.streamReader = reader;
        const pump = ()=>{
            reader.read().then((param)=>{
                let { value, done } = param;
                if (done) {
                    intentState.streamReader = null;
                    return;
                }
                if (this._transport.destroyed) {
                    return;
                }
                this._renderPageChunk(value, intentState);
                pump();
            }, (reason)=>{
                intentState.streamReader = null;
                if (this._transport.destroyed) {
                    return;
                }
                if (intentState.operatorList) {
                    intentState.operatorList.lastChunk = true;
                    for (const internalRenderTask of intentState.renderTasks){
                        internalRenderTask.operatorListChanged();
                    }
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _tryCleanup, tryCleanup).call(this);
                }
                if (intentState.displayReadyCapability) {
                    intentState.displayReadyCapability.reject(reason);
                } else if (intentState.opListReadCapability) {
                    intentState.opListReadCapability.reject(reason);
                } else {
                    throw reason;
                }
            });
        };
        pump();
    }
    _abortOperatorList(param) {
        let { intentState, reason, force = false } = param;
        if (!intentState.streamReader) {
            return;
        }
        if (intentState.streamReaderCancelTimeout) {
            clearTimeout(intentState.streamReaderCancelTimeout);
            intentState.streamReaderCancelTimeout = null;
        }
        if (!force) {
            if (intentState.renderTasks.size > 0) {
                return;
            }
            if (reason instanceof RenderingCancelledException) {
                let delay = RENDERING_CANCELLED_TIMEOUT;
                if (reason.extraDelay > 0 && reason.extraDelay < 1000) {
                    delay += reason.extraDelay;
                }
                intentState.streamReaderCancelTimeout = setTimeout(()=>{
                    intentState.streamReaderCancelTimeout = null;
                    this._abortOperatorList({
                        intentState,
                        reason,
                        force: true
                    });
                }, delay);
                return;
            }
        }
        intentState.streamReader.cancel(new AbortException(reason.message)).catch(()=>{});
        intentState.streamReader = null;
        if (this._transport.destroyed) {
            return;
        }
        for (const [curCacheKey, curIntentState] of this._intentStates){
            if (curIntentState === intentState) {
                this._intentStates.delete(curCacheKey);
                break;
            }
        }
        this.cleanup();
    }
    get stats() {
        return this._stats;
    }
    constructor(pageIndex, pageInfo, transport, pdfBug = false){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _tryCleanup);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pendingCleanup, {
            writable: true,
            value: false
        });
        this._pageIndex = pageIndex;
        this._pageInfo = pageInfo;
        this._transport = transport;
        this._stats = pdfBug ? new StatTimer() : null;
        this._pdfBug = pdfBug;
        this.commonObjs = transport.commonObjs;
        this.objs = new PDFObjects();
        this._intentStates = new Map();
        this.destroyed = false;
    }
}
function tryCleanup() {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pendingCleanup) || this.destroyed) {
        return false;
    }
    for (const { renderTasks, operatorList } of this._intentStates.values()){
        if (renderTasks.size > 0 || !operatorList.lastChunk) {
            return false;
        }
    }
    this._intentStates.clear();
    this.objs.clear();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pendingCleanup, false);
    return true;
}
var _capability2 = /*#__PURE__*/ new WeakMap(), _messageHandler = /*#__PURE__*/ new WeakMap(), _port1 = /*#__PURE__*/ new WeakMap(), _webWorker = /*#__PURE__*/ new WeakMap(), _resolve = /*#__PURE__*/ new WeakSet(), _initializeFromPort = /*#__PURE__*/ new WeakSet(), _initialize = /*#__PURE__*/ new WeakSet(), _setupFakeWorker = /*#__PURE__*/ new WeakSet();
class PDFWorker {
    get promise() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability2).promise;
    }
    get port() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _port1);
    }
    get messageHandler() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _messageHandler);
    }
    destroy() {
        var _class_private_field_get, _class_private_field_get1;
        this.destroyed = true;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _webWorker)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.terminate();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _webWorker, null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(PDFWorker, PDFWorker, _workerPorts).delete((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _port1));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _port1, null);
        (_class_private_field_get1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _messageHandler)) === null || _class_private_field_get1 === void 0 ? void 0 : _class_private_field_get1.destroy();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _messageHandler, null);
    }
    static create(params) {
        const cachedPort = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, PDFWorker, _workerPorts).get(params === null || params === void 0 ? void 0 : params.port);
        if (cachedPort) {
            if (cachedPort._pendingDestroy) {
                throw new Error("PDFWorker.create - the worker is being destroyed.\n" + "Please remember to await `PDFDocumentLoadingTask.destroy()`-calls.");
            }
            return cachedPort;
        }
        return new PDFWorker(params);
    }
    static get workerSrc() {
        if (GlobalWorkerOptions.workerSrc) {
            return GlobalWorkerOptions.workerSrc;
        }
        throw new Error('No "GlobalWorkerOptions.workerSrc" specified.');
    }
    static get _setupFakeWorkerGlobal() {
        const loader = async ()=>{
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, PDFWorker, _mainThreadWorkerMessageHandler)) {
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, PDFWorker, _mainThreadWorkerMessageHandler);
            }
            const worker = await import(/*webpackIgnore: true*/ /*@vite-ignore*/ this.workerSrc);
            return worker.WorkerMessageHandler;
        };
        return shadow(this, "_setupFakeWorkerGlobal", loader());
    }
    constructor({ name = null, port = null, verbosity = getVerbosityLevel() } = {}){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resolve);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initializeFromPort);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialize);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setupFakeWorker);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability2, {
            writable: true,
            value: Promise.withResolvers()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _messageHandler, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _port1, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _webWorker, {
            writable: true,
            value: null
        });
        this.name = name;
        this.destroyed = false;
        this.verbosity = verbosity;
        if (port) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(PDFWorker, PDFWorker, _workerPorts).has(port)) {
                throw new Error("Cannot use more than one PDFWorker per port.");
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(PDFWorker, PDFWorker, _workerPorts).set(port, this);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initializeFromPort, initializeFromPort).call(this, port);
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _initialize, initialize).call(this);
        }
    }
}
var _mainThreadWorkerMessageHandler = {
    get: get_mainThreadWorkerMessageHandler,
    set: void 0
};
var _fakeWorkerId = {
    writable: true,
    value: 0
};
var _isWorkerDisabled = {
    writable: true,
    value: false
};
var _workerPorts = {
    writable: true,
    value: new WeakMap()
};
(()=>{
    if (isNodeJS) {
        var _GlobalWorkerOptions;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(PDFWorker, PDFWorker, _isWorkerDisabled, true);
        (_GlobalWorkerOptions = GlobalWorkerOptions).workerSrc || (_GlobalWorkerOptions.workerSrc = "./pdf.worker.mjs");
    }
    PDFWorker._isSameOrigin = (baseUrl, otherUrl)=>{
        const base = URL.parse(baseUrl);
        if (!(base === null || base === void 0 ? void 0 : base.origin) || base.origin === "null") {
            return false;
        }
        const other = new URL(otherUrl, base);
        return base.origin === other.origin;
    };
    PDFWorker._createCDNWrapper = (url)=>{
        const wrapper = 'await import("'.concat(url, '");');
        return URL.createObjectURL(new Blob([
            wrapper
        ], {
            type: "text/javascript"
        }));
    };
    PDFWorker.fromPort = (params)=>{
        deprecated("`PDFWorker.fromPort` - please use `PDFWorker.create` instead.");
        if (!(params === null || params === void 0 ? void 0 : params.port)) {
            throw new Error("PDFWorker.fromPort - invalid method signature.");
        }
        return PDFWorker.create(params);
    };
})();
function resolve() {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability2).resolve();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _messageHandler).send("configure", {
        verbosity: this.verbosity
    });
}
function initializeFromPort(port) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _port1, port);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _messageHandler, new MessageHandler("main", "worker", port));
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _messageHandler).on("ready", ()=>{});
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resolve, resolve).call(this);
}
function initialize() {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(PDFWorker, PDFWorker, _isWorkerDisabled) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(PDFWorker, PDFWorker, _mainThreadWorkerMessageHandler)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setupFakeWorker, setupFakeWorker).call(this);
        return;
    }
    let { workerSrc } = PDFWorker;
    try {
        if (!PDFWorker._isSameOrigin(window.location, workerSrc)) {
            workerSrc = PDFWorker._createCDNWrapper(new URL(workerSrc, window.location).href);
        }
        const worker = new Worker(workerSrc, {
            type: "module"
        });
        const messageHandler = new MessageHandler("main", "worker", worker);
        const terminateEarly = ()=>{
            ac.abort();
            messageHandler.destroy();
            worker.terminate();
            if (this.destroyed) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability2).reject(new Error("Worker was destroyed"));
            } else {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setupFakeWorker, setupFakeWorker).call(this);
            }
        };
        const ac = new AbortController();
        worker.addEventListener("error", ()=>{
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _webWorker)) {
                terminateEarly();
            }
        }, {
            signal: ac.signal
        });
        messageHandler.on("test", (data)=>{
            ac.abort();
            if (this.destroyed || !data) {
                terminateEarly();
                return;
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _messageHandler, messageHandler);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _port1, worker);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _webWorker, worker);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resolve, resolve).call(this);
        });
        messageHandler.on("ready", (data)=>{
            ac.abort();
            if (this.destroyed) {
                terminateEarly();
                return;
            }
            try {
                sendTest();
            } catch (e) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setupFakeWorker, setupFakeWorker).call(this);
            }
        });
        const sendTest = ()=>{
            const testObj = new Uint8Array();
            messageHandler.send("test", testObj, [
                testObj.buffer
            ]);
        };
        sendTest();
        return;
    } catch (e) {
        info("The worker has been disabled.");
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setupFakeWorker, setupFakeWorker).call(this);
}
function setupFakeWorker() {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(PDFWorker, PDFWorker, _isWorkerDisabled)) {
        warn("Setting up fake worker.");
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(PDFWorker, PDFWorker, _isWorkerDisabled, true);
    }
    PDFWorker._setupFakeWorkerGlobal.then((WorkerMessageHandler)=>{
        if (this.destroyed) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability2).reject(new Error("Worker was destroyed"));
            return;
        }
        const port = new LoopbackPort();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _port1, port);
        const id = "fake".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_update$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(PDFWorker, PDFWorker, _fakeWorkerId).value++);
        const workerHandler = new MessageHandler(id + "_worker", id, port);
        WorkerMessageHandler.setup(workerHandler, port);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _messageHandler, new MessageHandler(id, id + "_worker", port));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resolve, resolve).call(this);
    }).catch((reason)=>{
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _capability2).reject(new Error('Setting up fake worker failed: "'.concat(reason.message, '".')));
    });
}
function get_mainThreadWorkerMessageHandler() {
    try {
        var _globalThis_pdfjsWorker;
        return ((_globalThis_pdfjsWorker = globalThis.pdfjsWorker) === null || _globalThis_pdfjsWorker === void 0 ? void 0 : _globalThis_pdfjsWorker.WorkerMessageHandler) || null;
    } catch (e) {
        return null;
    }
}
var _methodPromises = /*#__PURE__*/ new WeakMap(), _pageCache = /*#__PURE__*/ new WeakMap(), _pagePromises = /*#__PURE__*/ new WeakMap(), _pageRefCache = /*#__PURE__*/ new WeakMap(), _passwordCapability = /*#__PURE__*/ new WeakMap(), _cacheSimpleMethod = /*#__PURE__*/ new WeakSet();
class WorkerTransport {
    get annotationStorage() {
        return shadow(this, "annotationStorage", new AnnotationStorage());
    }
    getRenderingIntent(intent) {
        let annotationMode = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : AnnotationMode.ENABLE, printAnnotationStorage = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, isEditing = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false, isOpList = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
        let renderingIntent = RenderingIntentFlag.DISPLAY;
        let annotationStorageSerializable = SerializableEmpty;
        switch(intent){
            case "any":
                renderingIntent = RenderingIntentFlag.ANY;
                break;
            case "display":
                break;
            case "print":
                renderingIntent = RenderingIntentFlag.PRINT;
                break;
            default:
                warn("getRenderingIntent - invalid intent: ".concat(intent));
        }
        const annotationStorage = renderingIntent & RenderingIntentFlag.PRINT && printAnnotationStorage instanceof PrintAnnotationStorage ? printAnnotationStorage : this.annotationStorage;
        switch(annotationMode){
            case AnnotationMode.DISABLE:
                renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;
                break;
            case AnnotationMode.ENABLE:
                break;
            case AnnotationMode.ENABLE_FORMS:
                renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;
                break;
            case AnnotationMode.ENABLE_STORAGE:
                renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;
                annotationStorageSerializable = annotationStorage.serializable;
                break;
            default:
                warn("getRenderingIntent - invalid annotationMode: ".concat(annotationMode));
        }
        if (isEditing) {
            renderingIntent += RenderingIntentFlag.IS_EDITING;
        }
        if (isOpList) {
            renderingIntent += RenderingIntentFlag.OPLIST;
        }
        const { ids: modifiedIds, hash: modifiedIdsHash } = annotationStorage.modifiedIds;
        const cacheKeyBuf = [
            renderingIntent,
            annotationStorageSerializable.hash,
            modifiedIdsHash
        ];
        return {
            renderingIntent,
            cacheKey: cacheKeyBuf.join("_"),
            annotationStorageSerializable,
            modifiedIds
        };
    }
    destroy() {
        var _class_private_field_get;
        if (this.destroyCapability) {
            return this.destroyCapability.promise;
        }
        this.destroyed = true;
        this.destroyCapability = Promise.withResolvers();
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _passwordCapability)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.reject(new Error("Worker was destroyed during onPassword callback"));
        const waitOn = [];
        for (const page of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageCache).values()){
            waitOn.push(page._destroy());
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageCache).clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pagePromises).clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageRefCache).clear();
        if (this.hasOwnProperty("annotationStorage")) {
            this.annotationStorage.resetModified();
        }
        const terminated = this.messageHandler.sendWithPromise("Terminate", null);
        waitOn.push(terminated);
        Promise.all(waitOn).then(()=>{
            var _this__networkStream, _this_messageHandler;
            this.commonObjs.clear();
            this.fontLoader.clear();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _methodPromises).clear();
            this.filterFactory.destroy();
            TextLayer.cleanup();
            (_this__networkStream = this._networkStream) === null || _this__networkStream === void 0 ? void 0 : _this__networkStream.cancelAllRequests(new AbortException("Worker was terminated."));
            (_this_messageHandler = this.messageHandler) === null || _this_messageHandler === void 0 ? void 0 : _this_messageHandler.destroy();
            this.messageHandler = null;
            this.destroyCapability.resolve();
        }, this.destroyCapability.reject);
        return this.destroyCapability.promise;
    }
    setupMessageHandler() {
        const { messageHandler, loadingTask } = this;
        messageHandler.on("GetReader", (data, sink)=>{
            assert(this._networkStream, "GetReader - no `IPDFStream` instance available.");
            this._fullReader = this._networkStream.getFullReader();
            this._fullReader.onProgress = (evt)=>{
                this._lastProgress = {
                    loaded: evt.loaded,
                    total: evt.total
                };
            };
            sink.onPull = ()=>{
                this._fullReader.read().then(function(param) {
                    let { value, done } = param;
                    if (done) {
                        sink.close();
                        return;
                    }
                    assert(value instanceof ArrayBuffer, "GetReader - expected an ArrayBuffer.");
                    sink.enqueue(new Uint8Array(value), 1, [
                        value
                    ]);
                }).catch((reason)=>{
                    sink.error(reason);
                });
            };
            sink.onCancel = (reason)=>{
                this._fullReader.cancel(reason);
                sink.ready.catch((readyReason)=>{
                    if (this.destroyed) {
                        return;
                    }
                    throw readyReason;
                });
            };
        });
        messageHandler.on("ReaderHeadersReady", async (data)=>{
            await this._fullReader.headersReady;
            const { isStreamingSupported, isRangeSupported, contentLength } = this._fullReader;
            if (!isStreamingSupported || !isRangeSupported) {
                if (this._lastProgress) {
                    var _loadingTask_onProgress;
                    (_loadingTask_onProgress = loadingTask.onProgress) === null || _loadingTask_onProgress === void 0 ? void 0 : _loadingTask_onProgress.call(loadingTask, this._lastProgress);
                }
                this._fullReader.onProgress = (evt)=>{
                    var _loadingTask_onProgress;
                    (_loadingTask_onProgress = loadingTask.onProgress) === null || _loadingTask_onProgress === void 0 ? void 0 : _loadingTask_onProgress.call(loadingTask, {
                        loaded: evt.loaded,
                        total: evt.total
                    });
                };
            }
            return {
                isStreamingSupported,
                isRangeSupported,
                contentLength
            };
        });
        messageHandler.on("GetRangeReader", (data, sink)=>{
            assert(this._networkStream, "GetRangeReader - no `IPDFStream` instance available.");
            const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);
            if (!rangeReader) {
                sink.close();
                return;
            }
            sink.onPull = ()=>{
                rangeReader.read().then(function(param) {
                    let { value, done } = param;
                    if (done) {
                        sink.close();
                        return;
                    }
                    assert(value instanceof ArrayBuffer, "GetRangeReader - expected an ArrayBuffer.");
                    sink.enqueue(new Uint8Array(value), 1, [
                        value
                    ]);
                }).catch((reason)=>{
                    sink.error(reason);
                });
            };
            sink.onCancel = (reason)=>{
                rangeReader.cancel(reason);
                sink.ready.catch((readyReason)=>{
                    if (this.destroyed) {
                        return;
                    }
                    throw readyReason;
                });
            };
        });
        messageHandler.on("GetDoc", (param)=>{
            let { pdfInfo } = param;
            this._numPages = pdfInfo.numPages;
            this._htmlForXfa = pdfInfo.htmlForXfa;
            delete pdfInfo.htmlForXfa;
            loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));
        });
        messageHandler.on("DocException", (ex)=>{
            loadingTask._capability.reject(wrapReason(ex));
        });
        messageHandler.on("PasswordRequest", (ex)=>{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _passwordCapability, Promise.withResolvers());
            try {
                if (!loadingTask.onPassword) {
                    throw wrapReason(ex);
                }
                const updatePassword = (password)=>{
                    if (password instanceof Error) {
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _passwordCapability).reject(password);
                    } else {
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _passwordCapability).resolve({
                            password
                        });
                    }
                };
                loadingTask.onPassword(updatePassword, ex.code);
            } catch (err) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _passwordCapability).reject(err);
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _passwordCapability).promise;
        });
        messageHandler.on("DataLoaded", (data)=>{
            var _loadingTask_onProgress;
            (_loadingTask_onProgress = loadingTask.onProgress) === null || _loadingTask_onProgress === void 0 ? void 0 : _loadingTask_onProgress.call(loadingTask, {
                loaded: data.length,
                total: data.length
            });
            this.downloadInfoCapability.resolve(data);
        });
        messageHandler.on("StartRenderPage", (data)=>{
            if (this.destroyed) {
                return;
            }
            const page = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageCache).get(data.pageIndex);
            page._startRenderPage(data.transparency, data.cacheKey);
        });
        messageHandler.on("commonobj", (param)=>{
            let [id, type, exportedData] = param;
            if (this.destroyed) {
                return null;
            }
            if (this.commonObjs.has(id)) {
                return null;
            }
            switch(type){
                case "Font":
                    var _globalThis_FontInspector;
                    if ("error" in exportedData) {
                        const exportedError = exportedData.error;
                        warn("Error during font loading: ".concat(exportedError));
                        this.commonObjs.resolve(id, exportedError);
                        break;
                    }
                    const inspectFont = this._params.pdfBug && ((_globalThis_FontInspector = globalThis.FontInspector) === null || _globalThis_FontInspector === void 0 ? void 0 : _globalThis_FontInspector.enabled) ? (font, url)=>globalThis.FontInspector.fontAdded(font, url) : null;
                    const font = new FontFaceObject(exportedData, inspectFont);
                    this.fontLoader.bind(font).catch(()=>messageHandler.sendWithPromise("FontFallback", {
                            id
                        })).finally(()=>{
                        if (!font.fontExtraProperties && font.data) {
                            font.data = null;
                        }
                        this.commonObjs.resolve(id, font);
                    });
                    break;
                case "CopyLocalImage":
                    const { imageRef } = exportedData;
                    assert(imageRef, "The imageRef must be defined.");
                    for (const pageProxy of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageCache).values()){
                        for (const [, data] of pageProxy.objs){
                            if ((data === null || data === void 0 ? void 0 : data.ref) !== imageRef) {
                                continue;
                            }
                            if (!data.dataLen) {
                                return null;
                            }
                            this.commonObjs.resolve(id, structuredClone(data));
                            return data.dataLen;
                        }
                    }
                    break;
                case "FontPath":
                case "Image":
                case "Pattern":
                    this.commonObjs.resolve(id, exportedData);
                    break;
                default:
                    throw new Error("Got unknown common object type ".concat(type));
            }
            return null;
        });
        messageHandler.on("obj", (param)=>{
            let [id, pageIndex, type, imageData] = param;
            if (this.destroyed) {
                return;
            }
            const pageProxy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageCache).get(pageIndex);
            if (pageProxy.objs.has(id)) {
                return;
            }
            if (pageProxy._intentStates.size === 0) {
                var _imageData_bitmap;
                imageData === null || imageData === void 0 ? void 0 : (_imageData_bitmap = imageData.bitmap) === null || _imageData_bitmap === void 0 ? void 0 : _imageData_bitmap.close();
                return;
            }
            switch(type){
                case "Image":
                case "Pattern":
                    pageProxy.objs.resolve(id, imageData);
                    break;
                default:
                    throw new Error("Got unknown object type ".concat(type));
            }
        });
        messageHandler.on("DocProgress", (data)=>{
            var _loadingTask_onProgress;
            if (this.destroyed) {
                return;
            }
            (_loadingTask_onProgress = loadingTask.onProgress) === null || _loadingTask_onProgress === void 0 ? void 0 : _loadingTask_onProgress.call(loadingTask, {
                loaded: data.loaded,
                total: data.total
            });
        });
        messageHandler.on("FetchBinaryData", async (data)=>{
            if (this.destroyed) {
                throw new Error("Worker was destroyed.");
            }
            const factory = this[data.type];
            if (!factory) {
                throw new Error("".concat(data.type, " not initialized, see the `useWorkerFetch` parameter."));
            }
            return factory.fetch(data);
        });
    }
    getData() {
        return this.messageHandler.sendWithPromise("GetData", null);
    }
    saveDocument() {
        var _this__fullReader;
        if (this.annotationStorage.size <= 0) {
            warn("saveDocument called while `annotationStorage` is empty, " + "please use the getData-method instead.");
        }
        const { map, transfer } = this.annotationStorage.serializable;
        var _this__fullReader_filename;
        return this.messageHandler.sendWithPromise("SaveDocument", {
            isPureXfa: !!this._htmlForXfa,
            numPages: this._numPages,
            annotationStorage: map,
            filename: (_this__fullReader_filename = (_this__fullReader = this._fullReader) === null || _this__fullReader === void 0 ? void 0 : _this__fullReader.filename) !== null && _this__fullReader_filename !== void 0 ? _this__fullReader_filename : null
        }, transfer).finally(()=>{
            this.annotationStorage.resetModified();
        });
    }
    getPage(pageNumber) {
        if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {
            return Promise.reject(new Error("Invalid page request."));
        }
        const pageIndex = pageNumber - 1, cachedPromise = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pagePromises).get(pageIndex);
        if (cachedPromise) {
            return cachedPromise;
        }
        const promise = this.messageHandler.sendWithPromise("GetPage", {
            pageIndex
        }).then((pageInfo)=>{
            if (this.destroyed) {
                throw new Error("Transport destroyed");
            }
            if (pageInfo.refStr) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageRefCache).set(pageInfo.refStr, pageNumber);
            }
            const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.pdfBug);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageCache).set(pageIndex, page);
            return page;
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pagePromises).set(pageIndex, promise);
        return promise;
    }
    getPageIndex(ref) {
        if (!isRefProxy(ref)) {
            return Promise.reject(new Error("Invalid pageIndex request."));
        }
        return this.messageHandler.sendWithPromise("GetPageIndex", {
            num: ref.num,
            gen: ref.gen
        });
    }
    getAnnotations(pageIndex, intent) {
        return this.messageHandler.sendWithPromise("GetAnnotations", {
            pageIndex,
            intent
        });
    }
    getFieldObjects() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cacheSimpleMethod, cacheSimpleMethod).call(this, "GetFieldObjects");
    }
    hasJSActions() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cacheSimpleMethod, cacheSimpleMethod).call(this, "HasJSActions");
    }
    getCalculationOrderIds() {
        return this.messageHandler.sendWithPromise("GetCalculationOrderIds", null);
    }
    getDestinations() {
        return this.messageHandler.sendWithPromise("GetDestinations", null);
    }
    getDestination(id) {
        if (typeof id !== "string") {
            return Promise.reject(new Error("Invalid destination request."));
        }
        return this.messageHandler.sendWithPromise("GetDestination", {
            id
        });
    }
    getPageLabels() {
        return this.messageHandler.sendWithPromise("GetPageLabels", null);
    }
    getPageLayout() {
        return this.messageHandler.sendWithPromise("GetPageLayout", null);
    }
    getPageMode() {
        return this.messageHandler.sendWithPromise("GetPageMode", null);
    }
    getViewerPreferences() {
        return this.messageHandler.sendWithPromise("GetViewerPreferences", null);
    }
    getOpenAction() {
        return this.messageHandler.sendWithPromise("GetOpenAction", null);
    }
    getAttachments() {
        return this.messageHandler.sendWithPromise("GetAttachments", null);
    }
    getDocJSActions() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cacheSimpleMethod, cacheSimpleMethod).call(this, "GetDocJSActions");
    }
    getPageJSActions(pageIndex) {
        return this.messageHandler.sendWithPromise("GetPageJSActions", {
            pageIndex
        });
    }
    getStructTree(pageIndex) {
        return this.messageHandler.sendWithPromise("GetStructTree", {
            pageIndex
        });
    }
    getOutline() {
        return this.messageHandler.sendWithPromise("GetOutline", null);
    }
    getOptionalContentConfig(renderingIntent) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cacheSimpleMethod, cacheSimpleMethod).call(this, "GetOptionalContentConfig").then((data)=>new OptionalContentConfig(data, renderingIntent));
    }
    getPermissions() {
        return this.messageHandler.sendWithPromise("GetPermissions", null);
    }
    getMetadata() {
        const name = "GetMetadata", cachedPromise = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _methodPromises).get(name);
        if (cachedPromise) {
            return cachedPromise;
        }
        const promise = this.messageHandler.sendWithPromise(name, null).then((results)=>{
            var _this__fullReader, _this__fullReader1;
            var _this__fullReader_filename, _this__fullReader_contentLength;
            return {
                info: results[0],
                metadata: results[1] ? new Metadata(results[1]) : null,
                contentDispositionFilename: (_this__fullReader_filename = (_this__fullReader = this._fullReader) === null || _this__fullReader === void 0 ? void 0 : _this__fullReader.filename) !== null && _this__fullReader_filename !== void 0 ? _this__fullReader_filename : null,
                contentLength: (_this__fullReader_contentLength = (_this__fullReader1 = this._fullReader) === null || _this__fullReader1 === void 0 ? void 0 : _this__fullReader1.contentLength) !== null && _this__fullReader_contentLength !== void 0 ? _this__fullReader_contentLength : null
            };
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _methodPromises).set(name, promise);
        return promise;
    }
    getMarkInfo() {
        return this.messageHandler.sendWithPromise("GetMarkInfo", null);
    }
    async startCleanup() {
        let keepLoadedFonts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        if (this.destroyed) {
            return;
        }
        await this.messageHandler.sendWithPromise("Cleanup", null);
        for (const page of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageCache).values()){
            const cleanupSuccessful = page.cleanup();
            if (!cleanupSuccessful) {
                throw new Error("startCleanup: Page ".concat(page.pageNumber, " is currently rendering."));
            }
        }
        this.commonObjs.clear();
        if (!keepLoadedFonts) {
            this.fontLoader.clear();
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _methodPromises).clear();
        this.filterFactory.destroy(true);
        TextLayer.cleanup();
    }
    cachedPageNumber(ref) {
        if (!isRefProxy(ref)) {
            return null;
        }
        const refStr = ref.gen === 0 ? "".concat(ref.num, "R") : "".concat(ref.num, "R").concat(ref.gen);
        var _class_private_field_get_get;
        return (_class_private_field_get_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageRefCache).get(refStr)) !== null && _class_private_field_get_get !== void 0 ? _class_private_field_get_get : null;
    }
    constructor(messageHandler, loadingTask, networkStream, params, factory){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cacheSimpleMethod);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _methodPromises, {
            writable: true,
            value: new Map()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageCache, {
            writable: true,
            value: new Map()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pagePromises, {
            writable: true,
            value: new Map()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pageRefCache, {
            writable: true,
            value: new Map()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _passwordCapability, {
            writable: true,
            value: null
        });
        this.messageHandler = messageHandler;
        this.loadingTask = loadingTask;
        this.commonObjs = new PDFObjects();
        this.fontLoader = new FontLoader({
            ownerDocument: params.ownerDocument,
            styleElement: params.styleElement
        });
        this.loadingParams = params.loadingParams;
        this._params = params;
        this.canvasFactory = factory.canvasFactory;
        this.filterFactory = factory.filterFactory;
        this.cMapReaderFactory = factory.cMapReaderFactory;
        this.standardFontDataFactory = factory.standardFontDataFactory;
        this.wasmFactory = factory.wasmFactory;
        this.destroyed = false;
        this.destroyCapability = null;
        this._networkStream = networkStream;
        this._fullReader = null;
        this._lastProgress = null;
        this.downloadInfoCapability = Promise.withResolvers();
        this.setupMessageHandler();
    }
}
function cacheSimpleMethod(name) {
    let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
    const cachedPromise = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _methodPromises).get(name);
    if (cachedPromise) {
        return cachedPromise;
    }
    const promise = this.messageHandler.sendWithPromise(name, data);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _methodPromises).set(name, promise);
    return promise;
}
var _internalRenderTask = /*#__PURE__*/ new WeakMap();
class RenderTask {
    get promise() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _internalRenderTask).capability.promise;
    }
    cancel() {
        let extraDelay = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _internalRenderTask).cancel(null, extraDelay);
    }
    get separateAnnots() {
        const { separateAnnots } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _internalRenderTask).operatorList;
        if (!separateAnnots) {
            return false;
        }
        const { annotationCanvasMap } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _internalRenderTask);
        return separateAnnots.form || separateAnnots.canvas && (annotationCanvasMap === null || annotationCanvasMap === void 0 ? void 0 : annotationCanvasMap.size) > 0;
    }
    constructor(internalRenderTask){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _internalRenderTask, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "onContinue", null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "onError", null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _internalRenderTask, internalRenderTask);
    }
}
var _rAF = /*#__PURE__*/ new WeakMap();
class InternalRenderTask {
    get completed() {
        return this.capability.promise.catch(function() {});
    }
    initializeGraphics(param) {
        let { transparency = false, optionalContentConfig } = param;
        var _globalThis_StepperManager, _this_graphicsReadyCallback, _this;
        if (this.cancelled) {
            return;
        }
        if (this._canvas) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(InternalRenderTask, InternalRenderTask, _canvasInUse).has(this._canvas)) {
                throw new Error("Cannot use the same canvas during multiple render() operations. " + "Use different canvas or ensure previous operations were " + "cancelled or completed.");
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(InternalRenderTask, InternalRenderTask, _canvasInUse).add(this._canvas);
        }
        if (this._pdfBug && ((_globalThis_StepperManager = globalThis.StepperManager) === null || _globalThis_StepperManager === void 0 ? void 0 : _globalThis_StepperManager.enabled)) {
            this.stepper = globalThis.StepperManager.create(this._pageIndex);
            this.stepper.init(this.operatorList);
            this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();
        }
        const { canvasContext, viewport, transform, background } = this.params;
        this.gfx = new CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {
            optionalContentConfig
        }, this.annotationCanvasMap, this.pageColors);
        this.gfx.beginDrawing({
            transform,
            viewport,
            transparency,
            background
        });
        this.operatorListIdx = 0;
        this.graphicsReady = true;
        (_this_graphicsReadyCallback = (_this = this).graphicsReadyCallback) === null || _this_graphicsReadyCallback === void 0 ? void 0 : _this_graphicsReadyCallback.call(_this);
    }
    cancel() {
        let error = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, extraDelay = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        var _this_gfx, _this_task_onError, _this_task;
        this.running = false;
        this.cancelled = true;
        (_this_gfx = this.gfx) === null || _this_gfx === void 0 ? void 0 : _this_gfx.endDrawing();
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rAF)) {
            window.cancelAnimationFrame((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rAF));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rAF, null);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(InternalRenderTask, InternalRenderTask, _canvasInUse).delete(this._canvas);
        error || (error = new RenderingCancelledException("Rendering cancelled, page ".concat(this._pageIndex + 1), extraDelay));
        this.callback(error);
        (_this_task_onError = (_this_task = this.task).onError) === null || _this_task_onError === void 0 ? void 0 : _this_task_onError.call(_this_task, error);
    }
    operatorListChanged() {
        var _this_stepper;
        if (!this.graphicsReady) {
            this.graphicsReadyCallback || (this.graphicsReadyCallback = this._continueBound);
            return;
        }
        (_this_stepper = this.stepper) === null || _this_stepper === void 0 ? void 0 : _this_stepper.updateOperatorList(this.operatorList);
        if (this.running) {
            return;
        }
        this._continue();
    }
    _continue() {
        this.running = true;
        if (this.cancelled) {
            return;
        }
        if (this.task.onContinue) {
            this.task.onContinue(this._scheduleNextBound);
        } else {
            this._scheduleNext();
        }
    }
    _scheduleNext() {
        if (this._useRequestAnimationFrame) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rAF, window.requestAnimationFrame(()=>{
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rAF, null);
                this._nextBound().catch(this._cancelBound);
            }));
        } else {
            Promise.resolve().then(this._nextBound).catch(this._cancelBound);
        }
    }
    async _next() {
        if (this.cancelled) {
            return;
        }
        this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);
        if (this.operatorListIdx === this.operatorList.argsArray.length) {
            this.running = false;
            if (this.operatorList.lastChunk) {
                this.gfx.endDrawing();
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(InternalRenderTask, InternalRenderTask, _canvasInUse).delete(this._canvas);
                this.callback();
            }
        }
    }
    constructor({ callback, params, objs, commonObjs, annotationCanvasMap, operatorList, pageIndex, canvasFactory, filterFactory, useRequestAnimationFrame = false, pdfBug = false, pageColors = null }){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rAF, {
            writable: true,
            value: null
        });
        this.callback = callback;
        this.params = params;
        this.objs = objs;
        this.commonObjs = commonObjs;
        this.annotationCanvasMap = annotationCanvasMap;
        this.operatorListIdx = null;
        this.operatorList = operatorList;
        this._pageIndex = pageIndex;
        this.canvasFactory = canvasFactory;
        this.filterFactory = filterFactory;
        this._pdfBug = pdfBug;
        this.pageColors = pageColors;
        this.running = false;
        this.graphicsReadyCallback = null;
        this.graphicsReady = false;
        this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== "undefined";
        this.cancelled = false;
        this.capability = Promise.withResolvers();
        this.task = new RenderTask(this);
        this._cancelBound = this.cancel.bind(this);
        this._continueBound = this._continue.bind(this);
        this._scheduleNextBound = this._scheduleNext.bind(this);
        this._nextBound = this._next.bind(this);
        this._canvas = params.canvasContext.canvas;
    }
}
var _canvasInUse = {
    writable: true,
    value: new WeakSet()
};
const version = "5.3.31";
const build = "47ad820d9";
; // ./src/shared/scripting_utils.js
function makeColorComp(n) {
    return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, "0");
}
function scaleAndClamp(x) {
    return Math.max(0, Math.min(255, 255 * x));
}
class ColorConverters {
    static CMYK_G(param) {
        let [c, y, m, k] = param;
        return [
            "G",
            1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)
        ];
    }
    static G_CMYK(param) {
        let [g] = param;
        return [
            "CMYK",
            0,
            0,
            0,
            1 - g
        ];
    }
    static G_RGB(param) {
        let [g] = param;
        return [
            "RGB",
            g,
            g,
            g
        ];
    }
    static G_rgb(param) {
        let [g] = param;
        g = scaleAndClamp(g);
        return [
            g,
            g,
            g
        ];
    }
    static G_HTML(param) {
        let [g] = param;
        const G = makeColorComp(g);
        return "#".concat(G).concat(G).concat(G);
    }
    static RGB_G(param) {
        let [r, g, b] = param;
        return [
            "G",
            0.3 * r + 0.59 * g + 0.11 * b
        ];
    }
    static RGB_rgb(color) {
        return color.map(scaleAndClamp);
    }
    static RGB_HTML(color) {
        return "#".concat(color.map(makeColorComp).join(""));
    }
    static T_HTML() {
        return "#00000000";
    }
    static T_rgb() {
        return [
            null
        ];
    }
    static CMYK_RGB(param) {
        let [c, y, m, k] = param;
        return [
            "RGB",
            1 - Math.min(1, c + k),
            1 - Math.min(1, m + k),
            1 - Math.min(1, y + k)
        ];
    }
    static CMYK_rgb(param) {
        let [c, y, m, k] = param;
        return [
            scaleAndClamp(1 - Math.min(1, c + k)),
            scaleAndClamp(1 - Math.min(1, m + k)),
            scaleAndClamp(1 - Math.min(1, y + k))
        ];
    }
    static CMYK_HTML(components) {
        const rgb = this.CMYK_RGB(components).slice(1);
        return this.RGB_HTML(rgb);
    }
    static RGB_CMYK(param) {
        let [r, g, b] = param;
        const c = 1 - r;
        const m = 1 - g;
        const y = 1 - b;
        const k = Math.min(c, m, y);
        return [
            "CMYK",
            c,
            m,
            y,
            k
        ];
    }
}
; // ./src/display/svg_factory.js
class BaseSVGFactory {
    create(width, height) {
        let skipDimensions = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
        if (width <= 0 || height <= 0) {
            throw new Error("Invalid SVG dimensions");
        }
        const svg = this._createSVG("svg:svg");
        svg.setAttribute("version", "1.1");
        if (!skipDimensions) {
            svg.setAttribute("width", "".concat(width, "px"));
            svg.setAttribute("height", "".concat(height, "px"));
        }
        svg.setAttribute("preserveAspectRatio", "none");
        svg.setAttribute("viewBox", "0 0 ".concat(width, " ").concat(height));
        return svg;
    }
    createElement(type) {
        if (typeof type !== "string") {
            throw new Error("Invalid SVG element type");
        }
        return this._createSVG(type);
    }
    _createSVG(type) {
        unreachable("Abstract method `_createSVG` called.");
    }
}
class DOMSVGFactory extends BaseSVGFactory {
    _createSVG(type) {
        return document.createElementNS(SVG_NS, type);
    }
}
; // ./src/display/xfa_layer.js
class XfaLayer {
    static setupStorage(html, id, element, storage, intent) {
        const storedData = storage.getValue(id, {
            value: null
        });
        switch(element.name){
            case "textarea":
                if (storedData.value !== null) {
                    html.textContent = storedData.value;
                }
                if (intent === "print") {
                    break;
                }
                html.addEventListener("input", (event)=>{
                    storage.setValue(id, {
                        value: event.target.value
                    });
                });
                break;
            case "input":
                if (element.attributes.type === "radio" || element.attributes.type === "checkbox") {
                    if (storedData.value === element.attributes.xfaOn) {
                        html.setAttribute("checked", true);
                    } else if (storedData.value === element.attributes.xfaOff) {
                        html.removeAttribute("checked");
                    }
                    if (intent === "print") {
                        break;
                    }
                    html.addEventListener("change", (event)=>{
                        storage.setValue(id, {
                            value: event.target.checked ? event.target.getAttribute("xfaOn") : event.target.getAttribute("xfaOff")
                        });
                    });
                } else {
                    if (storedData.value !== null) {
                        html.setAttribute("value", storedData.value);
                    }
                    if (intent === "print") {
                        break;
                    }
                    html.addEventListener("input", (event)=>{
                        storage.setValue(id, {
                            value: event.target.value
                        });
                    });
                }
                break;
            case "select":
                if (storedData.value !== null) {
                    html.setAttribute("value", storedData.value);
                    for (const option of element.children){
                        if (option.attributes.value === storedData.value) {
                            option.attributes.selected = true;
                        } else if (option.attributes.hasOwnProperty("selected")) {
                            delete option.attributes.selected;
                        }
                    }
                }
                html.addEventListener("input", (event)=>{
                    const options = event.target.options;
                    const value = options.selectedIndex === -1 ? "" : options[options.selectedIndex].value;
                    storage.setValue(id, {
                        value
                    });
                });
                break;
        }
    }
    static setAttributes(param) {
        let { html, element, storage = null, intent, linkService } = param;
        const { attributes } = element;
        const isHTMLAnchorElement = html instanceof HTMLAnchorElement;
        if (attributes.type === "radio") {
            attributes.name = "".concat(attributes.name, "-").concat(intent);
        }
        for (const [key, value] of Object.entries(attributes)){
            if (value === null || value === undefined) {
                continue;
            }
            switch(key){
                case "class":
                    if (value.length) {
                        html.setAttribute(key, value.join(" "));
                    }
                    break;
                case "dataId":
                    break;
                case "id":
                    html.setAttribute("data-element-id", value);
                    break;
                case "style":
                    Object.assign(html.style, value);
                    break;
                case "textContent":
                    html.textContent = value;
                    break;
                default:
                    if (!isHTMLAnchorElement || key !== "href" && key !== "newWindow") {
                        html.setAttribute(key, value);
                    }
            }
        }
        if (isHTMLAnchorElement) {
            linkService.addLinkAttributes(html, attributes.href, attributes.newWindow);
        }
        if (storage && attributes.dataId) {
            this.setupStorage(html, attributes.dataId, element, storage);
        }
    }
    static render(parameters) {
        const storage = parameters.annotationStorage;
        const linkService = parameters.linkService;
        const root = parameters.xfaHtml;
        const intent = parameters.intent || "display";
        const rootHtml = document.createElement(root.name);
        if (root.attributes) {
            this.setAttributes({
                html: rootHtml,
                element: root,
                intent,
                linkService
            });
        }
        const isNotForRichText = intent !== "richText";
        const rootDiv = parameters.div;
        rootDiv.append(rootHtml);
        if (parameters.viewport) {
            const transform = "matrix(".concat(parameters.viewport.transform.join(","), ")");
            rootDiv.style.transform = transform;
        }
        if (isNotForRichText) {
            rootDiv.setAttribute("class", "xfaLayer xfaFont");
        }
        const textDivs = [];
        if (root.children.length === 0) {
            if (root.value) {
                const node = document.createTextNode(root.value);
                rootHtml.append(node);
                if (isNotForRichText && XfaText.shouldBuildText(root.name)) {
                    textDivs.push(node);
                }
            }
            return {
                textDivs
            };
        }
        const stack = [
            [
                root,
                -1,
                rootHtml
            ]
        ];
        while(stack.length > 0){
            var _child_attributes, _child_children;
            const [parent, i, html] = stack.at(-1);
            if (i + 1 === parent.children.length) {
                stack.pop();
                continue;
            }
            const child = parent.children[++stack.at(-1)[1]];
            if (child === null) {
                continue;
            }
            const { name } = child;
            if (name === "#text") {
                const node = document.createTextNode(child.value);
                textDivs.push(node);
                html.append(node);
                continue;
            }
            const childHtml = (child === null || child === void 0 ? void 0 : (_child_attributes = child.attributes) === null || _child_attributes === void 0 ? void 0 : _child_attributes.xmlns) ? document.createElementNS(child.attributes.xmlns, name) : document.createElement(name);
            html.append(childHtml);
            if (child.attributes) {
                this.setAttributes({
                    html: childHtml,
                    element: child,
                    storage,
                    intent,
                    linkService
                });
            }
            if (((_child_children = child.children) === null || _child_children === void 0 ? void 0 : _child_children.length) > 0) {
                stack.push([
                    child,
                    -1,
                    childHtml
                ]);
            } else if (child.value) {
                const node = document.createTextNode(child.value);
                if (isNotForRichText && XfaText.shouldBuildText(name)) {
                    textDivs.push(node);
                }
                childHtml.append(node);
            }
        }
        for (const el of rootDiv.querySelectorAll(".xfaNonInteractive input, .xfaNonInteractive textarea")){
            el.setAttribute("readOnly", true);
        }
        return {
            textDivs
        };
    }
    static update(parameters) {
        const transform = "matrix(".concat(parameters.viewport.transform.join(","), ")");
        parameters.div.style.transform = transform;
        parameters.div.hidden = false;
    }
}
; // ./src/display/annotation_layer.js
const DEFAULT_TAB_INDEX = 1000;
const annotation_layer_DEFAULT_FONT_SIZE = 9;
const GetElementsByNameSet = new WeakSet();
class AnnotationElementFactory {
    static create(parameters) {
        const subtype = parameters.data.annotationType;
        switch(subtype){
            case AnnotationType.LINK:
                return new LinkAnnotationElement(parameters);
            case AnnotationType.TEXT:
                return new TextAnnotationElement(parameters);
            case AnnotationType.WIDGET:
                const fieldType = parameters.data.fieldType;
                switch(fieldType){
                    case "Tx":
                        return new TextWidgetAnnotationElement(parameters);
                    case "Btn":
                        if (parameters.data.radioButton) {
                            return new RadioButtonWidgetAnnotationElement(parameters);
                        } else if (parameters.data.checkBox) {
                            return new CheckboxWidgetAnnotationElement(parameters);
                        }
                        return new PushButtonWidgetAnnotationElement(parameters);
                    case "Ch":
                        return new ChoiceWidgetAnnotationElement(parameters);
                    case "Sig":
                        return new SignatureWidgetAnnotationElement(parameters);
                }
                return new WidgetAnnotationElement(parameters);
            case AnnotationType.POPUP:
                return new PopupAnnotationElement(parameters);
            case AnnotationType.FREETEXT:
                return new FreeTextAnnotationElement(parameters);
            case AnnotationType.LINE:
                return new LineAnnotationElement(parameters);
            case AnnotationType.SQUARE:
                return new SquareAnnotationElement(parameters);
            case AnnotationType.CIRCLE:
                return new CircleAnnotationElement(parameters);
            case AnnotationType.POLYLINE:
                return new PolylineAnnotationElement(parameters);
            case AnnotationType.CARET:
                return new CaretAnnotationElement(parameters);
            case AnnotationType.INK:
                return new InkAnnotationElement(parameters);
            case AnnotationType.POLYGON:
                return new PolygonAnnotationElement(parameters);
            case AnnotationType.HIGHLIGHT:
                return new HighlightAnnotationElement(parameters);
            case AnnotationType.UNDERLINE:
                return new UnderlineAnnotationElement(parameters);
            case AnnotationType.SQUIGGLY:
                return new SquigglyAnnotationElement(parameters);
            case AnnotationType.STRIKEOUT:
                return new StrikeOutAnnotationElement(parameters);
            case AnnotationType.STAMP:
                return new StampAnnotationElement(parameters);
            case AnnotationType.FILEATTACHMENT:
                return new FileAttachmentAnnotationElement(parameters);
            default:
                return new AnnotationElement(parameters);
        }
    }
}
var _updates = /*#__PURE__*/ new WeakMap(), _hasBorder = /*#__PURE__*/ new WeakMap(), _popupElement = /*#__PURE__*/ new WeakMap(), _setRectEdited = /*#__PURE__*/ new WeakSet();
class AnnotationElement {
    static _hasPopupData(param) {
        let { titleObj, contentsObj, richText } = param;
        return !!((titleObj === null || titleObj === void 0 ? void 0 : titleObj.str) || (contentsObj === null || contentsObj === void 0 ? void 0 : contentsObj.str) || (richText === null || richText === void 0 ? void 0 : richText.str));
    }
    get _isEditable() {
        return this.data.isEditable;
    }
    get hasPopupData() {
        return AnnotationElement._hasPopupData(this.data);
    }
    updateEdited(params) {
        var _class_private_field_get;
        if (!this.container) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updates, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updates) || {
            rect: this.data.rect.slice(0)
        });
        const { rect } = params;
        if (rect) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setRectEdited, setRectEdited).call(this, rect);
        }
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _popupElement)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.popup.updateEdited(params);
    }
    resetEdited() {
        var _class_private_field_get;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updates)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setRectEdited, setRectEdited).call(this, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updates).rect);
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _popupElement)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.popup.resetEdited();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updates, null);
    }
    _createContainer(ignoreBorder) {
        const { data, parent: { page, viewport } } = this;
        const container = document.createElement("section");
        container.setAttribute("data-annotation-id", data.id);
        if (!(this instanceof WidgetAnnotationElement)) {
            container.tabIndex = DEFAULT_TAB_INDEX;
        }
        const { style } = container;
        style.zIndex = this.parent.zIndex++;
        if (data.alternativeText) {
            container.title = data.alternativeText;
        }
        if (data.noRotate) {
            container.classList.add("norotate");
        }
        if (!data.rect || this instanceof PopupAnnotationElement) {
            const { rotation } = data;
            if (!data.hasOwnCanvas && rotation !== 0) {
                this.setRotation(rotation, container);
            }
            return container;
        }
        const { width, height } = this;
        if (!ignoreBorder && data.borderStyle.width > 0) {
            style.borderWidth = "".concat(data.borderStyle.width, "px");
            const horizontalRadius = data.borderStyle.horizontalCornerRadius;
            const verticalRadius = data.borderStyle.verticalCornerRadius;
            if (horizontalRadius > 0 || verticalRadius > 0) {
                const radius = "calc(".concat(horizontalRadius, "px * var(--total-scale-factor)) / calc(").concat(verticalRadius, "px * var(--total-scale-factor))");
                style.borderRadius = radius;
            } else if (this instanceof RadioButtonWidgetAnnotationElement) {
                const radius = "calc(".concat(width, "px * var(--total-scale-factor)) / calc(").concat(height, "px * var(--total-scale-factor))");
                style.borderRadius = radius;
            }
            switch(data.borderStyle.style){
                case AnnotationBorderStyleType.SOLID:
                    style.borderStyle = "solid";
                    break;
                case AnnotationBorderStyleType.DASHED:
                    style.borderStyle = "dashed";
                    break;
                case AnnotationBorderStyleType.BEVELED:
                    warn("Unimplemented border style: beveled");
                    break;
                case AnnotationBorderStyleType.INSET:
                    warn("Unimplemented border style: inset");
                    break;
                case AnnotationBorderStyleType.UNDERLINE:
                    style.borderBottomStyle = "solid";
                    break;
                default:
                    break;
            }
            const borderColor = data.borderColor || null;
            if (borderColor) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasBorder, true);
                style.borderColor = Util.makeHexColor(borderColor[0] | 0, borderColor[1] | 0, borderColor[2] | 0);
            } else {
                style.borderWidth = 0;
            }
        }
        const rect = Util.normalizeRect([
            data.rect[0],
            page.view[3] - data.rect[1] + page.view[1],
            data.rect[2],
            page.view[3] - data.rect[3] + page.view[1]
        ]);
        const { pageWidth, pageHeight, pageX, pageY } = viewport.rawDims;
        style.left = "".concat(100 * (rect[0] - pageX) / pageWidth, "%");
        style.top = "".concat(100 * (rect[1] - pageY) / pageHeight, "%");
        const { rotation } = data;
        if (data.hasOwnCanvas || rotation === 0) {
            style.width = "".concat(100 * width / pageWidth, "%");
            style.height = "".concat(100 * height / pageHeight, "%");
        } else {
            this.setRotation(rotation, container);
        }
        return container;
    }
    setRotation(angle) {
        let container = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.container;
        if (!this.data.rect) {
            return;
        }
        const { pageWidth, pageHeight } = this.parent.viewport.rawDims;
        let { width, height } = this;
        if (angle % 180 !== 0) {
            [width, height] = [
                height,
                width
            ];
        }
        container.style.width = "".concat(100 * width / pageWidth, "%");
        container.style.height = "".concat(100 * height / pageHeight, "%");
        container.setAttribute("data-main-rotation", (360 - angle) % 360);
    }
    get _commonActions() {
        const setColor = (jsName, styleName, event)=>{
            const color = event.detail[jsName];
            const colorType = color[0];
            const colorArray = color.slice(1);
            event.target.style[styleName] = ColorConverters["".concat(colorType, "_HTML")](colorArray);
            this.annotationStorage.setValue(this.data.id, {
                [styleName]: ColorConverters["".concat(colorType, "_rgb")](colorArray)
            });
        };
        return shadow(this, "_commonActions", {
            display: (event)=>{
                const { display } = event.detail;
                const hidden = display % 2 === 1;
                this.container.style.visibility = hidden ? "hidden" : "visible";
                this.annotationStorage.setValue(this.data.id, {
                    noView: hidden,
                    noPrint: display === 1 || display === 2
                });
            },
            print: (event)=>{
                this.annotationStorage.setValue(this.data.id, {
                    noPrint: !event.detail.print
                });
            },
            hidden: (event)=>{
                const { hidden } = event.detail;
                this.container.style.visibility = hidden ? "hidden" : "visible";
                this.annotationStorage.setValue(this.data.id, {
                    noPrint: hidden,
                    noView: hidden
                });
            },
            focus: (event)=>{
                setTimeout(()=>event.target.focus({
                        preventScroll: false
                    }), 0);
            },
            userName: (event)=>{
                event.target.title = event.detail.userName;
            },
            readonly: (event)=>{
                event.target.disabled = event.detail.readonly;
            },
            required: (event)=>{
                this._setRequired(event.target, event.detail.required);
            },
            bgColor: (event)=>{
                setColor("bgColor", "backgroundColor", event);
            },
            fillColor: (event)=>{
                setColor("fillColor", "backgroundColor", event);
            },
            fgColor: (event)=>{
                setColor("fgColor", "color", event);
            },
            textColor: (event)=>{
                setColor("textColor", "color", event);
            },
            borderColor: (event)=>{
                setColor("borderColor", "borderColor", event);
            },
            strokeColor: (event)=>{
                setColor("strokeColor", "borderColor", event);
            },
            rotation: (event)=>{
                const angle = event.detail.rotation;
                this.setRotation(angle);
                this.annotationStorage.setValue(this.data.id, {
                    rotation: angle
                });
            }
        });
    }
    _dispatchEventFromSandbox(actions, jsEvent) {
        const commonActions = this._commonActions;
        for (const name of Object.keys(jsEvent.detail)){
            const action = actions[name] || commonActions[name];
            action === null || action === void 0 ? void 0 : action(jsEvent);
        }
    }
    _setDefaultPropertiesFromJS(element) {
        if (!this.enableScripting) {
            return;
        }
        const storedData = this.annotationStorage.getRawValue(this.data.id);
        if (!storedData) {
            return;
        }
        const commonActions = this._commonActions;
        for (const [actionName, detail] of Object.entries(storedData)){
            const action = commonActions[actionName];
            if (action) {
                const eventProxy = {
                    detail: {
                        [actionName]: detail
                    },
                    target: element
                };
                action(eventProxy);
                delete storedData[actionName];
            }
        }
    }
    _createQuadrilaterals() {
        if (!this.container) {
            return;
        }
        const { quadPoints } = this.data;
        if (!quadPoints) {
            return;
        }
        const [rectBlX, rectBlY, rectTrX, rectTrY] = this.data.rect.map((x)=>Math.fround(x));
        if (quadPoints.length === 8) {
            const [trX, trY, blX, blY] = quadPoints.subarray(2, 6);
            if (rectTrX === trX && rectTrY === trY && rectBlX === blX && rectBlY === blY) {
                return;
            }
        }
        const { style } = this.container;
        let svgBuffer;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasBorder)) {
            const { borderColor, borderWidth } = style;
            style.borderWidth = 0;
            svgBuffer = [
                "url('data:image/svg+xml;utf8,",
                '<svg xmlns="http://www.w3.org/2000/svg"',
                ' preserveAspectRatio="none" viewBox="0 0 1 1">',
                '<g fill="transparent" stroke="'.concat(borderColor, '" stroke-width="').concat(borderWidth, '">')
            ];
            this.container.classList.add("hasBorder");
        }
        const width = rectTrX - rectBlX;
        const height = rectTrY - rectBlY;
        const { svgFactory } = this;
        const svg = svgFactory.createElement("svg");
        svg.classList.add("quadrilateralsContainer");
        svg.setAttribute("width", 0);
        svg.setAttribute("height", 0);
        const defs = svgFactory.createElement("defs");
        svg.append(defs);
        const clipPath = svgFactory.createElement("clipPath");
        const id = "clippath_".concat(this.data.id);
        clipPath.setAttribute("id", id);
        clipPath.setAttribute("clipPathUnits", "objectBoundingBox");
        defs.append(clipPath);
        for(let i = 2, ii = quadPoints.length; i < ii; i += 8){
            const trX = quadPoints[i];
            const trY = quadPoints[i + 1];
            const blX = quadPoints[i + 2];
            const blY = quadPoints[i + 3];
            const rect = svgFactory.createElement("rect");
            const x = (blX - rectBlX) / width;
            const y = (rectTrY - trY) / height;
            const rectWidth = (trX - blX) / width;
            const rectHeight = (trY - blY) / height;
            rect.setAttribute("x", x);
            rect.setAttribute("y", y);
            rect.setAttribute("width", rectWidth);
            rect.setAttribute("height", rectHeight);
            clipPath.append(rect);
            svgBuffer === null || svgBuffer === void 0 ? void 0 : svgBuffer.push('<rect vector-effect="non-scaling-stroke" x="'.concat(x, '" y="').concat(y, '" width="').concat(rectWidth, '" height="').concat(rectHeight, '"/>'));
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasBorder)) {
            svgBuffer.push("</g></svg>')");
            style.backgroundImage = svgBuffer.join("");
        }
        this.container.append(svg);
        this.container.style.clipPath = "url(#".concat(id, ")");
    }
    _createPopup() {
        const { data } = this;
        const popup = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _popupElement, new PopupAnnotationElement({
            data: {
                color: data.color,
                titleObj: data.titleObj,
                modificationDate: data.modificationDate,
                contentsObj: data.contentsObj,
                richText: data.richText,
                parentRect: data.rect,
                borderStyle: 0,
                id: "popup_".concat(data.id),
                rotation: data.rotation
            },
            parent: this.parent,
            elements: [
                this
            ]
        }));
        this.parent.div.append(popup.render());
    }
    render() {
        unreachable("Abstract method `AnnotationElement.render` called");
    }
    _getElementsByName(name) {
        let skipId = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
        const fields = [];
        if (this._fieldObjects) {
            const fieldObj = this._fieldObjects[name];
            if (fieldObj) {
                for (const { page, id, exportValues } of fieldObj){
                    if (page === -1) {
                        continue;
                    }
                    if (id === skipId) {
                        continue;
                    }
                    const exportValue = typeof exportValues === "string" ? exportValues : null;
                    const domElement = document.querySelector('[data-element-id="'.concat(id, '"]'));
                    if (domElement && !GetElementsByNameSet.has(domElement)) {
                        warn("_getElementsByName - element not allowed: ".concat(id));
                        continue;
                    }
                    fields.push({
                        id,
                        exportValue,
                        domElement
                    });
                }
            }
            return fields;
        }
        for (const domElement of document.getElementsByName(name)){
            const { exportValue } = domElement;
            const id = domElement.getAttribute("data-element-id");
            if (id === skipId) {
                continue;
            }
            if (!GetElementsByNameSet.has(domElement)) {
                continue;
            }
            fields.push({
                id,
                exportValue,
                domElement
            });
        }
        return fields;
    }
    show() {
        var _this_popup;
        if (this.container) {
            this.container.hidden = false;
        }
        (_this_popup = this.popup) === null || _this_popup === void 0 ? void 0 : _this_popup.maybeShow();
    }
    hide() {
        var _this_popup;
        if (this.container) {
            this.container.hidden = true;
        }
        (_this_popup = this.popup) === null || _this_popup === void 0 ? void 0 : _this_popup.forceHide();
    }
    getElementsToTriggerPopup() {
        return this.container;
    }
    addHighlightArea() {
        const triggers = this.getElementsToTriggerPopup();
        if (Array.isArray(triggers)) {
            for (const element of triggers){
                element.classList.add("highlightArea");
            }
        } else {
            triggers.classList.add("highlightArea");
        }
    }
    _editOnDoubleClick() {
        if (!this._isEditable) {
            return;
        }
        const { annotationEditorType: mode, data: { id: editId } } = this;
        this.container.addEventListener("dblclick", ()=>{
            var _this_linkService_eventBus;
            (_this_linkService_eventBus = this.linkService.eventBus) === null || _this_linkService_eventBus === void 0 ? void 0 : _this_linkService_eventBus.dispatch("switchannotationeditormode", {
                source: this,
                mode,
                editId
            });
        });
    }
    get width() {
        return this.data.rect[2] - this.data.rect[0];
    }
    get height() {
        return this.data.rect[3] - this.data.rect[1];
    }
    constructor(parameters, { isRenderable = false, ignoreBorder = false, createQuadrilaterals = false } = {}){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setRectEdited);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updates, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasBorder, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _popupElement, {
            writable: true,
            value: null
        });
        this.isRenderable = isRenderable;
        this.data = parameters.data;
        this.layer = parameters.layer;
        this.linkService = parameters.linkService;
        this.downloadManager = parameters.downloadManager;
        this.imageResourcesPath = parameters.imageResourcesPath;
        this.renderForms = parameters.renderForms;
        this.svgFactory = parameters.svgFactory;
        this.annotationStorage = parameters.annotationStorage;
        this.enableScripting = parameters.enableScripting;
        this.hasJSActions = parameters.hasJSActions;
        this._fieldObjects = parameters.fieldObjects;
        this.parent = parameters.parent;
        if (isRenderable) {
            this.container = this._createContainer(ignoreBorder);
        }
        if (createQuadrilaterals) {
            this._createQuadrilaterals();
        }
    }
}
function setRectEdited(rect) {
    const { container: { style }, data: { rect: currentRect, rotation }, parent: { viewport: { rawDims: { pageWidth, pageHeight, pageX, pageY } } } } = this;
    currentRect === null || currentRect === void 0 ? void 0 : currentRect.splice(0, 4, ...rect);
    style.left = "".concat(100 * (rect[0] - pageX) / pageWidth, "%");
    style.top = "".concat(100 * (pageHeight - rect[3] + pageY) / pageHeight, "%");
    if (rotation === 0) {
        style.width = "".concat(100 * (rect[2] - rect[0]) / pageWidth, "%");
        style.height = "".concat(100 * (rect[3] - rect[1]) / pageHeight, "%");
    } else {
        this.setRotation(rotation);
    }
}
var _setInternalLink = /*#__PURE__*/ new WeakSet(), _bindAttachment = /*#__PURE__*/ new WeakSet(), _bindSetOCGState = /*#__PURE__*/ new WeakSet();
class LinkAnnotationElement extends AnnotationElement {
    render() {
        const { data, linkService } = this;
        const link = document.createElement("a");
        link.setAttribute("data-element-id", data.id);
        let isBound = false;
        if (data.url) {
            linkService.addLinkAttributes(link, data.url, data.newWindow);
            isBound = true;
        } else if (data.action) {
            this._bindNamedAction(link, data.action);
            isBound = true;
        } else if (data.attachment) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bindAttachment, bindAttachment).call(this, link, data.attachment, data.attachmentDest);
            isBound = true;
        } else if (data.setOCGState) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bindSetOCGState, bindSetOCGState).call(this, link, data.setOCGState);
            isBound = true;
        } else if (data.dest) {
            this._bindLink(link, data.dest);
            isBound = true;
        } else {
            if (data.actions && (data.actions.Action || data.actions["Mouse Up"] || data.actions["Mouse Down"]) && this.enableScripting && this.hasJSActions) {
                this._bindJSAction(link, data);
                isBound = true;
            }
            if (data.resetForm) {
                this._bindResetFormAction(link, data.resetForm);
                isBound = true;
            } else if (this.isTooltipOnly && !isBound) {
                this._bindLink(link, "");
                isBound = true;
            }
        }
        this.container.classList.add("linkAnnotation");
        if (isBound) {
            this.container.append(link);
        }
        return this.container;
    }
    _bindLink(link, destination) {
        link.href = this.linkService.getDestinationHash(destination);
        link.onclick = ()=>{
            if (destination) {
                this.linkService.goToDestination(destination);
            }
            return false;
        };
        if (destination || destination === "") {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setInternalLink, setInternalLink).call(this);
        }
    }
    _bindNamedAction(link, action) {
        link.href = this.linkService.getAnchorUrl("");
        link.onclick = ()=>{
            this.linkService.executeNamedAction(action);
            return false;
        };
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setInternalLink, setInternalLink).call(this);
    }
    _bindJSAction(link, data) {
        link.href = this.linkService.getAnchorUrl("");
        const map = new Map([
            [
                "Action",
                "onclick"
            ],
            [
                "Mouse Up",
                "onmouseup"
            ],
            [
                "Mouse Down",
                "onmousedown"
            ]
        ]);
        for (const name of Object.keys(data.actions)){
            const jsName = map.get(name);
            if (!jsName) {
                continue;
            }
            link[jsName] = ()=>{
                var _this_linkService_eventBus;
                (_this_linkService_eventBus = this.linkService.eventBus) === null || _this_linkService_eventBus === void 0 ? void 0 : _this_linkService_eventBus.dispatch("dispatcheventinsandbox", {
                    source: this,
                    detail: {
                        id: data.id,
                        name
                    }
                });
                return false;
            };
        }
        if (!link.onclick) {
            link.onclick = ()=>false;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setInternalLink, setInternalLink).call(this);
    }
    _bindResetFormAction(link, resetForm) {
        const otherClickAction = link.onclick;
        if (!otherClickAction) {
            link.href = this.linkService.getAnchorUrl("");
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setInternalLink, setInternalLink).call(this);
        if (!this._fieldObjects) {
            warn('_bindResetFormAction - "resetForm" action not supported, ' + "ensure that the `fieldObjects` parameter is provided.");
            if (!otherClickAction) {
                link.onclick = ()=>false;
            }
            return;
        }
        link.onclick = ()=>{
            otherClickAction === null || otherClickAction === void 0 ? void 0 : otherClickAction();
            const { fields: resetFormFields, refs: resetFormRefs, include } = resetForm;
            const allFields = [];
            if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {
                const fieldIds = new Set(resetFormRefs);
                for (const fieldName of resetFormFields){
                    const fields = this._fieldObjects[fieldName] || [];
                    for (const { id } of fields){
                        fieldIds.add(id);
                    }
                }
                for (const fields of Object.values(this._fieldObjects)){
                    for (const field of fields){
                        if (fieldIds.has(field.id) === include) {
                            allFields.push(field);
                        }
                    }
                }
            } else {
                for (const fields of Object.values(this._fieldObjects)){
                    allFields.push(...fields);
                }
            }
            const storage = this.annotationStorage;
            const allIds = [];
            for (const field of allFields){
                const { id } = field;
                allIds.push(id);
                switch(field.type){
                    case "text":
                        {
                            const value = field.defaultValue || "";
                            storage.setValue(id, {
                                value
                            });
                            break;
                        }
                    case "checkbox":
                    case "radiobutton":
                        {
                            const value = field.defaultValue === field.exportValues;
                            storage.setValue(id, {
                                value
                            });
                            break;
                        }
                    case "combobox":
                    case "listbox":
                        {
                            const value = field.defaultValue || "";
                            storage.setValue(id, {
                                value
                            });
                            break;
                        }
                    default:
                        continue;
                }
                const domElement = document.querySelector('[data-element-id="'.concat(id, '"]'));
                if (!domElement) {
                    continue;
                } else if (!GetElementsByNameSet.has(domElement)) {
                    warn("_bindResetFormAction - element not allowed: ".concat(id));
                    continue;
                }
                domElement.dispatchEvent(new Event("resetform"));
            }
            if (this.enableScripting) {
                var _this_linkService_eventBus;
                (_this_linkService_eventBus = this.linkService.eventBus) === null || _this_linkService_eventBus === void 0 ? void 0 : _this_linkService_eventBus.dispatch("dispatcheventinsandbox", {
                    source: this,
                    detail: {
                        id: "app",
                        ids: allIds,
                        name: "ResetForm"
                    }
                });
            }
            return false;
        };
    }
    constructor(parameters, options = null){
        super(parameters, {
            isRenderable: true,
            ignoreBorder: !!(options === null || options === void 0 ? void 0 : options.ignoreBorder),
            createQuadrilaterals: true
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setInternalLink), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bindAttachment), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bindSetOCGState);
        this.isTooltipOnly = parameters.data.isTooltipOnly;
    }
}
function setInternalLink() {
    this.container.setAttribute("data-internal-link", "");
}
function bindAttachment(link, attachment) {
    let dest = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
    link.href = this.linkService.getAnchorUrl("");
    if (attachment.description) {
        link.title = attachment.description;
    }
    link.onclick = ()=>{
        var _this_downloadManager;
        (_this_downloadManager = this.downloadManager) === null || _this_downloadManager === void 0 ? void 0 : _this_downloadManager.openOrDownloadData(attachment.content, attachment.filename, dest);
        return false;
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setInternalLink, setInternalLink).call(this);
}
function bindSetOCGState(link, action) {
    link.href = this.linkService.getAnchorUrl("");
    link.onclick = ()=>{
        this.linkService.executeSetOCGState(action);
        return false;
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setInternalLink, setInternalLink).call(this);
}
class TextAnnotationElement extends AnnotationElement {
    render() {
        this.container.classList.add("textAnnotation");
        const image = document.createElement("img");
        image.src = this.imageResourcesPath + "annotation-" + this.data.name.toLowerCase() + ".svg";
        image.setAttribute("data-l10n-id", "pdfjs-text-annotation-type");
        image.setAttribute("data-l10n-args", JSON.stringify({
            type: this.data.name
        }));
        if (!this.data.popupRef && this.hasPopupData) {
            this._createPopup();
        }
        this.container.append(image);
        return this.container;
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: true
        });
    }
}
class WidgetAnnotationElement extends AnnotationElement {
    render() {
        return this.container;
    }
    showElementAndHideCanvas(element) {
        if (this.data.hasOwnCanvas) {
            var _element_previousSibling;
            if (((_element_previousSibling = element.previousSibling) === null || _element_previousSibling === void 0 ? void 0 : _element_previousSibling.nodeName) === "CANVAS") {
                element.previousSibling.hidden = true;
            }
            element.hidden = false;
        }
    }
    _getKeyModifier(event) {
        return util_FeatureTest.platform.isMac ? event.metaKey : event.ctrlKey;
    }
    _setEventListener(element, elementData, baseName, eventName, valueGetter) {
        if (baseName.includes("mouse")) {
            element.addEventListener(baseName, (event)=>{
                var _this_linkService_eventBus;
                (_this_linkService_eventBus = this.linkService.eventBus) === null || _this_linkService_eventBus === void 0 ? void 0 : _this_linkService_eventBus.dispatch("dispatcheventinsandbox", {
                    source: this,
                    detail: {
                        id: this.data.id,
                        name: eventName,
                        value: valueGetter(event),
                        shift: event.shiftKey,
                        modifier: this._getKeyModifier(event)
                    }
                });
            });
        } else {
            element.addEventListener(baseName, (event)=>{
                var _this_linkService_eventBus;
                if (baseName === "blur") {
                    if (!elementData.focused || !event.relatedTarget) {
                        return;
                    }
                    elementData.focused = false;
                } else if (baseName === "focus") {
                    if (elementData.focused) {
                        return;
                    }
                    elementData.focused = true;
                }
                if (!valueGetter) {
                    return;
                }
                (_this_linkService_eventBus = this.linkService.eventBus) === null || _this_linkService_eventBus === void 0 ? void 0 : _this_linkService_eventBus.dispatch("dispatcheventinsandbox", {
                    source: this,
                    detail: {
                        id: this.data.id,
                        name: eventName,
                        value: valueGetter(event)
                    }
                });
            });
        }
    }
    _setEventListeners(element, elementData, names, getter) {
        for (const [baseName, eventName] of names){
            var _this_data_actions;
            if (eventName === "Action" || ((_this_data_actions = this.data.actions) === null || _this_data_actions === void 0 ? void 0 : _this_data_actions[eventName])) {
                var _this_data_actions1, _this_data_actions2;
                if (eventName === "Focus" || eventName === "Blur") {
                    elementData || (elementData = {
                        focused: false
                    });
                }
                this._setEventListener(element, elementData, baseName, eventName, getter);
                if (eventName === "Focus" && !((_this_data_actions1 = this.data.actions) === null || _this_data_actions1 === void 0 ? void 0 : _this_data_actions1.Blur)) {
                    this._setEventListener(element, elementData, "blur", "Blur", null);
                } else if (eventName === "Blur" && !((_this_data_actions2 = this.data.actions) === null || _this_data_actions2 === void 0 ? void 0 : _this_data_actions2.Focus)) {
                    this._setEventListener(element, elementData, "focus", "Focus", null);
                }
            }
        }
    }
    _setBackgroundColor(element) {
        const color = this.data.backgroundColor || null;
        element.style.backgroundColor = color === null ? "transparent" : Util.makeHexColor(color[0], color[1], color[2]);
    }
    _setTextStyle(element) {
        const TEXT_ALIGNMENT = [
            "left",
            "center",
            "right"
        ];
        const { fontColor } = this.data.defaultAppearanceData;
        const fontSize = this.data.defaultAppearanceData.fontSize || annotation_layer_DEFAULT_FONT_SIZE;
        const style = element.style;
        let computedFontSize;
        const BORDER_SIZE = 2;
        const roundToOneDecimal = (x)=>Math.round(10 * x) / 10;
        if (this.data.multiLine) {
            const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);
            const numberOfLines = Math.round(height / (LINE_FACTOR * fontSize)) || 1;
            const lineHeight = height / numberOfLines;
            computedFontSize = Math.min(fontSize, roundToOneDecimal(lineHeight / LINE_FACTOR));
        } else {
            const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);
            computedFontSize = Math.min(fontSize, roundToOneDecimal(height / LINE_FACTOR));
        }
        style.fontSize = "calc(".concat(computedFontSize, "px * var(--total-scale-factor))");
        style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);
        if (this.data.textAlignment !== null) {
            style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];
        }
    }
    _setRequired(element, isRequired) {
        if (isRequired) {
            element.setAttribute("required", true);
        } else {
            element.removeAttribute("required");
        }
        element.setAttribute("aria-required", isRequired);
    }
}
class TextWidgetAnnotationElement extends WidgetAnnotationElement {
    setPropertyOnSiblings(base, key, value, keyInStorage) {
        const storage = this.annotationStorage;
        for (const element of this._getElementsByName(base.name, base.id)){
            if (element.domElement) {
                element.domElement[key] = value;
            }
            storage.setValue(element.id, {
                [keyInStorage]: value
            });
        }
    }
    render() {
        const storage = this.annotationStorage;
        const id = this.data.id;
        this.container.classList.add("textWidgetAnnotation");
        let element = null;
        if (this.renderForms) {
            var _this_data_textContent;
            const storedData = storage.getValue(id, {
                value: this.data.fieldValue
            });
            let textContent = storedData.value || "";
            const maxLen = storage.getValue(id, {
                charLimit: this.data.maxLen
            }).charLimit;
            if (maxLen && textContent.length > maxLen) {
                textContent = textContent.slice(0, maxLen);
            }
            let fieldFormattedValues = storedData.formattedValue || ((_this_data_textContent = this.data.textContent) === null || _this_data_textContent === void 0 ? void 0 : _this_data_textContent.join("\n")) || null;
            if (fieldFormattedValues && this.data.comb) {
                fieldFormattedValues = fieldFormattedValues.replaceAll(/\s+/g, "");
            }
            const elementData = {
                userValue: textContent,
                formattedValue: fieldFormattedValues,
                lastCommittedValue: null,
                commitKey: 1,
                focused: false
            };
            if (this.data.multiLine) {
                element = document.createElement("textarea");
                element.textContent = fieldFormattedValues !== null && fieldFormattedValues !== void 0 ? fieldFormattedValues : textContent;
                if (this.data.doNotScroll) {
                    element.style.overflowY = "hidden";
                }
            } else {
                element = document.createElement("input");
                element.type = this.data.password ? "password" : "text";
                element.setAttribute("value", fieldFormattedValues !== null && fieldFormattedValues !== void 0 ? fieldFormattedValues : textContent);
                if (this.data.doNotScroll) {
                    element.style.overflowX = "hidden";
                }
            }
            if (this.data.hasOwnCanvas) {
                element.hidden = true;
            }
            GetElementsByNameSet.add(element);
            element.setAttribute("data-element-id", id);
            element.disabled = this.data.readOnly;
            element.name = this.data.fieldName;
            element.tabIndex = DEFAULT_TAB_INDEX;
            this._setRequired(element, this.data.required);
            if (maxLen) {
                element.maxLength = maxLen;
            }
            element.addEventListener("input", (event)=>{
                storage.setValue(id, {
                    value: event.target.value
                });
                this.setPropertyOnSiblings(element, "value", event.target.value, "value");
                elementData.formattedValue = null;
            });
            element.addEventListener("resetform", (event)=>{
                var _this_data_defaultFieldValue;
                const defaultValue = (_this_data_defaultFieldValue = this.data.defaultFieldValue) !== null && _this_data_defaultFieldValue !== void 0 ? _this_data_defaultFieldValue : "";
                element.value = elementData.userValue = defaultValue;
                elementData.formattedValue = null;
            });
            let blurListener = (event)=>{
                const { formattedValue } = elementData;
                if (formattedValue !== null && formattedValue !== undefined) {
                    event.target.value = formattedValue;
                }
                event.target.scrollLeft = 0;
            };
            if (this.enableScripting && this.hasJSActions) {
                var _this_data_actions;
                element.addEventListener("focus", (event)=>{
                    var _this_data_actions;
                    if (elementData.focused) {
                        return;
                    }
                    const { target } = event;
                    if (elementData.userValue) {
                        target.value = elementData.userValue;
                    }
                    elementData.lastCommittedValue = target.value;
                    elementData.commitKey = 1;
                    if (!((_this_data_actions = this.data.actions) === null || _this_data_actions === void 0 ? void 0 : _this_data_actions.Focus)) {
                        elementData.focused = true;
                    }
                });
                element.addEventListener("updatefromsandbox", (jsEvent)=>{
                    this.showElementAndHideCanvas(jsEvent.target);
                    const actions = {
                        value (event) {
                            var _event_detail_value;
                            elementData.userValue = (_event_detail_value = event.detail.value) !== null && _event_detail_value !== void 0 ? _event_detail_value : "";
                            storage.setValue(id, {
                                value: elementData.userValue.toString()
                            });
                            event.target.value = elementData.userValue;
                        },
                        formattedValue (event) {
                            const { formattedValue } = event.detail;
                            elementData.formattedValue = formattedValue;
                            if (formattedValue !== null && formattedValue !== undefined && event.target !== document.activeElement) {
                                event.target.value = formattedValue;
                            }
                            storage.setValue(id, {
                                formattedValue
                            });
                        },
                        selRange (event) {
                            event.target.setSelectionRange(...event.detail.selRange);
                        },
                        charLimit: (event)=>{
                            var _this_linkService_eventBus;
                            const { charLimit } = event.detail;
                            const { target } = event;
                            if (charLimit === 0) {
                                target.removeAttribute("maxLength");
                                return;
                            }
                            target.setAttribute("maxLength", charLimit);
                            let value = elementData.userValue;
                            if (!value || value.length <= charLimit) {
                                return;
                            }
                            value = value.slice(0, charLimit);
                            target.value = elementData.userValue = value;
                            storage.setValue(id, {
                                value
                            });
                            (_this_linkService_eventBus = this.linkService.eventBus) === null || _this_linkService_eventBus === void 0 ? void 0 : _this_linkService_eventBus.dispatch("dispatcheventinsandbox", {
                                source: this,
                                detail: {
                                    id,
                                    name: "Keystroke",
                                    value,
                                    willCommit: true,
                                    commitKey: 1,
                                    selStart: target.selectionStart,
                                    selEnd: target.selectionEnd
                                }
                            });
                        }
                    };
                    this._dispatchEventFromSandbox(actions, jsEvent);
                });
                element.addEventListener("keydown", (event)=>{
                    var _this_linkService_eventBus;
                    elementData.commitKey = 1;
                    let commitKey = -1;
                    if (event.key === "Escape") {
                        commitKey = 0;
                    } else if (event.key === "Enter" && !this.data.multiLine) {
                        commitKey = 2;
                    } else if (event.key === "Tab") {
                        elementData.commitKey = 3;
                    }
                    if (commitKey === -1) {
                        return;
                    }
                    const { value } = event.target;
                    if (elementData.lastCommittedValue === value) {
                        return;
                    }
                    elementData.lastCommittedValue = value;
                    elementData.userValue = value;
                    (_this_linkService_eventBus = this.linkService.eventBus) === null || _this_linkService_eventBus === void 0 ? void 0 : _this_linkService_eventBus.dispatch("dispatcheventinsandbox", {
                        source: this,
                        detail: {
                            id,
                            name: "Keystroke",
                            value,
                            willCommit: true,
                            commitKey,
                            selStart: event.target.selectionStart,
                            selEnd: event.target.selectionEnd
                        }
                    });
                });
                const _blurListener = blurListener;
                blurListener = null;
                element.addEventListener("blur", (event)=>{
                    var _this_data_actions;
                    if (!elementData.focused || !event.relatedTarget) {
                        return;
                    }
                    if (!((_this_data_actions = this.data.actions) === null || _this_data_actions === void 0 ? void 0 : _this_data_actions.Blur)) {
                        elementData.focused = false;
                    }
                    const { value } = event.target;
                    elementData.userValue = value;
                    if (elementData.lastCommittedValue !== value) {
                        var _this_linkService_eventBus;
                        (_this_linkService_eventBus = this.linkService.eventBus) === null || _this_linkService_eventBus === void 0 ? void 0 : _this_linkService_eventBus.dispatch("dispatcheventinsandbox", {
                            source: this,
                            detail: {
                                id,
                                name: "Keystroke",
                                value,
                                willCommit: true,
                                commitKey: elementData.commitKey,
                                selStart: event.target.selectionStart,
                                selEnd: event.target.selectionEnd
                            }
                        });
                    }
                    _blurListener(event);
                });
                if ((_this_data_actions = this.data.actions) === null || _this_data_actions === void 0 ? void 0 : _this_data_actions.Keystroke) {
                    element.addEventListener("beforeinput", (event)=>{
                        var _this_linkService_eventBus;
                        elementData.lastCommittedValue = null;
                        const { data, target } = event;
                        const { value, selectionStart, selectionEnd } = target;
                        let selStart = selectionStart, selEnd = selectionEnd;
                        switch(event.inputType){
                            case "deleteWordBackward":
                                {
                                    const match = value.substring(0, selectionStart).match(/\w*[^\w]*$/);
                                    if (match) {
                                        selStart -= match[0].length;
                                    }
                                    break;
                                }
                            case "deleteWordForward":
                                {
                                    const match = value.substring(selectionStart).match(/^[^\w]*\w*/);
                                    if (match) {
                                        selEnd += match[0].length;
                                    }
                                    break;
                                }
                            case "deleteContentBackward":
                                if (selectionStart === selectionEnd) {
                                    selStart -= 1;
                                }
                                break;
                            case "deleteContentForward":
                                if (selectionStart === selectionEnd) {
                                    selEnd += 1;
                                }
                                break;
                        }
                        event.preventDefault();
                        (_this_linkService_eventBus = this.linkService.eventBus) === null || _this_linkService_eventBus === void 0 ? void 0 : _this_linkService_eventBus.dispatch("dispatcheventinsandbox", {
                            source: this,
                            detail: {
                                id,
                                name: "Keystroke",
                                value,
                                change: data || "",
                                willCommit: false,
                                selStart,
                                selEnd
                            }
                        });
                    });
                }
                this._setEventListeners(element, elementData, [
                    [
                        "focus",
                        "Focus"
                    ],
                    [
                        "blur",
                        "Blur"
                    ],
                    [
                        "mousedown",
                        "Mouse Down"
                    ],
                    [
                        "mouseenter",
                        "Mouse Enter"
                    ],
                    [
                        "mouseleave",
                        "Mouse Exit"
                    ],
                    [
                        "mouseup",
                        "Mouse Up"
                    ]
                ], (event)=>event.target.value);
            }
            if (blurListener) {
                element.addEventListener("blur", blurListener);
            }
            if (this.data.comb) {
                const fieldWidth = this.data.rect[2] - this.data.rect[0];
                const combWidth = fieldWidth / maxLen;
                element.classList.add("comb");
                element.style.letterSpacing = "calc(".concat(combWidth, "px * var(--total-scale-factor) - 1ch)");
            }
        } else {
            element = document.createElement("div");
            element.textContent = this.data.fieldValue;
            element.style.verticalAlign = "middle";
            element.style.display = "table-cell";
            if (this.data.hasOwnCanvas) {
                element.hidden = true;
            }
        }
        this._setTextStyle(element);
        this._setBackgroundColor(element);
        this._setDefaultPropertiesFromJS(element);
        this.container.append(element);
        return this.container;
    }
    constructor(parameters){
        const isRenderable = parameters.renderForms || parameters.data.hasOwnCanvas || !parameters.data.hasAppearance && !!parameters.data.fieldValue;
        super(parameters, {
            isRenderable
        });
    }
}
class SignatureWidgetAnnotationElement extends WidgetAnnotationElement {
    constructor(parameters){
        super(parameters, {
            isRenderable: !!parameters.data.hasOwnCanvas
        });
    }
}
class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {
    render() {
        const storage = this.annotationStorage;
        const data = this.data;
        const id = data.id;
        let value = storage.getValue(id, {
            value: data.exportValue === data.fieldValue
        }).value;
        if (typeof value === "string") {
            value = value !== "Off";
            storage.setValue(id, {
                value
            });
        }
        this.container.classList.add("buttonWidgetAnnotation", "checkBox");
        const element = document.createElement("input");
        GetElementsByNameSet.add(element);
        element.setAttribute("data-element-id", id);
        element.disabled = data.readOnly;
        this._setRequired(element, this.data.required);
        element.type = "checkbox";
        element.name = data.fieldName;
        if (value) {
            element.setAttribute("checked", true);
        }
        element.setAttribute("exportValue", data.exportValue);
        element.tabIndex = DEFAULT_TAB_INDEX;
        element.addEventListener("change", (event)=>{
            const { name, checked } = event.target;
            for (const checkbox of this._getElementsByName(name, id)){
                const curChecked = checked && checkbox.exportValue === data.exportValue;
                if (checkbox.domElement) {
                    checkbox.domElement.checked = curChecked;
                }
                storage.setValue(checkbox.id, {
                    value: curChecked
                });
            }
            storage.setValue(id, {
                value: checked
            });
        });
        element.addEventListener("resetform", (event)=>{
            const defaultValue = data.defaultFieldValue || "Off";
            event.target.checked = defaultValue === data.exportValue;
        });
        if (this.enableScripting && this.hasJSActions) {
            element.addEventListener("updatefromsandbox", (jsEvent)=>{
                const actions = {
                    value (event) {
                        event.target.checked = event.detail.value !== "Off";
                        storage.setValue(id, {
                            value: event.target.checked
                        });
                    }
                };
                this._dispatchEventFromSandbox(actions, jsEvent);
            });
            this._setEventListeners(element, null, [
                [
                    "change",
                    "Validate"
                ],
                [
                    "change",
                    "Action"
                ],
                [
                    "focus",
                    "Focus"
                ],
                [
                    "blur",
                    "Blur"
                ],
                [
                    "mousedown",
                    "Mouse Down"
                ],
                [
                    "mouseenter",
                    "Mouse Enter"
                ],
                [
                    "mouseleave",
                    "Mouse Exit"
                ],
                [
                    "mouseup",
                    "Mouse Up"
                ]
            ], (event)=>event.target.checked);
        }
        this._setBackgroundColor(element);
        this._setDefaultPropertiesFromJS(element);
        this.container.append(element);
        return this.container;
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: parameters.renderForms
        });
    }
}
class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {
    render() {
        this.container.classList.add("buttonWidgetAnnotation", "radioButton");
        const storage = this.annotationStorage;
        const data = this.data;
        const id = data.id;
        let value = storage.getValue(id, {
            value: data.fieldValue === data.buttonValue
        }).value;
        if (typeof value === "string") {
            value = value !== data.buttonValue;
            storage.setValue(id, {
                value
            });
        }
        if (value) {
            for (const radio of this._getElementsByName(data.fieldName, id)){
                storage.setValue(radio.id, {
                    value: false
                });
            }
        }
        const element = document.createElement("input");
        GetElementsByNameSet.add(element);
        element.setAttribute("data-element-id", id);
        element.disabled = data.readOnly;
        this._setRequired(element, this.data.required);
        element.type = "radio";
        element.name = data.fieldName;
        if (value) {
            element.setAttribute("checked", true);
        }
        element.tabIndex = DEFAULT_TAB_INDEX;
        element.addEventListener("change", (event)=>{
            const { name, checked } = event.target;
            for (const radio of this._getElementsByName(name, id)){
                storage.setValue(radio.id, {
                    value: false
                });
            }
            storage.setValue(id, {
                value: checked
            });
        });
        element.addEventListener("resetform", (event)=>{
            const defaultValue = data.defaultFieldValue;
            event.target.checked = defaultValue !== null && defaultValue !== undefined && defaultValue === data.buttonValue;
        });
        if (this.enableScripting && this.hasJSActions) {
            const pdfButtonValue = data.buttonValue;
            element.addEventListener("updatefromsandbox", (jsEvent)=>{
                const actions = {
                    value: (event)=>{
                        const checked = pdfButtonValue === event.detail.value;
                        for (const radio of this._getElementsByName(event.target.name)){
                            const curChecked = checked && radio.id === id;
                            if (radio.domElement) {
                                radio.domElement.checked = curChecked;
                            }
                            storage.setValue(radio.id, {
                                value: curChecked
                            });
                        }
                    }
                };
                this._dispatchEventFromSandbox(actions, jsEvent);
            });
            this._setEventListeners(element, null, [
                [
                    "change",
                    "Validate"
                ],
                [
                    "change",
                    "Action"
                ],
                [
                    "focus",
                    "Focus"
                ],
                [
                    "blur",
                    "Blur"
                ],
                [
                    "mousedown",
                    "Mouse Down"
                ],
                [
                    "mouseenter",
                    "Mouse Enter"
                ],
                [
                    "mouseleave",
                    "Mouse Exit"
                ],
                [
                    "mouseup",
                    "Mouse Up"
                ]
            ], (event)=>event.target.checked);
        }
        this._setBackgroundColor(element);
        this._setDefaultPropertiesFromJS(element);
        this.container.append(element);
        return this.container;
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: parameters.renderForms
        });
    }
}
class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {
    render() {
        const container = super.render();
        container.classList.add("buttonWidgetAnnotation", "pushButton");
        const linkElement = container.lastChild;
        if (this.enableScripting && this.hasJSActions && linkElement) {
            this._setDefaultPropertiesFromJS(linkElement);
            linkElement.addEventListener("updatefromsandbox", (jsEvent)=>{
                this._dispatchEventFromSandbox({}, jsEvent);
            });
        }
        return container;
    }
    constructor(parameters){
        super(parameters, {
            ignoreBorder: parameters.data.hasAppearance
        });
    }
}
class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {
    render() {
        this.container.classList.add("choiceWidgetAnnotation");
        const storage = this.annotationStorage;
        const id = this.data.id;
        const storedData = storage.getValue(id, {
            value: this.data.fieldValue
        });
        const selectElement = document.createElement("select");
        GetElementsByNameSet.add(selectElement);
        selectElement.setAttribute("data-element-id", id);
        selectElement.disabled = this.data.readOnly;
        this._setRequired(selectElement, this.data.required);
        selectElement.name = this.data.fieldName;
        selectElement.tabIndex = DEFAULT_TAB_INDEX;
        let addAnEmptyEntry = this.data.combo && this.data.options.length > 0;
        if (!this.data.combo) {
            selectElement.size = this.data.options.length;
            if (this.data.multiSelect) {
                selectElement.multiple = true;
            }
        }
        selectElement.addEventListener("resetform", (event)=>{
            const defaultValue = this.data.defaultFieldValue;
            for (const option of selectElement.options){
                option.selected = option.value === defaultValue;
            }
        });
        for (const option of this.data.options){
            const optionElement = document.createElement("option");
            optionElement.textContent = option.displayValue;
            optionElement.value = option.exportValue;
            if (storedData.value.includes(option.exportValue)) {
                optionElement.setAttribute("selected", true);
                addAnEmptyEntry = false;
            }
            selectElement.append(optionElement);
        }
        let removeEmptyEntry = null;
        if (addAnEmptyEntry) {
            const noneOptionElement = document.createElement("option");
            noneOptionElement.value = " ";
            noneOptionElement.setAttribute("hidden", true);
            noneOptionElement.setAttribute("selected", true);
            selectElement.prepend(noneOptionElement);
            removeEmptyEntry = ()=>{
                noneOptionElement.remove();
                selectElement.removeEventListener("input", removeEmptyEntry);
                removeEmptyEntry = null;
            };
            selectElement.addEventListener("input", removeEmptyEntry);
        }
        const getValue = (isExport)=>{
            const name = isExport ? "value" : "textContent";
            const { options, multiple } = selectElement;
            if (!multiple) {
                return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];
            }
            return Array.prototype.filter.call(options, (option)=>option.selected).map((option)=>option[name]);
        };
        let selectedValues = getValue(false);
        const getItems = (event)=>{
            const options = event.target.options;
            return Array.prototype.map.call(options, (option)=>({
                    displayValue: option.textContent,
                    exportValue: option.value
                }));
        };
        if (this.enableScripting && this.hasJSActions) {
            selectElement.addEventListener("updatefromsandbox", (jsEvent)=>{
                const actions = {
                    value (event) {
                        removeEmptyEntry === null || removeEmptyEntry === void 0 ? void 0 : removeEmptyEntry();
                        const value = event.detail.value;
                        const values = new Set(Array.isArray(value) ? value : [
                            value
                        ]);
                        for (const option of selectElement.options){
                            option.selected = values.has(option.value);
                        }
                        storage.setValue(id, {
                            value: getValue(true)
                        });
                        selectedValues = getValue(false);
                    },
                    multipleSelection (event) {
                        selectElement.multiple = true;
                    },
                    remove (event) {
                        const options = selectElement.options;
                        const index = event.detail.remove;
                        options[index].selected = false;
                        selectElement.remove(index);
                        if (options.length > 0) {
                            const i = Array.prototype.findIndex.call(options, (option)=>option.selected);
                            if (i === -1) {
                                options[0].selected = true;
                            }
                        }
                        storage.setValue(id, {
                            value: getValue(true),
                            items: getItems(event)
                        });
                        selectedValues = getValue(false);
                    },
                    clear (event) {
                        while(selectElement.length !== 0){
                            selectElement.remove(0);
                        }
                        storage.setValue(id, {
                            value: null,
                            items: []
                        });
                        selectedValues = getValue(false);
                    },
                    insert (event) {
                        const { index, displayValue, exportValue } = event.detail.insert;
                        const selectChild = selectElement.children[index];
                        const optionElement = document.createElement("option");
                        optionElement.textContent = displayValue;
                        optionElement.value = exportValue;
                        if (selectChild) {
                            selectChild.before(optionElement);
                        } else {
                            selectElement.append(optionElement);
                        }
                        storage.setValue(id, {
                            value: getValue(true),
                            items: getItems(event)
                        });
                        selectedValues = getValue(false);
                    },
                    items (event) {
                        const { items } = event.detail;
                        while(selectElement.length !== 0){
                            selectElement.remove(0);
                        }
                        for (const item of items){
                            const { displayValue, exportValue } = item;
                            const optionElement = document.createElement("option");
                            optionElement.textContent = displayValue;
                            optionElement.value = exportValue;
                            selectElement.append(optionElement);
                        }
                        if (selectElement.options.length > 0) {
                            selectElement.options[0].selected = true;
                        }
                        storage.setValue(id, {
                            value: getValue(true),
                            items: getItems(event)
                        });
                        selectedValues = getValue(false);
                    },
                    indices (event) {
                        const indices = new Set(event.detail.indices);
                        for (const option of event.target.options){
                            option.selected = indices.has(option.index);
                        }
                        storage.setValue(id, {
                            value: getValue(true)
                        });
                        selectedValues = getValue(false);
                    },
                    editable (event) {
                        event.target.disabled = !event.detail.editable;
                    }
                };
                this._dispatchEventFromSandbox(actions, jsEvent);
            });
            selectElement.addEventListener("input", (event)=>{
                var _this_linkService_eventBus;
                const exportValue = getValue(true);
                const change = getValue(false);
                storage.setValue(id, {
                    value: exportValue
                });
                event.preventDefault();
                (_this_linkService_eventBus = this.linkService.eventBus) === null || _this_linkService_eventBus === void 0 ? void 0 : _this_linkService_eventBus.dispatch("dispatcheventinsandbox", {
                    source: this,
                    detail: {
                        id,
                        name: "Keystroke",
                        value: selectedValues,
                        change,
                        changeEx: exportValue,
                        willCommit: false,
                        commitKey: 1,
                        keyDown: false
                    }
                });
            });
            this._setEventListeners(selectElement, null, [
                [
                    "focus",
                    "Focus"
                ],
                [
                    "blur",
                    "Blur"
                ],
                [
                    "mousedown",
                    "Mouse Down"
                ],
                [
                    "mouseenter",
                    "Mouse Enter"
                ],
                [
                    "mouseleave",
                    "Mouse Exit"
                ],
                [
                    "mouseup",
                    "Mouse Up"
                ],
                [
                    "input",
                    "Action"
                ],
                [
                    "input",
                    "Validate"
                ]
            ], (event)=>event.target.value);
        } else {
            selectElement.addEventListener("input", function(event) {
                storage.setValue(id, {
                    value: getValue(true)
                });
            });
        }
        if (this.data.combo) {
            this._setTextStyle(selectElement);
        } else {}
        this._setBackgroundColor(selectElement);
        this._setDefaultPropertiesFromJS(selectElement);
        this.container.append(selectElement);
        return this.container;
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: parameters.renderForms
        });
    }
}
class PopupAnnotationElement extends AnnotationElement {
    render() {
        this.container.classList.add("popupAnnotation");
        const popup = this.popup = new PopupElement({
            container: this.container,
            color: this.data.color,
            titleObj: this.data.titleObj,
            modificationDate: this.data.modificationDate,
            contentsObj: this.data.contentsObj,
            richText: this.data.richText,
            rect: this.data.rect,
            parentRect: this.data.parentRect || null,
            parent: this.parent,
            elements: this.elements,
            open: this.data.open
        });
        const elementIds = [];
        for (const element of this.elements){
            element.popup = popup;
            element.container.ariaHasPopup = "dialog";
            elementIds.push(element.data.id);
            element.addHighlightArea();
        }
        this.container.setAttribute("aria-controls", elementIds.map((id)=>"".concat(AnnotationPrefix).concat(id)).join(","));
        return this.container;
    }
    constructor(parameters){
        const { data, elements } = parameters;
        super(parameters, {
            isRenderable: AnnotationElement._hasPopupData(data)
        });
        this.elements = elements;
        this.popup = null;
    }
}
var _boundKeyDown = /*#__PURE__*/ new WeakMap(), _boundHide = /*#__PURE__*/ new WeakMap(), _boundShow = /*#__PURE__*/ new WeakMap(), _boundToggle = /*#__PURE__*/ new WeakMap(), _color = /*#__PURE__*/ new WeakMap(), _container3 = /*#__PURE__*/ new WeakMap(), _contentsObj = /*#__PURE__*/ new WeakMap(), _dateObj = /*#__PURE__*/ new WeakMap(), _elements = /*#__PURE__*/ new WeakMap(), _parent = /*#__PURE__*/ new WeakMap(), _parentRect = /*#__PURE__*/ new WeakMap(), _pinned = /*#__PURE__*/ new WeakMap(), _popup = /*#__PURE__*/ new WeakMap(), _position1 = /*#__PURE__*/ new WeakMap(), _rect = /*#__PURE__*/ new WeakMap(), _richText = /*#__PURE__*/ new WeakMap(), _titleObj = /*#__PURE__*/ new WeakMap(), _updates1 = /*#__PURE__*/ new WeakMap(), _wasVisible = /*#__PURE__*/ new WeakMap(), _html = /*#__PURE__*/ new WeakMap(), _fontSize = /*#__PURE__*/ new WeakMap(), _fontColor = /*#__PURE__*/ new WeakMap(), _makePopupContent = /*#__PURE__*/ new WeakSet(), _keyDown = /*#__PURE__*/ new WeakSet(), _setPosition = /*#__PURE__*/ new WeakSet(), _toggle = /*#__PURE__*/ new WeakSet(), _show = /*#__PURE__*/ new WeakSet(), _hide = /*#__PURE__*/ new WeakSet();
class PopupElement {
    render() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _popup)) {
            return;
        }
        const popup = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _popup, document.createElement("div"));
        popup.className = "popup";
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _color)) {
            const baseColor = popup.style.outlineColor = Util.makeHexColor(...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _color));
            popup.style.backgroundColor = "color-mix(in srgb, ".concat(baseColor, " 30%, white)");
        }
        const header = document.createElement("span");
        header.className = "header";
        const title = document.createElement("h1");
        header.append(title);
        ({ dir: title.dir, str: title.textContent } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _titleObj));
        popup.append(header);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dateObj)) {
            const modificationDate = document.createElement("span");
            modificationDate.classList.add("popupDate");
            modificationDate.setAttribute("data-l10n-id", "pdfjs-annotation-date-time-string");
            modificationDate.setAttribute("data-l10n-args", JSON.stringify({
                dateObj: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dateObj).valueOf()
            }));
            header.append(modificationDate);
        }
        const html = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _html);
        if (html) {
            XfaLayer.render({
                xfaHtml: html,
                intent: "richText",
                div: popup
            });
            popup.lastChild.classList.add("richText", "popupContent");
        } else {
            const contents = this._formatContents((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _contentsObj));
            popup.append(contents);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).append(popup);
    }
    _formatContents(param) {
        let { str, dir } = param;
        const p = document.createElement("p");
        p.classList.add("popupContent");
        p.dir = dir;
        const lines = str.split(/(?:\r\n?|\n)/);
        for(let i = 0, ii = lines.length; i < ii; ++i){
            const line = lines[i];
            p.append(document.createTextNode(line));
            if (i < ii - 1) {
                p.append(document.createElement("br"));
            }
        }
        return p;
    }
    updateEdited(param) {
        let { rect, popupContent } = param;
        var _class_private_field_get;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updates1, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updates1) || {
            contentsObj: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _contentsObj),
            richText: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _richText)
        });
        if (rect) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position1, null);
        }
        if (popupContent) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _richText, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _makePopupContent, makePopupContent).call(this, popupContent));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _contentsObj, null);
        }
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _popup)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.remove();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _popup, null);
    }
    resetEdited() {
        var _class_private_field_get;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updates1)) {
            return;
        }
        ({ contentsObj: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_destructure$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _contentsObj).value, richText: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_destructure$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _richText).value } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updates1));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updates1, null);
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _popup)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.remove();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _popup, null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position1, null);
    }
    forceHide() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _wasVisible, this.isVisible);
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _wasVisible)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).hidden = true;
    }
    maybeShow() {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _wasVisible)) {
            return;
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _popup)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _show, show).call(this);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _wasVisible, false);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).hidden = false;
    }
    get isVisible() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).hidden === false;
    }
    constructor({ container, color, elements, titleObj, modificationDate, contentsObj, richText, parent, rect, parentRect, open }){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _html, {
            get: get_html,
            set: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontSize, {
            get: get_fontSize,
            set: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontColor, {
            get: get_fontColor,
            set: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _makePopupContent);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keyDown);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setPosition);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toggle);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _show);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hide);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boundKeyDown, {
            writable: true,
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keyDown, keyDown).bind(this)
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boundHide, {
            writable: true,
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hide, hide).bind(this)
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boundShow, {
            writable: true,
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _show, show).bind(this)
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boundToggle, {
            writable: true,
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toggle, toggle).bind(this)
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _color, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _contentsObj, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dateObj, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _elements, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parent, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentRect, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pinned, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _popup, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position1, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rect, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _richText, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _titleObj, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updates1, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _wasVisible, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3, container);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _titleObj, titleObj);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _contentsObj, contentsObj);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _richText, richText);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parent, parent);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _color, color);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rect, rect);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentRect, parentRect);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _elements, elements);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dateObj, PDFDateString.toDateObject(modificationDate));
        this.trigger = elements.flatMap((e)=>e.getElementsToTriggerPopup());
        for (const element of this.trigger){
            element.addEventListener("click", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boundToggle));
            element.addEventListener("mouseenter", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boundShow));
            element.addEventListener("mouseleave", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boundHide));
            element.classList.add("popupTriggerArea");
        }
        for (const element of elements){
            var _element_container;
            (_element_container = element.container) === null || _element_container === void 0 ? void 0 : _element_container.addEventListener("keydown", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boundKeyDown));
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).hidden = true;
        if (open) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toggle, toggle).call(this);
        }
    }
}
function get_html() {
    const richText = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _richText);
    const contentsObj = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _contentsObj);
    if ((richText === null || richText === void 0 ? void 0 : richText.str) && (!(contentsObj === null || contentsObj === void 0 ? void 0 : contentsObj.str) || contentsObj.str === richText.str)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _richText).html || null;
    }
    return null;
}
function get_fontSize() {
    var _class_private_field_get_attributes_style, _class_private_field_get_attributes, _class_private_field_get;
    return ((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _html)) === null || _class_private_field_get === void 0 ? void 0 : (_class_private_field_get_attributes = _class_private_field_get.attributes) === null || _class_private_field_get_attributes === void 0 ? void 0 : (_class_private_field_get_attributes_style = _class_private_field_get_attributes.style) === null || _class_private_field_get_attributes_style === void 0 ? void 0 : _class_private_field_get_attributes_style.fontSize) || 0;
}
function get_fontColor() {
    var _class_private_field_get_attributes_style, _class_private_field_get_attributes, _class_private_field_get;
    return ((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _html)) === null || _class_private_field_get === void 0 ? void 0 : (_class_private_field_get_attributes = _class_private_field_get.attributes) === null || _class_private_field_get_attributes === void 0 ? void 0 : (_class_private_field_get_attributes_style = _class_private_field_get_attributes.style) === null || _class_private_field_get_attributes_style === void 0 ? void 0 : _class_private_field_get_attributes_style.color) || null;
}
function makePopupContent(text) {
    const popupLines = [];
    const popupContent = {
        str: text,
        html: {
            name: "div",
            attributes: {
                dir: "auto"
            },
            children: [
                {
                    name: "p",
                    children: popupLines
                }
            ]
        }
    };
    const lineAttributes = {
        style: {
            color: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontColor),
            fontSize: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontSize) ? "calc(".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontSize), "px * var(--total-scale-factor))") : ""
        }
    };
    for (const line of text.split("\n")){
        popupLines.push({
            name: "span",
            value: line,
            attributes: lineAttributes
        });
    }
    return popupContent;
}
function keyDown(event) {
    if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {
        return;
    }
    if (event.key === "Enter" || event.key === "Escape" && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pinned)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toggle, toggle).call(this);
    }
}
function setPosition() {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position1) !== null) {
        return;
    }
    const { page: { view }, viewport: { rawDims: { pageWidth, pageHeight, pageX, pageY } } } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parent);
    let useParentRect = !!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentRect);
    let rect = useParentRect ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentRect) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rect);
    for (const element of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _elements)){
        if (!rect || Util.intersect(element.data.rect, rect) !== null) {
            rect = element.data.rect;
            useParentRect = true;
            break;
        }
    }
    const normalizedRect = Util.normalizeRect([
        rect[0],
        view[3] - rect[1] + view[1],
        rect[2],
        view[3] - rect[3] + view[1]
    ]);
    const HORIZONTAL_SPACE_AFTER_ANNOTATION = 5;
    const parentWidth = useParentRect ? rect[2] - rect[0] + HORIZONTAL_SPACE_AFTER_ANNOTATION : 0;
    const popupLeft = normalizedRect[0] + parentWidth;
    const popupTop = normalizedRect[1];
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position1, [
        100 * (popupLeft - pageX) / pageWidth,
        100 * (popupTop - pageY) / pageHeight
    ]);
    const { style } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3);
    style.left = "".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position1)[0], "%");
    style.top = "".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _position1)[1], "%");
}
function toggle() {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pinned, !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pinned));
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pinned)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _show, show).call(this);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).addEventListener("click", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boundToggle));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).addEventListener("keydown", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boundKeyDown));
    } else {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hide, hide).call(this);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).removeEventListener("click", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boundToggle));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).removeEventListener("keydown", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boundKeyDown));
    }
}
function show() {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _popup)) {
        this.render();
    }
    if (!this.isVisible) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setPosition, setPosition).call(this);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).hidden = false;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).style.zIndex = parseInt((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).style.zIndex) + 1000;
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pinned)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).classList.add("focused");
    }
}
function hide() {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).classList.remove("focused");
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pinned) || !this.isVisible) {
        return;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).hidden = true;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).style.zIndex = parseInt((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _container3).style.zIndex) - 1000;
}
class FreeTextAnnotationElement extends AnnotationElement {
    render() {
        this.container.classList.add("freeTextAnnotation");
        if (this.textContent) {
            const content = document.createElement("div");
            content.classList.add("annotationTextContent");
            content.setAttribute("role", "comment");
            for (const line of this.textContent){
                const lineSpan = document.createElement("span");
                lineSpan.textContent = line;
                content.append(lineSpan);
            }
            this.container.append(content);
        }
        if (!this.data.popupRef && this.hasPopupData) {
            this._createPopup();
        }
        this._editOnDoubleClick();
        return this.container;
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: true,
            ignoreBorder: true
        });
        this.textContent = parameters.data.textContent;
        this.textPosition = parameters.data.textPosition;
        this.annotationEditorType = AnnotationEditorType.FREETEXT;
    }
}
var _line = /*#__PURE__*/ new WeakMap();
class LineAnnotationElement extends AnnotationElement {
    render() {
        this.container.classList.add("lineAnnotation");
        const { data, width, height } = this;
        const svg = this.svgFactory.create(width, height, true);
        const line = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line, this.svgFactory.createElement("svg:line"));
        line.setAttribute("x1", data.rect[2] - data.lineCoordinates[0]);
        line.setAttribute("y1", data.rect[3] - data.lineCoordinates[1]);
        line.setAttribute("x2", data.rect[2] - data.lineCoordinates[2]);
        line.setAttribute("y2", data.rect[3] - data.lineCoordinates[3]);
        line.setAttribute("stroke-width", data.borderStyle.width || 1);
        line.setAttribute("stroke", "transparent");
        line.setAttribute("fill", "transparent");
        svg.append(line);
        this.container.append(svg);
        if (!data.popupRef && this.hasPopupData) {
            this._createPopup();
        }
        return this.container;
    }
    getElementsToTriggerPopup() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line);
    }
    addHighlightArea() {
        this.container.classList.add("highlightArea");
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: true,
            ignoreBorder: true
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line, {
            writable: true,
            value: null
        });
    }
}
var _square = /*#__PURE__*/ new WeakMap();
class SquareAnnotationElement extends AnnotationElement {
    render() {
        this.container.classList.add("squareAnnotation");
        const { data, width, height } = this;
        const svg = this.svgFactory.create(width, height, true);
        const borderWidth = data.borderStyle.width;
        const square = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _square, this.svgFactory.createElement("svg:rect"));
        square.setAttribute("x", borderWidth / 2);
        square.setAttribute("y", borderWidth / 2);
        square.setAttribute("width", width - borderWidth);
        square.setAttribute("height", height - borderWidth);
        square.setAttribute("stroke-width", borderWidth || 1);
        square.setAttribute("stroke", "transparent");
        square.setAttribute("fill", "transparent");
        svg.append(square);
        this.container.append(svg);
        if (!data.popupRef && this.hasPopupData) {
            this._createPopup();
        }
        return this.container;
    }
    getElementsToTriggerPopup() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _square);
    }
    addHighlightArea() {
        this.container.classList.add("highlightArea");
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: true,
            ignoreBorder: true
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _square, {
            writable: true,
            value: null
        });
    }
}
var _circle = /*#__PURE__*/ new WeakMap();
class CircleAnnotationElement extends AnnotationElement {
    render() {
        this.container.classList.add("circleAnnotation");
        const { data, width, height } = this;
        const svg = this.svgFactory.create(width, height, true);
        const borderWidth = data.borderStyle.width;
        const circle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _circle, this.svgFactory.createElement("svg:ellipse"));
        circle.setAttribute("cx", width / 2);
        circle.setAttribute("cy", height / 2);
        circle.setAttribute("rx", width / 2 - borderWidth / 2);
        circle.setAttribute("ry", height / 2 - borderWidth / 2);
        circle.setAttribute("stroke-width", borderWidth || 1);
        circle.setAttribute("stroke", "transparent");
        circle.setAttribute("fill", "transparent");
        svg.append(circle);
        this.container.append(svg);
        if (!data.popupRef && this.hasPopupData) {
            this._createPopup();
        }
        return this.container;
    }
    getElementsToTriggerPopup() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _circle);
    }
    addHighlightArea() {
        this.container.classList.add("highlightArea");
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: true,
            ignoreBorder: true
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _circle, {
            writable: true,
            value: null
        });
    }
}
var _polyline = /*#__PURE__*/ new WeakMap();
class PolylineAnnotationElement extends AnnotationElement {
    render() {
        this.container.classList.add(this.containerClassName);
        const { data: { rect, vertices, borderStyle, popupRef }, width, height } = this;
        if (!vertices) {
            return this.container;
        }
        const svg = this.svgFactory.create(width, height, true);
        let points = [];
        for(let i = 0, ii = vertices.length; i < ii; i += 2){
            const x = vertices[i] - rect[0];
            const y = rect[3] - vertices[i + 1];
            points.push("".concat(x, ",").concat(y));
        }
        points = points.join(" ");
        const polyline = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _polyline, this.svgFactory.createElement(this.svgElementName));
        polyline.setAttribute("points", points);
        polyline.setAttribute("stroke-width", borderStyle.width || 1);
        polyline.setAttribute("stroke", "transparent");
        polyline.setAttribute("fill", "transparent");
        svg.append(polyline);
        this.container.append(svg);
        if (!popupRef && this.hasPopupData) {
            this._createPopup();
        }
        return this.container;
    }
    getElementsToTriggerPopup() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _polyline);
    }
    addHighlightArea() {
        this.container.classList.add("highlightArea");
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: true,
            ignoreBorder: true
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _polyline, {
            writable: true,
            value: null
        });
        this.containerClassName = "polylineAnnotation";
        this.svgElementName = "svg:polyline";
    }
}
class PolygonAnnotationElement extends PolylineAnnotationElement {
    constructor(parameters){
        super(parameters);
        this.containerClassName = "polygonAnnotation";
        this.svgElementName = "svg:polygon";
    }
}
class CaretAnnotationElement extends AnnotationElement {
    render() {
        this.container.classList.add("caretAnnotation");
        if (!this.data.popupRef && this.hasPopupData) {
            this._createPopup();
        }
        return this.container;
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: true,
            ignoreBorder: true
        });
    }
}
var _polylinesGroupElement = /*#__PURE__*/ new WeakMap(), _polylines = /*#__PURE__*/ new WeakMap(), _getTransform = /*#__PURE__*/ new WeakSet();
class InkAnnotationElement extends AnnotationElement {
    render() {
        this.container.classList.add(this.containerClassName);
        const { data: { rect, rotation, inkLists, borderStyle, popupRef } } = this;
        const { transform, width, height } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getTransform, getTransform).call(this, rotation, rect);
        const svg = this.svgFactory.create(width, height, true);
        const g = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _polylinesGroupElement, this.svgFactory.createElement("svg:g"));
        svg.append(g);
        g.setAttribute("stroke-width", borderStyle.width || 1);
        g.setAttribute("stroke-linecap", "round");
        g.setAttribute("stroke-linejoin", "round");
        g.setAttribute("stroke-miterlimit", 10);
        g.setAttribute("stroke", "transparent");
        g.setAttribute("fill", "transparent");
        g.setAttribute("transform", transform);
        for(let i = 0, ii = inkLists.length; i < ii; i++){
            const polyline = this.svgFactory.createElement(this.svgElementName);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _polylines).push(polyline);
            polyline.setAttribute("points", inkLists[i].join(","));
            g.append(polyline);
        }
        if (!popupRef && this.hasPopupData) {
            this._createPopup();
        }
        this.container.append(svg);
        this._editOnDoubleClick();
        return this.container;
    }
    updateEdited(params) {
        super.updateEdited(params);
        const { thickness, points, rect } = params;
        const g = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _polylinesGroupElement);
        if (thickness >= 0) {
            g.setAttribute("stroke-width", thickness || 1);
        }
        if (points) {
            for(let i = 0, ii = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _polylines).length; i < ii; i++){
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _polylines)[i].setAttribute("points", points[i].join(","));
            }
        }
        if (rect) {
            const { transform, width, height } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getTransform, getTransform).call(this, this.data.rotation, rect);
            const root = g.parentElement;
            root.setAttribute("viewBox", "0 0 ".concat(width, " ").concat(height));
            g.setAttribute("transform", transform);
        }
    }
    getElementsToTriggerPopup() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _polylines);
    }
    addHighlightArea() {
        this.container.classList.add("highlightArea");
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: true,
            ignoreBorder: true
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getTransform), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _polylinesGroupElement, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _polylines, {
            writable: true,
            value: []
        });
        this.containerClassName = "inkAnnotation";
        this.svgElementName = "svg:polyline";
        this.annotationEditorType = this.data.it === "InkHighlight" ? AnnotationEditorType.HIGHLIGHT : AnnotationEditorType.INK;
    }
}
function getTransform(rotation, rect) {
    switch(rotation){
        case 90:
            return {
                transform: "rotate(90) translate(".concat(-rect[0], ",").concat(rect[1], ") scale(1,-1)"),
                width: rect[3] - rect[1],
                height: rect[2] - rect[0]
            };
        case 180:
            return {
                transform: "rotate(180) translate(".concat(-rect[2], ",").concat(rect[1], ") scale(1,-1)"),
                width: rect[2] - rect[0],
                height: rect[3] - rect[1]
            };
        case 270:
            return {
                transform: "rotate(270) translate(".concat(-rect[2], ",").concat(rect[3], ") scale(1,-1)"),
                width: rect[3] - rect[1],
                height: rect[2] - rect[0]
            };
        default:
            return {
                transform: "translate(".concat(-rect[0], ",").concat(rect[3], ") scale(1,-1)"),
                width: rect[2] - rect[0],
                height: rect[3] - rect[1]
            };
    }
}
class HighlightAnnotationElement extends AnnotationElement {
    render() {
        if (!this.data.popupRef && this.hasPopupData) {
            this._createPopup();
        }
        this.container.classList.add("highlightAnnotation");
        this._editOnDoubleClick();
        return this.container;
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: true,
            ignoreBorder: true,
            createQuadrilaterals: true
        });
        this.annotationEditorType = AnnotationEditorType.HIGHLIGHT;
    }
}
class UnderlineAnnotationElement extends AnnotationElement {
    render() {
        if (!this.data.popupRef && this.hasPopupData) {
            this._createPopup();
        }
        this.container.classList.add("underlineAnnotation");
        return this.container;
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: true,
            ignoreBorder: true,
            createQuadrilaterals: true
        });
    }
}
class SquigglyAnnotationElement extends AnnotationElement {
    render() {
        if (!this.data.popupRef && this.hasPopupData) {
            this._createPopup();
        }
        this.container.classList.add("squigglyAnnotation");
        return this.container;
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: true,
            ignoreBorder: true,
            createQuadrilaterals: true
        });
    }
}
class StrikeOutAnnotationElement extends AnnotationElement {
    render() {
        if (!this.data.popupRef && this.hasPopupData) {
            this._createPopup();
        }
        this.container.classList.add("strikeoutAnnotation");
        return this.container;
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: true,
            ignoreBorder: true,
            createQuadrilaterals: true
        });
    }
}
class StampAnnotationElement extends AnnotationElement {
    render() {
        this.container.classList.add("stampAnnotation");
        this.container.setAttribute("role", "img");
        if (!this.data.popupRef && this.hasPopupData) {
            this._createPopup();
        }
        this._editOnDoubleClick();
        return this.container;
    }
    constructor(parameters){
        super(parameters, {
            isRenderable: true,
            ignoreBorder: true
        });
        this.annotationEditorType = AnnotationEditorType.STAMP;
    }
}
var _trigger = /*#__PURE__*/ new WeakMap(), _download = /*#__PURE__*/ new WeakSet();
class FileAttachmentAnnotationElement extends AnnotationElement {
    render() {
        this.container.classList.add("fileAttachmentAnnotation");
        const { container, data } = this;
        let trigger;
        if (data.hasAppearance || data.fillAlpha === 0) {
            trigger = document.createElement("div");
        } else {
            trigger = document.createElement("img");
            trigger.src = "".concat(this.imageResourcesPath, "annotation-").concat(/paperclip/i.test(data.name) ? "paperclip" : "pushpin", ".svg");
            if (data.fillAlpha && data.fillAlpha < 1) {
                trigger.style = "filter: opacity(".concat(Math.round(data.fillAlpha * 100), "%);");
            }
        }
        trigger.addEventListener("dblclick", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _download, download).bind(this));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _trigger, trigger);
        const { isMac } = util_FeatureTest.platform;
        container.addEventListener("keydown", (evt)=>{
            if (evt.key === "Enter" && (isMac ? evt.metaKey : evt.ctrlKey)) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _download, download).call(this);
            }
        });
        if (!data.popupRef && this.hasPopupData) {
            this._createPopup();
        } else {
            trigger.classList.add("popupTriggerArea");
        }
        container.append(trigger);
        return container;
    }
    getElementsToTriggerPopup() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _trigger);
    }
    addHighlightArea() {
        this.container.classList.add("highlightArea");
    }
    constructor(parameters){
        var _this_linkService_eventBus;
        super(parameters, {
            isRenderable: true
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _download), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _trigger, {
            writable: true,
            value: null
        });
        const { file } = this.data;
        this.filename = file.filename;
        this.content = file.content;
        (_this_linkService_eventBus = this.linkService.eventBus) === null || _this_linkService_eventBus === void 0 ? void 0 : _this_linkService_eventBus.dispatch("fileattachmentannotation", {
            source: this,
            ...file
        });
    }
}
function download() {
    var _this_downloadManager;
    (_this_downloadManager = this.downloadManager) === null || _this_downloadManager === void 0 ? void 0 : _this_downloadManager.openOrDownloadData(this.content, this.filename);
}
var _accessibilityManager = /*#__PURE__*/ new WeakMap(), _annotationCanvasMap = /*#__PURE__*/ new WeakMap(), _editableAnnotations = /*#__PURE__*/ new WeakMap(), _structTreeLayer = /*#__PURE__*/ new WeakMap(), _appendElement = /*#__PURE__*/ new WeakSet(), _setAnnotationCanvasMap = /*#__PURE__*/ new WeakSet();
class AnnotationLayer {
    hasEditableAnnotations() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editableAnnotations).size > 0;
    }
    async render(params) {
        const { annotations } = params;
        const layer = this.div;
        setLayerDimensions(layer, this.viewport);
        const popupToElements = new Map();
        const elementParams = {
            data: null,
            layer,
            linkService: params.linkService,
            downloadManager: params.downloadManager,
            imageResourcesPath: params.imageResourcesPath || "",
            renderForms: params.renderForms !== false,
            svgFactory: new DOMSVGFactory(),
            annotationStorage: params.annotationStorage || new AnnotationStorage(),
            enableScripting: params.enableScripting === true,
            hasJSActions: params.hasJSActions,
            fieldObjects: params.fieldObjects,
            parent: this,
            elements: null
        };
        for (const data of annotations){
            if (data.noHTML) {
                continue;
            }
            const isPopupAnnotation = data.annotationType === AnnotationType.POPUP;
            if (!isPopupAnnotation) {
                if (data.rect[2] === data.rect[0] || data.rect[3] === data.rect[1]) {
                    continue;
                }
            } else {
                const elements = popupToElements.get(data.id);
                if (!elements) {
                    continue;
                }
                elementParams.elements = elements;
            }
            elementParams.data = data;
            const element = AnnotationElementFactory.create(elementParams);
            if (!element.isRenderable) {
                continue;
            }
            if (!isPopupAnnotation && data.popupRef) {
                const elements = popupToElements.get(data.popupRef);
                if (!elements) {
                    popupToElements.set(data.popupRef, [
                        element
                    ]);
                } else {
                    elements.push(element);
                }
            }
            const rendered = element.render();
            if (data.hidden) {
                rendered.style.visibility = "hidden";
            }
            await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _appendElement, appendElement).call(this, rendered, data.id);
            if (element._isEditable) {
                var _this__annotationEditorUIManager;
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editableAnnotations).set(element.data.id, element);
                (_this__annotationEditorUIManager = this._annotationEditorUIManager) === null || _this__annotationEditorUIManager === void 0 ? void 0 : _this__annotationEditorUIManager.renderAnnotationElement(element);
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setAnnotationCanvasMap, setAnnotationCanvasMap).call(this);
    }
    async addLinkAnnotations(annotations, linkService) {
        const elementParams = {
            data: null,
            layer: this.div,
            linkService,
            svgFactory: new DOMSVGFactory(),
            parent: this
        };
        for (const data of annotations){
            var _data;
            (_data = data).borderStyle || (_data.borderStyle = AnnotationLayer._defaultBorderStyle);
            elementParams.data = data;
            const element = AnnotationElementFactory.create(elementParams);
            if (!element.isRenderable) {
                continue;
            }
            const rendered = element.render();
            await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _appendElement, appendElement).call(this, rendered, data.id);
        }
    }
    update(param) {
        let { viewport } = param;
        const layer = this.div;
        this.viewport = viewport;
        setLayerDimensions(layer, {
            rotation: viewport.rotation
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setAnnotationCanvasMap, setAnnotationCanvasMap).call(this);
        layer.hidden = false;
    }
    getEditableAnnotations() {
        return Array.from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editableAnnotations).values());
    }
    getEditableAnnotation(id) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editableAnnotations).get(id);
    }
    static get _defaultBorderStyle() {
        return shadow(this, "_defaultBorderStyle", Object.freeze({
            width: 1,
            rawWidth: 1,
            style: AnnotationBorderStyleType.SOLID,
            dashArray: [
                3
            ],
            horizontalCornerRadius: 0,
            verticalCornerRadius: 0
        }));
    }
    constructor({ div, accessibilityManager, annotationCanvasMap, annotationEditorUIManager, page, viewport, structTreeLayer }){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _appendElement);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setAnnotationCanvasMap);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _accessibilityManager, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationCanvasMap, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editableAnnotations, {
            writable: true,
            value: new Map()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _structTreeLayer, {
            writable: true,
            value: null
        });
        this.div = div;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _accessibilityManager, accessibilityManager);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationCanvasMap, annotationCanvasMap);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _structTreeLayer, structTreeLayer || null);
        this.page = page;
        this.viewport = viewport;
        this.zIndex = 0;
        this._annotationEditorUIManager = annotationEditorUIManager;
    }
}
async function appendElement(element, id) {
    var _class_private_field_get, _class_private_field_get1;
    const contentElement = element.firstChild || element;
    const annotationId = contentElement.id = "".concat(AnnotationPrefix).concat(id);
    const ariaAttributes = await ((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _structTreeLayer)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.getAriaAttributes(annotationId));
    if (ariaAttributes) {
        for (const [key, value] of ariaAttributes){
            contentElement.setAttribute(key, value);
        }
    }
    this.div.append(element);
    (_class_private_field_get1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _accessibilityManager)) === null || _class_private_field_get1 === void 0 ? void 0 : _class_private_field_get1.moveElementInDOM(this.div, element, contentElement, false);
}
function setAnnotationCanvasMap() {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationCanvasMap)) {
        return;
    }
    const layer = this.div;
    for (const [id, canvas] of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationCanvasMap)){
        const element = layer.querySelector('[data-annotation-id="'.concat(id, '"]'));
        if (!element) {
            continue;
        }
        canvas.className = "annotationContent";
        const { firstChild } = element;
        if (!firstChild) {
            element.append(canvas);
        } else if (firstChild.nodeName === "CANVAS") {
            firstChild.replaceWith(canvas);
        } else if (!firstChild.classList.contains("annotationContent")) {
            firstChild.before(canvas);
        } else {
            firstChild.after(canvas);
        }
        const editableAnnotation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editableAnnotations).get(id);
        if (!editableAnnotation) {
            continue;
        }
        if (editableAnnotation._hasNoCanvas) {
            var _this__annotationEditorUIManager;
            (_this__annotationEditorUIManager = this._annotationEditorUIManager) === null || _this__annotationEditorUIManager === void 0 ? void 0 : _this__annotationEditorUIManager.setMissingCanvas(id, element.id, canvas);
            editableAnnotation._hasNoCanvas = false;
        } else {
            editableAnnotation.canvas = canvas;
        }
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationCanvasMap).clear();
}
; // ./src/display/editor/freetext.js
const EOL_PATTERN = /\r\n?|\n/g;
var _color1 = /*#__PURE__*/ new WeakMap(), _content = /*#__PURE__*/ new WeakMap(), _editorDivId = /*#__PURE__*/ new WeakMap(), _editModeAC = /*#__PURE__*/ new WeakMap(), _fontSize1 = /*#__PURE__*/ new WeakMap(), _updateFontSize = /*#__PURE__*/ new WeakSet(), _updateColor = /*#__PURE__*/ new WeakSet(), _extractText = /*#__PURE__*/ new WeakSet(), _setEditorDimensions = /*#__PURE__*/ new WeakSet(), _setContent = /*#__PURE__*/ new WeakSet(), _serializeContent = /*#__PURE__*/ new WeakSet(), _hasElementChanged = /*#__PURE__*/ new WeakSet();
class FreeTextEditor extends AnnotationEditor {
    static get _keyboardManager() {
        const proto = FreeTextEditor.prototype;
        const arrowChecker = (self)=>self.isEmpty();
        const small = AnnotationEditorUIManager.TRANSLATE_SMALL;
        const big = AnnotationEditorUIManager.TRANSLATE_BIG;
        return shadow(this, "_keyboardManager", new KeyboardManager([
            [
                [
                    "ctrl+s",
                    "mac+meta+s",
                    "ctrl+p",
                    "mac+meta+p"
                ],
                proto.commitOrRemove,
                {
                    bubbles: true
                }
            ],
            [
                [
                    "ctrl+Enter",
                    "mac+meta+Enter",
                    "Escape",
                    "mac+Escape"
                ],
                proto.commitOrRemove
            ],
            [
                [
                    "ArrowLeft",
                    "mac+ArrowLeft"
                ],
                proto._translateEmpty,
                {
                    args: [
                        -small,
                        0
                    ],
                    checker: arrowChecker
                }
            ],
            [
                [
                    "ctrl+ArrowLeft",
                    "mac+shift+ArrowLeft"
                ],
                proto._translateEmpty,
                {
                    args: [
                        -big,
                        0
                    ],
                    checker: arrowChecker
                }
            ],
            [
                [
                    "ArrowRight",
                    "mac+ArrowRight"
                ],
                proto._translateEmpty,
                {
                    args: [
                        small,
                        0
                    ],
                    checker: arrowChecker
                }
            ],
            [
                [
                    "ctrl+ArrowRight",
                    "mac+shift+ArrowRight"
                ],
                proto._translateEmpty,
                {
                    args: [
                        big,
                        0
                    ],
                    checker: arrowChecker
                }
            ],
            [
                [
                    "ArrowUp",
                    "mac+ArrowUp"
                ],
                proto._translateEmpty,
                {
                    args: [
                        0,
                        -small
                    ],
                    checker: arrowChecker
                }
            ],
            [
                [
                    "ctrl+ArrowUp",
                    "mac+shift+ArrowUp"
                ],
                proto._translateEmpty,
                {
                    args: [
                        0,
                        -big
                    ],
                    checker: arrowChecker
                }
            ],
            [
                [
                    "ArrowDown",
                    "mac+ArrowDown"
                ],
                proto._translateEmpty,
                {
                    args: [
                        0,
                        small
                    ],
                    checker: arrowChecker
                }
            ],
            [
                [
                    "ctrl+ArrowDown",
                    "mac+shift+ArrowDown"
                ],
                proto._translateEmpty,
                {
                    args: [
                        0,
                        big
                    ],
                    checker: arrowChecker
                }
            ]
        ]));
    }
    static initialize(l10n, uiManager) {
        AnnotationEditor.initialize(l10n, uiManager);
        const style = getComputedStyle(document.documentElement);
        this._internalPadding = parseFloat(style.getPropertyValue("--freetext-padding"));
    }
    static updateDefaultParams(type, value) {
        switch(type){
            case AnnotationEditorParamsType.FREETEXT_SIZE:
                FreeTextEditor._defaultFontSize = value;
                break;
            case AnnotationEditorParamsType.FREETEXT_COLOR:
                FreeTextEditor._defaultColor = value;
                break;
        }
    }
    updateParams(type, value) {
        switch(type){
            case AnnotationEditorParamsType.FREETEXT_SIZE:
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateFontSize, updateFontSize).call(this, value);
                break;
            case AnnotationEditorParamsType.FREETEXT_COLOR:
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateColor, updateColor).call(this, value);
                break;
        }
    }
    static get defaultPropertiesToUpdate() {
        return [
            [
                AnnotationEditorParamsType.FREETEXT_SIZE,
                FreeTextEditor._defaultFontSize
            ],
            [
                AnnotationEditorParamsType.FREETEXT_COLOR,
                FreeTextEditor._defaultColor || AnnotationEditor._defaultLineColor
            ]
        ];
    }
    get propertiesToUpdate() {
        return [
            [
                AnnotationEditorParamsType.FREETEXT_SIZE,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontSize1)
            ],
            [
                AnnotationEditorParamsType.FREETEXT_COLOR,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _color1)
            ]
        ];
    }
    _translateEmpty(x, y) {
        this._uiManager.translateSelectedEditors(x, y, true);
    }
    getInitialTranslation() {
        const scale = this.parentScale;
        return [
            -FreeTextEditor._internalPadding * scale,
            -(FreeTextEditor._internalPadding + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontSize1)) * scale
        ];
    }
    rebuild() {
        if (!this.parent) {
            return;
        }
        super.rebuild();
        if (this.div === null) {
            return;
        }
        if (!this.isAttachedToDOM) {
            this.parent.add(this);
        }
    }
    enableEditMode() {
        if (!super.enableEditMode()) {
            return false;
        }
        this.overlayDiv.classList.remove("enabled");
        this.editorDiv.contentEditable = true;
        this._isDraggable = false;
        this.div.removeAttribute("aria-activedescendant");
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editModeAC, new AbortController());
        const signal = this._uiManager.combinedSignal((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editModeAC));
        this.editorDiv.addEventListener("keydown", this.editorDivKeydown.bind(this), {
            signal
        });
        this.editorDiv.addEventListener("focus", this.editorDivFocus.bind(this), {
            signal
        });
        this.editorDiv.addEventListener("blur", this.editorDivBlur.bind(this), {
            signal
        });
        this.editorDiv.addEventListener("input", this.editorDivInput.bind(this), {
            signal
        });
        this.editorDiv.addEventListener("paste", this.editorDivPaste.bind(this), {
            signal
        });
        return true;
    }
    disableEditMode() {
        var _class_private_field_get;
        if (!super.disableEditMode()) {
            return false;
        }
        this.overlayDiv.classList.add("enabled");
        this.editorDiv.contentEditable = false;
        this.div.setAttribute("aria-activedescendant", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorDivId));
        this._isDraggable = true;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editModeAC)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.abort();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editModeAC, null);
        this.div.focus({
            preventScroll: true
        });
        this.isEditing = false;
        this.parent.div.classList.add("freetextEditing");
        return true;
    }
    focusin(event) {
        if (!this._focusEventsAllowed) {
            return;
        }
        super.focusin(event);
        if (event.target !== this.editorDiv) {
            this.editorDiv.focus();
        }
    }
    onceAdded(focus) {
        var _this__initialOptions;
        if (this.width) {
            return;
        }
        this.enableEditMode();
        if (focus) {
            this.editorDiv.focus();
        }
        if ((_this__initialOptions = this._initialOptions) === null || _this__initialOptions === void 0 ? void 0 : _this__initialOptions.isCentered) {
            this.center();
        }
        this._initialOptions = null;
    }
    isEmpty() {
        return !this.editorDiv || this.editorDiv.innerText.trim() === "";
    }
    remove() {
        this.isEditing = false;
        if (this.parent) {
            this.parent.setEditingState(true);
            this.parent.div.classList.add("freetextEditing");
        }
        super.remove();
    }
    commit() {
        if (!this.isInEditMode()) {
            return;
        }
        super.commit();
        this.disableEditMode();
        const savedText = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _content);
        const newText = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _content, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _extractText, extractText).call(this).trimEnd());
        if (savedText === newText) {
            return;
        }
        const setText = (text)=>{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _content, text);
            if (!text) {
                this.remove();
                return;
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setContent, setContent).call(this);
            this._uiManager.rebuild(this);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setEditorDimensions, setEditorDimensions).call(this);
        };
        this.addCommands({
            cmd: ()=>{
                setText(newText);
            },
            undo: ()=>{
                setText(savedText);
            },
            mustExec: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setEditorDimensions, setEditorDimensions).call(this);
    }
    shouldGetKeyboardEvents() {
        return this.isInEditMode();
    }
    enterInEditMode() {
        this.enableEditMode();
        this.editorDiv.focus();
    }
    keydown(event) {
        if (event.target === this.div && event.key === "Enter") {
            this.enterInEditMode();
            event.preventDefault();
        }
    }
    editorDivKeydown(event) {
        FreeTextEditor._keyboardManager.exec(this, event);
    }
    editorDivFocus(event) {
        this.isEditing = true;
    }
    editorDivBlur(event) {
        this.isEditing = false;
    }
    editorDivInput(event) {
        this.parent.div.classList.toggle("freetextEditing", this.isEmpty());
    }
    disableEditing() {
        this.editorDiv.setAttribute("role", "comment");
        this.editorDiv.removeAttribute("aria-multiline");
    }
    enableEditing() {
        this.editorDiv.setAttribute("role", "textbox");
        this.editorDiv.setAttribute("aria-multiline", true);
    }
    get canChangeContent() {
        return true;
    }
    render() {
        if (this.div) {
            return this.div;
        }
        let baseX, baseY;
        if (this._isCopy || this.annotationElementId) {
            baseX = this.x;
            baseY = this.y;
        }
        super.render();
        this.editorDiv = document.createElement("div");
        this.editorDiv.className = "internal";
        this.editorDiv.setAttribute("id", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorDivId));
        this.editorDiv.setAttribute("data-l10n-id", "pdfjs-free-text2");
        this.editorDiv.setAttribute("data-l10n-attrs", "default-content");
        this.enableEditing();
        this.editorDiv.contentEditable = true;
        const { style } = this.editorDiv;
        style.fontSize = "calc(".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontSize1), "px * var(--total-scale-factor))");
        style.color = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _color1);
        this.div.append(this.editorDiv);
        this.overlayDiv = document.createElement("div");
        this.overlayDiv.classList.add("overlay", "enabled");
        this.div.append(this.overlayDiv);
        if (this._isCopy || this.annotationElementId) {
            const [parentWidth, parentHeight] = this.parentDimensions;
            if (this.annotationElementId) {
                const { position } = this._initialData;
                let [tx, ty] = this.getInitialTranslation();
                [tx, ty] = this.pageTranslationToScreen(tx, ty);
                const [pageWidth, pageHeight] = this.pageDimensions;
                const [pageX, pageY] = this.pageTranslation;
                let posX, posY;
                switch(this.rotation){
                    case 0:
                        posX = baseX + (position[0] - pageX) / pageWidth;
                        posY = baseY + this.height - (position[1] - pageY) / pageHeight;
                        break;
                    case 90:
                        posX = baseX + (position[0] - pageX) / pageWidth;
                        posY = baseY - (position[1] - pageY) / pageHeight;
                        [tx, ty] = [
                            ty,
                            -tx
                        ];
                        break;
                    case 180:
                        posX = baseX - this.width + (position[0] - pageX) / pageWidth;
                        posY = baseY - (position[1] - pageY) / pageHeight;
                        [tx, ty] = [
                            -tx,
                            -ty
                        ];
                        break;
                    case 270:
                        posX = baseX + (position[0] - pageX - this.height * pageHeight) / pageWidth;
                        posY = baseY + (position[1] - pageY - this.width * pageWidth) / pageHeight;
                        [tx, ty] = [
                            -ty,
                            tx
                        ];
                        break;
                }
                this.setAt(posX * parentWidth, posY * parentHeight, tx, ty);
            } else {
                this._moveAfterPaste(baseX, baseY);
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setContent, setContent).call(this);
            this._isDraggable = true;
            this.editorDiv.contentEditable = false;
        } else {
            this._isDraggable = false;
            this.editorDiv.contentEditable = true;
        }
        return this.div;
    }
    editorDivPaste(event) {
        const clipboardData = event.clipboardData || window.clipboardData;
        const { types } = clipboardData;
        if (types.length === 1 && types[0] === "text/plain") {
            return;
        }
        event.preventDefault();
        const paste = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeTextEditor, FreeTextEditor, deserializeContent).call(FreeTextEditor, clipboardData.getData("text") || "").replaceAll(EOL_PATTERN, "\n");
        if (!paste) {
            return;
        }
        const selection = window.getSelection();
        if (!selection.rangeCount) {
            return;
        }
        this.editorDiv.normalize();
        selection.deleteFromDocument();
        const range = selection.getRangeAt(0);
        if (!paste.includes("\n")) {
            range.insertNode(document.createTextNode(paste));
            this.editorDiv.normalize();
            selection.collapseToStart();
            return;
        }
        const { startContainer, startOffset } = range;
        const bufferBefore = [];
        const bufferAfter = [];
        if (startContainer.nodeType === Node.TEXT_NODE) {
            const parent = startContainer.parentElement;
            bufferAfter.push(startContainer.nodeValue.slice(startOffset).replaceAll(EOL_PATTERN, ""));
            if (parent !== this.editorDiv) {
                let buffer = bufferBefore;
                for (const child of this.editorDiv.childNodes){
                    if (child === parent) {
                        buffer = bufferAfter;
                        continue;
                    }
                    buffer.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeTextEditor, FreeTextEditor, getNodeContent).call(FreeTextEditor, child));
                }
            }
            bufferBefore.push(startContainer.nodeValue.slice(0, startOffset).replaceAll(EOL_PATTERN, ""));
        } else if (startContainer === this.editorDiv) {
            let buffer = bufferBefore;
            let i = 0;
            for (const child of this.editorDiv.childNodes){
                if (i++ === startOffset) {
                    buffer = bufferAfter;
                }
                buffer.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeTextEditor, FreeTextEditor, getNodeContent).call(FreeTextEditor, child));
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _content, "".concat(bufferBefore.join("\n")).concat(paste).concat(bufferAfter.join("\n")));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setContent, setContent).call(this);
        const newRange = new Range();
        let beforeLength = Math.sumPrecise(bufferBefore.map((line)=>line.length));
        for (const { firstChild } of this.editorDiv.childNodes){
            if (firstChild.nodeType === Node.TEXT_NODE) {
                const length = firstChild.nodeValue.length;
                if (beforeLength <= length) {
                    newRange.setStart(firstChild, beforeLength);
                    newRange.setEnd(firstChild, beforeLength);
                    break;
                }
                beforeLength -= length;
            }
        }
        selection.removeAllRanges();
        selection.addRange(newRange);
    }
    get contentDiv() {
        return this.editorDiv;
    }
    static async deserialize(data, parent, uiManager) {
        let initialData = null;
        if (data instanceof FreeTextAnnotationElement) {
            const { data: { defaultAppearanceData: { fontSize, fontColor }, rect, rotation, id, popupRef }, textContent, textPosition, parent: { page: { pageNumber } } } = data;
            if (!textContent || textContent.length === 0) {
                return null;
            }
            initialData = data = {
                annotationType: AnnotationEditorType.FREETEXT,
                color: Array.from(fontColor),
                fontSize,
                value: textContent.join("\n"),
                position: textPosition,
                pageIndex: pageNumber - 1,
                rect: rect.slice(0),
                rotation,
                id,
                deleted: false,
                popupRef
            };
        }
        const editor = await super.deserialize(data, parent, uiManager);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _fontSize1, data.fontSize);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _color1, Util.makeHexColor(...data.color));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _content, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeTextEditor, FreeTextEditor, deserializeContent).call(FreeTextEditor, data.value));
        editor.annotationElementId = data.id || null;
        editor._initialData = initialData;
        return editor;
    }
    serialize() {
        let isForCopying = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        if (this.isEmpty()) {
            return null;
        }
        if (this.deleted) {
            return this.serializeDeleted();
        }
        const padding = FreeTextEditor._internalPadding * this.parentScale;
        const rect = this.getRect(padding, padding);
        const color = AnnotationEditor._colorManager.convert(this.isAttachedToDOM ? getComputedStyle(this.editorDiv).color : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _color1));
        const serialized = {
            annotationType: AnnotationEditorType.FREETEXT,
            color,
            fontSize: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontSize1),
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serializeContent, serializeContent).call(this),
            pageIndex: this.pageIndex,
            rect,
            rotation: this.rotation,
            structTreeParentId: this._structTreeParentId
        };
        if (isForCopying) {
            serialized.isCopy = true;
            return serialized;
        }
        if (this.annotationElementId && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasElementChanged, hasElementChanged).call(this, serialized)) {
            return null;
        }
        serialized.id = this.annotationElementId;
        return serialized;
    }
    renderAnnotationElement(annotation) {
        const content = super.renderAnnotationElement(annotation);
        if (this.deleted) {
            return content;
        }
        const { style } = content;
        style.fontSize = "calc(".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontSize1), "px * var(--total-scale-factor))");
        style.color = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _color1);
        content.replaceChildren();
        for (const line of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _content).split("\n")){
            const div = document.createElement("div");
            div.append(line ? document.createTextNode(line) : document.createElement("br"));
            content.append(div);
        }
        const padding = FreeTextEditor._internalPadding * this.parentScale;
        annotation.updateEdited({
            rect: this.getRect(padding, padding),
            popupContent: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _content)
        });
        return content;
    }
    resetAnnotationElement(annotation) {
        super.resetAnnotationElement(annotation);
        annotation.resetEdited();
    }
    constructor(params){
        super({
            ...params,
            name: "freeTextEditor"
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateFontSize), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateColor), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _extractText), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setEditorDimensions), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setContent), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serializeContent), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasElementChanged), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _color1, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _content, {
            writable: true,
            value: ""
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorDivId, {
            writable: true,
            value: "".concat(this.id, "-editor")
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editModeAC, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontSize1, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _color1, params.color || FreeTextEditor._defaultColor || AnnotationEditor._defaultLineColor);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontSize1, params.fontSize || FreeTextEditor._defaultFontSize);
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeTextEditor, "_freeTextDefaultContent", "");
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeTextEditor, "_internalPadding", 0);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeTextEditor, "_defaultColor", null);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeTextEditor, "_defaultFontSize", 10);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeTextEditor, "_type", "freetext");
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeTextEditor, "_editorType", AnnotationEditorType.FREETEXT);
function updateFontSize(fontSize) {
    const setFontsize = (size)=>{
        this.editorDiv.style.fontSize = "calc(".concat(size, "px * var(--total-scale-factor))");
        this.translate(0, -(size - (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontSize1)) * this.parentScale);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontSize1, size);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setEditorDimensions, setEditorDimensions).call(this);
    };
    const savedFontsize = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _fontSize1);
    this.addCommands({
        cmd: setFontsize.bind(this, fontSize),
        undo: setFontsize.bind(this, savedFontsize),
        post: this._uiManager.updateUI.bind(this._uiManager, this),
        mustExec: true,
        type: AnnotationEditorParamsType.FREETEXT_SIZE,
        overwriteIfSameType: true,
        keepUndo: true
    });
}
function updateColor(color) {
    const setColor = (col)=>{
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _color1, this.editorDiv.style.color = col);
    };
    const savedColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _color1);
    this.addCommands({
        cmd: setColor.bind(this, color),
        undo: setColor.bind(this, savedColor),
        post: this._uiManager.updateUI.bind(this._uiManager, this),
        mustExec: true,
        type: AnnotationEditorParamsType.FREETEXT_COLOR,
        overwriteIfSameType: true,
        keepUndo: true
    });
}
function extractText() {
    const buffer = [];
    this.editorDiv.normalize();
    let prevChild = null;
    for (const child of this.editorDiv.childNodes){
        if ((prevChild === null || prevChild === void 0 ? void 0 : prevChild.nodeType) === Node.TEXT_NODE && child.nodeName === "BR") {
            continue;
        }
        buffer.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeTextEditor, FreeTextEditor, getNodeContent).call(FreeTextEditor, child));
        prevChild = child;
    }
    return buffer.join("\n");
}
function setEditorDimensions() {
    const [parentWidth, parentHeight] = this.parentDimensions;
    let rect;
    if (this.isAttachedToDOM) {
        rect = this.div.getBoundingClientRect();
    } else {
        const { currentLayer, div } = this;
        const savedDisplay = div.style.display;
        const savedVisibility = div.classList.contains("hidden");
        div.classList.remove("hidden");
        div.style.display = "hidden";
        currentLayer.div.append(this.div);
        rect = div.getBoundingClientRect();
        div.remove();
        div.style.display = savedDisplay;
        div.classList.toggle("hidden", savedVisibility);
    }
    if (this.rotation % 180 === this.parentRotation % 180) {
        this.width = rect.width / parentWidth;
        this.height = rect.height / parentHeight;
    } else {
        this.width = rect.height / parentWidth;
        this.height = rect.width / parentHeight;
    }
    this.fixAndSetPosition();
}
function getNodeContent(node) {
    return (node.nodeType === Node.TEXT_NODE ? node.nodeValue : node.innerText).replaceAll(EOL_PATTERN, "");
}
function setContent() {
    this.editorDiv.replaceChildren();
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _content)) {
        return;
    }
    for (const line of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _content).split("\n")){
        const div = document.createElement("div");
        div.append(line ? document.createTextNode(line) : document.createElement("br"));
        this.editorDiv.append(div);
    }
}
function serializeContent() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _content).replaceAll("\xa0", " ");
}
function deserializeContent(content) {
    return content.replaceAll(" ", "\xa0");
}
function hasElementChanged(serialized) {
    const { value, fontSize, color, pageIndex } = this._initialData;
    return this._hasBeenMoved || serialized.value !== value || serialized.fontSize !== fontSize || serialized.color.some((c, i)=>c !== color[i]) || serialized.pageIndex !== pageIndex;
}
; // ./src/display/editor/drawers/outline.js
class Outline {
    toSVGPath() {
        unreachable("Abstract method `toSVGPath` must be implemented.");
    }
    get box() {
        unreachable("Abstract getter `box` must be implemented.");
    }
    serialize(_bbox, _rotation) {
        unreachable("Abstract method `serialize` must be implemented.");
    }
    static _rescale(src, tx, ty, sx, sy, dest) {
        dest || (dest = new Float32Array(src.length));
        for(let i = 0, ii = src.length; i < ii; i += 2){
            dest[i] = tx + src[i] * sx;
            dest[i + 1] = ty + src[i + 1] * sy;
        }
        return dest;
    }
    static _rescaleAndSwap(src, tx, ty, sx, sy, dest) {
        dest || (dest = new Float32Array(src.length));
        for(let i = 0, ii = src.length; i < ii; i += 2){
            dest[i] = tx + src[i + 1] * sx;
            dest[i + 1] = ty + src[i] * sy;
        }
        return dest;
    }
    static _translate(src, tx, ty, dest) {
        dest || (dest = new Float32Array(src.length));
        for(let i = 0, ii = src.length; i < ii; i += 2){
            dest[i] = tx + src[i];
            dest[i + 1] = ty + src[i + 1];
        }
        return dest;
    }
    static svgRound(x) {
        return Math.round(x * 10000);
    }
    static _normalizePoint(x, y, parentWidth, parentHeight, rotation) {
        switch(rotation){
            case 90:
                return [
                    1 - y / parentWidth,
                    x / parentHeight
                ];
            case 180:
                return [
                    1 - x / parentWidth,
                    1 - y / parentHeight
                ];
            case 270:
                return [
                    y / parentWidth,
                    1 - x / parentHeight
                ];
            default:
                return [
                    x / parentWidth,
                    y / parentHeight
                ];
        }
    }
    static _normalizePagePoint(x, y, rotation) {
        switch(rotation){
            case 90:
                return [
                    1 - y,
                    x
                ];
            case 180:
                return [
                    1 - x,
                    1 - y
                ];
            case 270:
                return [
                    y,
                    1 - x
                ];
            default:
                return [
                    x,
                    y
                ];
        }
    }
    static createBezierPoints(x1, y1, x2, y2, x3, y3) {
        return [
            (x1 + 5 * x2) / 6,
            (y1 + 5 * y2) / 6,
            (5 * x2 + x3) / 6,
            (5 * y2 + y3) / 6,
            (x2 + x3) / 2,
            (y2 + y3) / 2
        ];
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(Outline, "PRECISION", 1e-4);
; // ./src/display/editor/drawers/freedraw.js
var _box = /*#__PURE__*/ new WeakMap(), _bottom = /*#__PURE__*/ new WeakMap(), _innerMargin = /*#__PURE__*/ new WeakMap(), _isLTR = /*#__PURE__*/ new WeakMap(), _top = /*#__PURE__*/ new WeakMap(), _last = /*#__PURE__*/ new WeakMap(), _lastX = /*#__PURE__*/ new WeakMap(), _lastY = /*#__PURE__*/ new WeakMap(), _min = /*#__PURE__*/ new WeakMap(), _min_dist = /*#__PURE__*/ new WeakMap(), _scaleFactor = /*#__PURE__*/ new WeakMap(), _thickness = /*#__PURE__*/ new WeakMap(), _points = /*#__PURE__*/ new WeakMap(), _getLastCoords = /*#__PURE__*/ new WeakSet(), _toSVGPathTwoPoints = /*#__PURE__*/ new WeakSet(), _toSVGPathStart = /*#__PURE__*/ new WeakSet(), _toSVGPathEnd = /*#__PURE__*/ new WeakSet(), _getOutlineTwoPoints = /*#__PURE__*/ new WeakSet(), _getOutlineStart = /*#__PURE__*/ new WeakSet(), _getOutlineEnd = /*#__PURE__*/ new WeakSet();
class FreeDrawOutliner {
    isEmpty() {
        return isNaN((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last)[8]);
    }
    add(param) {
        let { x, y } = param;
        var _class_private_field_get;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastX, x);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastY, y);
        const [layerX, layerY, layerWidth, layerHeight] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box);
        let [x1, y1, x2, y2] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).subarray(8, 12);
        const diffX = x - x2;
        const diffY = y - y2;
        const d = Math.hypot(diffX, diffY);
        if (d < (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _min)) {
            return false;
        }
        const diffD = d - (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _min_dist);
        const K = diffD / d;
        const shiftX = K * diffX;
        const shiftY = K * diffY;
        let x0 = x1;
        let y0 = y1;
        x1 = x2;
        y1 = y2;
        x2 += shiftX;
        y2 += shiftY;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.push(x, y);
        const nX = -shiftY / diffD;
        const nY = shiftX / diffD;
        const thX = nX * (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness);
        const thY = nY * (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).set((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).subarray(2, 8), 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).set([
            x2 + thX,
            y2 + thY
        ], 4);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).set((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).subarray(14, 18), 12);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).set([
            x2 - thX,
            y2 - thY
        ], 16);
        if (isNaN((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last)[6])) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _top).length === 0) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).set([
                    x1 + thX,
                    y1 + thY
                ], 2);
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _top).push(NaN, NaN, NaN, NaN, (x1 + thX - layerX) / layerWidth, (y1 + thY - layerY) / layerHeight);
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).set([
                    x1 - thX,
                    y1 - thY
                ], 14);
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bottom).push(NaN, NaN, NaN, NaN, (x1 - thX - layerX) / layerWidth, (y1 - thY - layerY) / layerHeight);
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).set([
                x0,
                y0,
                x1,
                y1,
                x2,
                y2
            ], 6);
            return !this.isEmpty();
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).set([
            x0,
            y0,
            x1,
            y1,
            x2,
            y2
        ], 6);
        const angle = Math.abs(Math.atan2(y0 - y1, x0 - x1) - Math.atan2(shiftY, shiftX));
        if (angle < Math.PI / 2) {
            [x1, y1, x2, y2] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).subarray(2, 6);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _top).push(NaN, NaN, NaN, NaN, ((x1 + x2) / 2 - layerX) / layerWidth, ((y1 + y2) / 2 - layerY) / layerHeight);
            [x1, y1, x0, y0] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).subarray(14, 18);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bottom).push(NaN, NaN, NaN, NaN, ((x0 + x1) / 2 - layerX) / layerWidth, ((y0 + y1) / 2 - layerY) / layerHeight);
            return true;
        }
        [x0, y0, x1, y1, x2, y2] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).subarray(0, 6);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _top).push(((x0 + 5 * x1) / 6 - layerX) / layerWidth, ((y0 + 5 * y1) / 6 - layerY) / layerHeight, ((5 * x1 + x2) / 6 - layerX) / layerWidth, ((5 * y1 + y2) / 6 - layerY) / layerHeight, ((x1 + x2) / 2 - layerX) / layerWidth, ((y1 + y2) / 2 - layerY) / layerHeight);
        [x2, y2, x1, y1, x0, y0] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).subarray(12, 18);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bottom).push(((x0 + 5 * x1) / 6 - layerX) / layerWidth, ((y0 + 5 * y1) / 6 - layerY) / layerHeight, ((5 * x1 + x2) / 6 - layerX) / layerWidth, ((5 * y1 + y2) / 6 - layerY) / layerHeight, ((x1 + x2) / 2 - layerX) / layerWidth, ((y1 + y2) / 2 - layerY) / layerHeight);
        return true;
    }
    toSVGPath() {
        if (this.isEmpty()) {
            return "";
        }
        const top = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _top);
        const bottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bottom);
        if (isNaN((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last)[6]) && !this.isEmpty()) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toSVGPathTwoPoints, toSVGPathTwoPoints).call(this);
        }
        const buffer = [];
        buffer.push("M".concat(top[4], " ").concat(top[5]));
        for(let i = 6; i < top.length; i += 6){
            if (isNaN(top[i])) {
                buffer.push("L".concat(top[i + 4], " ").concat(top[i + 5]));
            } else {
                buffer.push("C".concat(top[i], " ").concat(top[i + 1], " ").concat(top[i + 2], " ").concat(top[i + 3], " ").concat(top[i + 4], " ").concat(top[i + 5]));
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toSVGPathEnd, toSVGPathEnd).call(this, buffer);
        for(let i = bottom.length - 6; i >= 6; i -= 6){
            if (isNaN(bottom[i])) {
                buffer.push("L".concat(bottom[i + 4], " ").concat(bottom[i + 5]));
            } else {
                buffer.push("C".concat(bottom[i], " ").concat(bottom[i + 1], " ").concat(bottom[i + 2], " ").concat(bottom[i + 3], " ").concat(bottom[i + 4], " ").concat(bottom[i + 5]));
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toSVGPathStart, toSVGPathStart).call(this, buffer);
        return buffer.join(" ");
    }
    newFreeDrawOutline(outline, points, box, scaleFactor, innerMargin, isLTR) {
        return new FreeDrawOutline(outline, points, box, scaleFactor, innerMargin, isLTR);
    }
    getOutlines() {
        var _class_private_field_get;
        const top = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _top);
        const bottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bottom);
        const last = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last);
        const [layerX, layerY, layerWidth, layerHeight] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box);
        var _class_private_field_get_length;
        const points = new Float32Array(((_class_private_field_get_length = (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.length) !== null && _class_private_field_get_length !== void 0 ? _class_private_field_get_length : 0) + 2);
        for(let i = 0, ii = points.length - 2; i < ii; i += 2){
            points[i] = ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points)[i] - layerX) / layerWidth;
            points[i + 1] = ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points)[i + 1] - layerY) / layerHeight;
        }
        points[points.length - 2] = ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastX) - layerX) / layerWidth;
        points[points.length - 1] = ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastY) - layerY) / layerHeight;
        if (isNaN(last[6]) && !this.isEmpty()) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getOutlineTwoPoints, getOutlineTwoPoints).call(this, points);
        }
        const outline = new Float32Array((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _top).length + 24 + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bottom).length);
        let N = top.length;
        for(let i = 0; i < N; i += 2){
            if (isNaN(top[i])) {
                outline[i] = outline[i + 1] = NaN;
                continue;
            }
            outline[i] = top[i];
            outline[i + 1] = top[i + 1];
        }
        N = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getOutlineEnd, getOutlineEnd).call(this, outline, N);
        for(let i = bottom.length - 6; i >= 6; i -= 6){
            for(let j = 0; j < 6; j += 2){
                if (isNaN(bottom[i + j])) {
                    outline[N] = outline[N + 1] = NaN;
                    N += 2;
                    continue;
                }
                outline[N] = bottom[i + j];
                outline[N + 1] = bottom[i + j + 1];
                N += 2;
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getOutlineStart, getOutlineStart).call(this, outline, N);
        return this.newFreeDrawOutline(outline, points, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scaleFactor), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _innerMargin), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isLTR));
    }
    constructor({ x, y }, box, scaleFactor, thickness, isLTR, innerMargin = 0){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getLastCoords);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toSVGPathTwoPoints);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toSVGPathStart);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toSVGPathEnd);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getOutlineTwoPoints);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getOutlineStart);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getOutlineEnd);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bottom, {
            writable: true,
            value: []
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _innerMargin, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isLTR, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _top, {
            writable: true,
            value: []
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last, {
            writable: true,
            value: new Float32Array(18)
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastX, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastY, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _min, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _min_dist, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scaleFactor, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points, {
            writable: true,
            value: []
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box, box);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness, thickness * scaleFactor);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isLTR, isLTR);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).set([
            NaN,
            NaN,
            NaN,
            NaN,
            x,
            y
        ], 6);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _innerMargin, innerMargin);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _min_dist, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeDrawOutliner, FreeDrawOutliner, _MIN_DIST) * scaleFactor);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _min, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeDrawOutliner, FreeDrawOutliner, _MIN) * scaleFactor);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scaleFactor, scaleFactor);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points).push(x, y);
    }
}
var _MIN_DIST = {
    writable: true,
    value: 8
};
var _MIN_DIFF = {
    writable: true,
    value: 2
};
var _MIN = {
    writable: true,
    value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeDrawOutliner, FreeDrawOutliner, _MIN_DIST) + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(FreeDrawOutliner, FreeDrawOutliner, _MIN_DIFF)
};
function getLastCoords() {
    const lastTop = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).subarray(4, 6);
    const lastBottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).subarray(16, 18);
    const [x, y, width, height] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box);
    return [
        ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastX) + (lastTop[0] - lastBottom[0]) / 2 - x) / width,
        ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastY) + (lastTop[1] - lastBottom[1]) / 2 - y) / height,
        ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastX) + (lastBottom[0] - lastTop[0]) / 2 - x) / width,
        ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastY) + (lastBottom[1] - lastTop[1]) / 2 - y) / height
    ];
}
function toSVGPathTwoPoints() {
    const [x, y, width, height] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box);
    const [lastTopX, lastTopY, lastBottomX, lastBottomY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getLastCoords, getLastCoords).call(this);
    return "M".concat(((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last)[2] - x) / width, " ").concat(((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last)[3] - y) / height, " L").concat(((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last)[4] - x) / width, " ").concat(((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last)[5] - y) / height, " L").concat(lastTopX, " ").concat(lastTopY, " L").concat(lastBottomX, " ").concat(lastBottomY, " L").concat(((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last)[16] - x) / width, " ").concat(((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last)[17] - y) / height, " L").concat(((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last)[14] - x) / width, " ").concat(((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last)[15] - y) / height, " Z");
}
function toSVGPathStart(buffer) {
    const bottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bottom);
    buffer.push("L".concat(bottom[4], " ").concat(bottom[5], " Z"));
}
function toSVGPathEnd(buffer) {
    const [x, y, width, height] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box);
    const lastTop = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).subarray(4, 6);
    const lastBottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).subarray(16, 18);
    const [lastTopX, lastTopY, lastBottomX, lastBottomY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getLastCoords, getLastCoords).call(this);
    buffer.push("L".concat((lastTop[0] - x) / width, " ").concat((lastTop[1] - y) / height, " L").concat(lastTopX, " ").concat(lastTopY, " L").concat(lastBottomX, " ").concat(lastBottomY, " L").concat((lastBottom[0] - x) / width, " ").concat((lastBottom[1] - y) / height));
}
function getOutlineTwoPoints(points) {
    const last = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last);
    const [layerX, layerY, layerWidth, layerHeight] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box);
    const [lastTopX, lastTopY, lastBottomX, lastBottomY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getLastCoords, getLastCoords).call(this);
    const outline = new Float32Array(36);
    outline.set([
        NaN,
        NaN,
        NaN,
        NaN,
        (last[2] - layerX) / layerWidth,
        (last[3] - layerY) / layerHeight,
        NaN,
        NaN,
        NaN,
        NaN,
        (last[4] - layerX) / layerWidth,
        (last[5] - layerY) / layerHeight,
        NaN,
        NaN,
        NaN,
        NaN,
        lastTopX,
        lastTopY,
        NaN,
        NaN,
        NaN,
        NaN,
        lastBottomX,
        lastBottomY,
        NaN,
        NaN,
        NaN,
        NaN,
        (last[16] - layerX) / layerWidth,
        (last[17] - layerY) / layerHeight,
        NaN,
        NaN,
        NaN,
        NaN,
        (last[14] - layerX) / layerWidth,
        (last[15] - layerY) / layerHeight
    ], 0);
    return this.newFreeDrawOutline(outline, points, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scaleFactor), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _innerMargin), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isLTR));
}
function getOutlineStart(outline, pos) {
    const bottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bottom);
    outline.set([
        NaN,
        NaN,
        NaN,
        NaN,
        bottom[4],
        bottom[5]
    ], pos);
    return pos += 6;
}
function getOutlineEnd(outline, pos) {
    const lastTop = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).subarray(4, 6);
    const lastBottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last).subarray(16, 18);
    const [layerX, layerY, layerWidth, layerHeight] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box);
    const [lastTopX, lastTopY, lastBottomX, lastBottomY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getLastCoords, getLastCoords).call(this);
    outline.set([
        NaN,
        NaN,
        NaN,
        NaN,
        (lastTop[0] - layerX) / layerWidth,
        (lastTop[1] - layerY) / layerHeight,
        NaN,
        NaN,
        NaN,
        NaN,
        lastTopX,
        lastTopY,
        NaN,
        NaN,
        NaN,
        NaN,
        lastBottomX,
        lastBottomY,
        NaN,
        NaN,
        NaN,
        NaN,
        (lastBottom[0] - layerX) / layerWidth,
        (lastBottom[1] - layerY) / layerHeight
    ], pos);
    return pos += 24;
}
var _box1 = /*#__PURE__*/ new WeakMap(), _bbox = /*#__PURE__*/ new WeakMap(), _innerMargin1 = /*#__PURE__*/ new WeakMap(), _isLTR1 = /*#__PURE__*/ new WeakMap(), _points1 = /*#__PURE__*/ new WeakMap(), _scaleFactor1 = /*#__PURE__*/ new WeakMap(), _outline = /*#__PURE__*/ new WeakMap(), _computeMinMax = /*#__PURE__*/ new WeakSet();
class FreeDrawOutline extends Outline {
    toSVGPath() {
        const buffer = [
            "M".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline)[4], " ").concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline)[5])
        ];
        for(let i = 6, ii = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline).length; i < ii; i += 6){
            if (isNaN((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline)[i])) {
                buffer.push("L".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline)[i + 4], " ").concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline)[i + 5]));
                continue;
            }
            buffer.push("C".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline)[i], " ").concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline)[i + 1], " ").concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline)[i + 2], " ").concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline)[i + 3], " ").concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline)[i + 4], " ").concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline)[i + 5]));
        }
        buffer.push("Z");
        return buffer.join(" ");
    }
    serialize(param, rotation) {
        let [blX, blY, trX, trY] = param;
        const width = trX - blX;
        const height = trY - blY;
        let outline;
        let points;
        switch(rotation){
            case 0:
                outline = Outline._rescale((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline), blX, trY, width, -height);
                points = Outline._rescale((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points1), blX, trY, width, -height);
                break;
            case 90:
                outline = Outline._rescaleAndSwap((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline), blX, blY, width, height);
                points = Outline._rescaleAndSwap((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points1), blX, blY, width, height);
                break;
            case 180:
                outline = Outline._rescale((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline), trX, blY, -width, height);
                points = Outline._rescale((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points1), trX, blY, -width, height);
                break;
            case 270:
                outline = Outline._rescaleAndSwap((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline), trX, trY, -width, -height);
                points = Outline._rescaleAndSwap((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points1), trX, trY, -width, -height);
                break;
        }
        return {
            outline: Array.from(outline),
            points: [
                Array.from(points)
            ]
        };
    }
    get box() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox);
    }
    newOutliner(point, box, scaleFactor, thickness, isLTR) {
        let innerMargin = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 0;
        return new FreeDrawOutliner(point, box, scaleFactor, thickness, isLTR, innerMargin);
    }
    getNewOutline(thickness, innerMargin) {
        const [x, y, width, height] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox);
        const [layerX, layerY, layerWidth, layerHeight] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box1);
        const sx = width * layerWidth;
        const sy = height * layerHeight;
        const tx = x * layerWidth + layerX;
        const ty = y * layerHeight + layerY;
        const outliner = this.newOutliner({
            x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points1)[0] * sx + tx,
            y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points1)[1] * sy + ty
        }, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scaleFactor1), thickness, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isLTR1), innerMargin !== null && innerMargin !== void 0 ? innerMargin : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _innerMargin1));
        for(let i = 2; i < (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points1).length; i += 2){
            outliner.add({
                x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points1)[i] * sx + tx,
                y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points1)[i + 1] * sy + ty
            });
        }
        return outliner.getOutlines();
    }
    constructor(outline, points, box, scaleFactor, innerMargin, isLTR){
        super(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _computeMinMax), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box1, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox, {
            writable: true,
            value: new Float32Array(4)
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _innerMargin1, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isLTR1, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points1, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scaleFactor1, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline, outline);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points1, points);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box1, box);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scaleFactor1, scaleFactor);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _innerMargin1, innerMargin);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isLTR1, isLTR);
        this.lastPoint = [
            NaN,
            NaN
        ];
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _computeMinMax, computeMinMax).call(this, isLTR);
        const [x, y, width, height] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox);
        for(let i = 0, ii = outline.length; i < ii; i += 2){
            outline[i] = (outline[i] - x) / width;
            outline[i + 1] = (outline[i + 1] - y) / height;
        }
        for(let i = 0, ii = points.length; i < ii; i += 2){
            points[i] = (points[i] - x) / width;
            points[i + 1] = (points[i + 1] - y) / height;
        }
    }
}
function computeMinMax(isLTR) {
    const outline = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outline);
    let lastX = outline[4];
    let lastY = outline[5];
    const minMax = [
        lastX,
        lastY,
        lastX,
        lastY
    ];
    let lastPointX = lastX;
    let lastPointY = lastY;
    const ltrCallback = isLTR ? Math.max : Math.min;
    for(let i = 6, ii = outline.length; i < ii; i += 6){
        const x = outline[i + 4], y = outline[i + 5];
        if (isNaN(outline[i])) {
            Util.pointBoundingBox(x, y, minMax);
            if (lastPointY < y) {
                lastPointX = x;
                lastPointY = y;
            } else if (lastPointY === y) {
                lastPointX = ltrCallback(lastPointX, x);
            }
        } else {
            const bbox = [
                Infinity,
                Infinity,
                -Infinity,
                -Infinity
            ];
            Util.bezierBoundingBox(lastX, lastY, ...outline.slice(i, i + 6), bbox);
            Util.rectBoundingBox(...bbox, minMax);
            if (lastPointY < bbox[3]) {
                lastPointX = bbox[2];
                lastPointY = bbox[3];
            } else if (lastPointY === bbox[3]) {
                lastPointX = ltrCallback(lastPointX, bbox[2]);
            }
        }
        lastX = x;
        lastY = y;
    }
    const bbox = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox);
    bbox[0] = minMax[0] - (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _innerMargin1);
    bbox[1] = minMax[1] - (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _innerMargin1);
    bbox[2] = minMax[2] - minMax[0] + 2 * (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _innerMargin1);
    bbox[3] = minMax[3] - minMax[1] + 2 * (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _innerMargin1);
    this.lastPoint = [
        lastPointX,
        lastPointY
    ];
}
; // ./src/display/editor/drawers/highlight.js
var _box2 = /*#__PURE__*/ new WeakMap(), _lastPoint = /*#__PURE__*/ new WeakMap(), _verticalEdges = /*#__PURE__*/ new WeakMap(), _intervals = /*#__PURE__*/ new WeakMap(), _getOutlines = /*#__PURE__*/ new WeakSet(), _binarySearch = /*#__PURE__*/ new WeakSet(), _insert = /*#__PURE__*/ new WeakSet(), _remove = /*#__PURE__*/ new WeakSet(), _breakEdge = /*#__PURE__*/ new WeakSet();
class HighlightOutliner {
    getOutlines() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _verticalEdges).sort((a, b)=>a[0] - b[0] || a[1] - b[1] || a[2] - b[2]);
        const outlineVerticalEdges = [];
        for (const edge of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _verticalEdges)){
            if (edge[3]) {
                outlineVerticalEdges.push(...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _breakEdge, breakEdge).call(this, edge));
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _insert, insert).call(this, edge);
            } else {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _remove, remove).call(this, edge);
                outlineVerticalEdges.push(...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _breakEdge, breakEdge).call(this, edge));
            }
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getOutlines, getOutlines).call(this, outlineVerticalEdges);
    }
    constructor(boxes, borderWidth = 0, innerMargin = 0, isLTR = true){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getOutlines);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _binarySearch);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _insert);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _remove);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _breakEdge);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box2, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastPoint, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _verticalEdges, {
            writable: true,
            value: []
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _intervals, {
            writable: true,
            value: []
        });
        const minMax = [
            Infinity,
            Infinity,
            -Infinity,
            -Infinity
        ];
        const NUMBER_OF_DIGITS = 4;
        const EPSILON = 10 ** -NUMBER_OF_DIGITS;
        for (const { x, y, width, height } of boxes){
            const x1 = Math.floor((x - borderWidth) / EPSILON) * EPSILON;
            const x2 = Math.ceil((x + width + borderWidth) / EPSILON) * EPSILON;
            const y1 = Math.floor((y - borderWidth) / EPSILON) * EPSILON;
            const y2 = Math.ceil((y + height + borderWidth) / EPSILON) * EPSILON;
            const left = [
                x1,
                y1,
                y2,
                true
            ];
            const right = [
                x2,
                y1,
                y2,
                false
            ];
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _verticalEdges).push(left, right);
            Util.rectBoundingBox(x1, y1, x2, y2, minMax);
        }
        const bboxWidth = minMax[2] - minMax[0] + 2 * innerMargin;
        const bboxHeight = minMax[3] - minMax[1] + 2 * innerMargin;
        const shiftedMinX = minMax[0] - innerMargin;
        const shiftedMinY = minMax[1] - innerMargin;
        const lastEdge = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _verticalEdges).at(isLTR ? -1 : -2);
        const lastPoint = [
            lastEdge[0],
            lastEdge[2]
        ];
        for (const edge of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _verticalEdges)){
            const [x, y1, y2] = edge;
            edge[0] = (x - shiftedMinX) / bboxWidth;
            edge[1] = (y1 - shiftedMinY) / bboxHeight;
            edge[2] = (y2 - shiftedMinY) / bboxHeight;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box2, new Float32Array([
            shiftedMinX,
            shiftedMinY,
            bboxWidth,
            bboxHeight
        ]));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastPoint, lastPoint);
    }
}
function getOutlines(outlineVerticalEdges) {
    const edges = [];
    const allEdges = new Set();
    for (const edge of outlineVerticalEdges){
        const [x, y1, y2] = edge;
        edges.push([
            x,
            y1,
            edge
        ], [
            x,
            y2,
            edge
        ]);
    }
    edges.sort((a, b)=>a[1] - b[1] || a[0] - b[0]);
    for(let i = 0, ii = edges.length; i < ii; i += 2){
        const edge1 = edges[i][2];
        const edge2 = edges[i + 1][2];
        edge1.push(edge2);
        edge2.push(edge1);
        allEdges.add(edge1);
        allEdges.add(edge2);
    }
    const outlines = [];
    let outline;
    while(allEdges.size > 0){
        const edge = allEdges.values().next().value;
        let [x, y1, y2, edge1, edge2] = edge;
        allEdges.delete(edge);
        let lastPointX = x;
        let lastPointY = y1;
        outline = [
            x,
            y2
        ];
        outlines.push(outline);
        while(true){
            let e;
            if (allEdges.has(edge1)) {
                e = edge1;
            } else if (allEdges.has(edge2)) {
                e = edge2;
            } else {
                break;
            }
            allEdges.delete(e);
            [x, y1, y2, edge1, edge2] = e;
            if (lastPointX !== x) {
                outline.push(lastPointX, lastPointY, x, lastPointY === y1 ? y1 : y2);
                lastPointX = x;
            }
            lastPointY = lastPointY === y1 ? y2 : y1;
        }
        outline.push(lastPointX, lastPointY);
    }
    return new HighlightOutline(outlines, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box2), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastPoint));
}
function binarySearch(y) {
    const array = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _intervals);
    let start = 0;
    let end = array.length - 1;
    while(start <= end){
        const middle = start + end >> 1;
        const y1 = array[middle][0];
        if (y1 === y) {
            return middle;
        }
        if (y1 < y) {
            start = middle + 1;
        } else {
            end = middle - 1;
        }
    }
    return end + 1;
}
function insert(param) {
    let [, y1, y2] = param;
    const index = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _binarySearch, binarySearch).call(this, y1);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _intervals).splice(index, 0, [
        y1,
        y2
    ]);
}
function remove(param) {
    let [, y1, y2] = param;
    const index = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _binarySearch, binarySearch).call(this, y1);
    for(let i = index; i < (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _intervals).length; i++){
        const [start, end] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _intervals)[i];
        if (start !== y1) {
            break;
        }
        if (start === y1 && end === y2) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _intervals).splice(i, 1);
            return;
        }
    }
    for(let i = index - 1; i >= 0; i--){
        const [start, end] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _intervals)[i];
        if (start !== y1) {
            break;
        }
        if (start === y1 && end === y2) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _intervals).splice(i, 1);
            return;
        }
    }
}
function breakEdge(edge) {
    const [x, y1, y2] = edge;
    const results = [
        [
            x,
            y1,
            y2
        ]
    ];
    const index = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _binarySearch, binarySearch).call(this, y2);
    for(let i = 0; i < index; i++){
        const [start, end] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _intervals)[i];
        for(let j = 0, jj = results.length; j < jj; j++){
            const [, y3, y4] = results[j];
            if (end <= y3 || y4 <= start) {
                continue;
            }
            if (y3 >= start) {
                if (y4 > end) {
                    results[j][1] = end;
                } else {
                    if (jj === 1) {
                        return [];
                    }
                    results.splice(j, 1);
                    j--;
                    jj--;
                }
                continue;
            }
            results[j][2] = start;
            if (y4 > end) {
                results.push([
                    x,
                    end,
                    y4
                ]);
            }
        }
    }
    return results;
}
var _box3 = /*#__PURE__*/ new WeakMap(), _outlines = /*#__PURE__*/ new WeakMap();
class HighlightOutline extends Outline {
    toSVGPath() {
        const buffer = [];
        for (const polygon of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlines)){
            let [prevX, prevY] = polygon;
            buffer.push("M".concat(prevX, " ").concat(prevY));
            for(let i = 2; i < polygon.length; i += 2){
                const x = polygon[i];
                const y = polygon[i + 1];
                if (x === prevX) {
                    buffer.push("V".concat(y));
                    prevY = y;
                } else if (y === prevY) {
                    buffer.push("H".concat(x));
                    prevX = x;
                }
            }
            buffer.push("Z");
        }
        return buffer.join(" ");
    }
    serialize(param, _rotation) {
        let [blX, blY, trX, trY] = param;
        const outlines = [];
        const width = trX - blX;
        const height = trY - blY;
        for (const outline of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlines)){
            const points = new Array(outline.length);
            for(let i = 0; i < outline.length; i += 2){
                points[i] = blX + outline[i] * width;
                points[i + 1] = trY - outline[i + 1] * height;
            }
            outlines.push(points);
        }
        return outlines;
    }
    get box() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box3);
    }
    get classNamesForOutlining() {
        return [
            "highlightOutline"
        ];
    }
    constructor(outlines, box, lastPoint){
        super(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box3, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlines, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlines, outlines);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _box3, box);
        this.lastPoint = lastPoint;
    }
}
class FreeHighlightOutliner extends FreeDrawOutliner {
    newFreeDrawOutline(outline, points, box, scaleFactor, innerMargin, isLTR) {
        return new FreeHighlightOutline(outline, points, box, scaleFactor, innerMargin, isLTR);
    }
}
class FreeHighlightOutline extends FreeDrawOutline {
    newOutliner(point, box, scaleFactor, thickness, isLTR) {
        let innerMargin = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 0;
        return new FreeHighlightOutliner(point, box, scaleFactor, thickness, isLTR, innerMargin);
    }
}
; // ./src/display/editor/color_picker.js
var _button = /*#__PURE__*/ new WeakMap(), _buttonSwatch = /*#__PURE__*/ new WeakMap(), _defaultColor = /*#__PURE__*/ new WeakMap(), _dropdown = /*#__PURE__*/ new WeakMap(), _dropdownWasFromKeyboard = /*#__PURE__*/ new WeakMap(), _isMainColorPicker = /*#__PURE__*/ new WeakMap(), _editor2 = /*#__PURE__*/ new WeakMap(), _eventBus = /*#__PURE__*/ new WeakMap(), _openDropdownAC = /*#__PURE__*/ new WeakMap(), _uiManager1 = /*#__PURE__*/ new WeakMap(), _type = /*#__PURE__*/ new WeakMap(), _getDropdownRoot = /*#__PURE__*/ new WeakSet(), _colorSelect = /*#__PURE__*/ new WeakSet(), _keyDown1 = /*#__PURE__*/ new WeakSet(), _openDropdown = /*#__PURE__*/ new WeakSet(), _pointerDown = /*#__PURE__*/ new WeakSet(), _isDropdownVisible = /*#__PURE__*/ new WeakMap();
class ColorPicker {
    static get _keyboardManager() {
        return shadow(this, "_keyboardManager", new KeyboardManager([
            [
                [
                    "Escape",
                    "mac+Escape"
                ],
                ColorPicker.prototype._hideDropdownFromKeyboard
            ],
            [
                [
                    " ",
                    "mac+ "
                ],
                ColorPicker.prototype._colorSelectFromKeyboard
            ],
            [
                [
                    "ArrowDown",
                    "ArrowRight",
                    "mac+ArrowDown",
                    "mac+ArrowRight"
                ],
                ColorPicker.prototype._moveToNext
            ],
            [
                [
                    "ArrowUp",
                    "ArrowLeft",
                    "mac+ArrowUp",
                    "mac+ArrowLeft"
                ],
                ColorPicker.prototype._moveToPrevious
            ],
            [
                [
                    "Home",
                    "mac+Home"
                ],
                ColorPicker.prototype._moveToBeginning
            ],
            [
                [
                    "End",
                    "mac+End"
                ],
                ColorPicker.prototype._moveToEnd
            ]
        ]));
    }
    renderButton() {
        const button = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _button, document.createElement("button"));
        button.className = "colorPicker";
        button.tabIndex = "0";
        button.setAttribute("data-l10n-id", "pdfjs-editor-colorpicker-button");
        button.setAttribute("aria-haspopup", true);
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager1)._signal;
        button.addEventListener("click", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _openDropdown, openDropdown).bind(this), {
            signal
        });
        button.addEventListener("keydown", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keyDown1, keyDown1).bind(this), {
            signal
        });
        const swatch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _buttonSwatch, document.createElement("span"));
        swatch.className = "swatch";
        swatch.setAttribute("aria-hidden", true);
        swatch.style.backgroundColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _defaultColor);
        button.append(swatch);
        return button;
    }
    renderMainDropdown() {
        const dropdown = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getDropdownRoot, getDropdownRoot).call(this));
        dropdown.setAttribute("aria-orientation", "horizontal");
        dropdown.setAttribute("aria-labelledby", "highlightColorPickerLabel");
        return dropdown;
    }
    _colorSelectFromKeyboard(event) {
        if (event.target === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _button)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _openDropdown, openDropdown).call(this, event);
            return;
        }
        const color = event.target.getAttribute("data-color");
        if (!color) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _colorSelect, colorSelect).call(this, color, event);
    }
    _moveToNext(event) {
        var _event_target_nextSibling;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDropdownVisible)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _openDropdown, openDropdown).call(this, event);
            return;
        }
        if (event.target === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _button)) {
            var _class_private_field_get_firstChild;
            (_class_private_field_get_firstChild = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown).firstChild) === null || _class_private_field_get_firstChild === void 0 ? void 0 : _class_private_field_get_firstChild.focus();
            return;
        }
        (_event_target_nextSibling = event.target.nextSibling) === null || _event_target_nextSibling === void 0 ? void 0 : _event_target_nextSibling.focus();
    }
    _moveToPrevious(event) {
        var _class_private_field_get, _event_target_previousSibling;
        if (event.target === ((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.firstChild) || event.target === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _button)) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDropdownVisible)) {
                this._hideDropdownFromKeyboard();
            }
            return;
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDropdownVisible)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _openDropdown, openDropdown).call(this, event);
        }
        (_event_target_previousSibling = event.target.previousSibling) === null || _event_target_previousSibling === void 0 ? void 0 : _event_target_previousSibling.focus();
    }
    _moveToBeginning(event) {
        var _class_private_field_get_firstChild;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDropdownVisible)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _openDropdown, openDropdown).call(this, event);
            return;
        }
        (_class_private_field_get_firstChild = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown).firstChild) === null || _class_private_field_get_firstChild === void 0 ? void 0 : _class_private_field_get_firstChild.focus();
    }
    _moveToEnd(event) {
        var _class_private_field_get_lastChild;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDropdownVisible)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _openDropdown, openDropdown).call(this, event);
            return;
        }
        (_class_private_field_get_lastChild = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown).lastChild) === null || _class_private_field_get_lastChild === void 0 ? void 0 : _class_private_field_get_lastChild.focus();
    }
    hideDropdown() {
        var _class_private_field_get, _class_private_field_get1;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.classList.add("hidden");
        (_class_private_field_get1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _openDropdownAC)) === null || _class_private_field_get1 === void 0 ? void 0 : _class_private_field_get1.abort();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _openDropdownAC, null);
    }
    _hideDropdownFromKeyboard() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isMainColorPicker)) {
            return;
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDropdownVisible)) {
            var _class_private_field_get;
            (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor2)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.unselect();
            return;
        }
        this.hideDropdown();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _button).focus({
            preventScroll: true,
            focusVisible: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdownWasFromKeyboard)
        });
    }
    updateColor(color) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _buttonSwatch)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _buttonSwatch).style.backgroundColor = color;
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown)) {
            return;
        }
        const i = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager1).highlightColors.values();
        for (const child of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown).children){
            child.setAttribute("aria-selected", i.next().value === color);
        }
    }
    destroy() {
        var _class_private_field_get, _class_private_field_get1;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _button)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.remove();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _button, null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _buttonSwatch, null);
        (_class_private_field_get1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown)) === null || _class_private_field_get1 === void 0 ? void 0 : _class_private_field_get1.remove();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown, null);
    }
    constructor({ editor = null, uiManager = null }){
        var _class_private_field_get;
        var _ColorPicker;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getDropdownRoot);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _colorSelect);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keyDown1);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _openDropdown);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pointerDown);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDropdownVisible, {
            get: get_isDropdownVisible,
            set: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _button, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _buttonSwatch, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _defaultColor, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdownWasFromKeyboard, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isMainColorPicker, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor2, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _eventBus, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _openDropdownAC, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager1, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _type, {
            writable: true,
            value: void 0
        });
        if (editor) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isMainColorPicker, false);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _type, AnnotationEditorParamsType.HIGHLIGHT_COLOR);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editor2, editor);
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isMainColorPicker, true);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _type, AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager1, (editor === null || editor === void 0 ? void 0 : editor._uiManager) || uiManager);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _eventBus, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager1)._eventBus);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _defaultColor, (editor === null || editor === void 0 ? void 0 : editor.color) || ((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager1)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.highlightColors.values().next().value) || "#FFFF98");
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(_ColorPicker = ColorPicker, ColorPicker, _l10nColor, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(ColorPicker, ColorPicker, _l10nColor) || Object.freeze({
            blue: "pdfjs-editor-colorpicker-blue",
            green: "pdfjs-editor-colorpicker-green",
            pink: "pdfjs-editor-colorpicker-pink",
            red: "pdfjs-editor-colorpicker-red",
            yellow: "pdfjs-editor-colorpicker-yellow"
        }));
    }
}
var _l10nColor = {
    writable: true,
    value: null
};
function getDropdownRoot() {
    const div = document.createElement("div");
    const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager1)._signal;
    div.addEventListener("contextmenu", noContextMenu, {
        signal
    });
    div.className = "dropdown";
    div.role = "listbox";
    div.setAttribute("aria-multiselectable", false);
    div.setAttribute("aria-orientation", "vertical");
    div.setAttribute("data-l10n-id", "pdfjs-editor-colorpicker-dropdown");
    for (const [name, color] of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager1).highlightColors){
        const button = document.createElement("button");
        button.tabIndex = "0";
        button.role = "option";
        button.setAttribute("data-color", color);
        button.title = name;
        button.setAttribute("data-l10n-id", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(ColorPicker, ColorPicker, _l10nColor)[name]);
        const swatch = document.createElement("span");
        button.append(swatch);
        swatch.className = "swatch";
        swatch.style.backgroundColor = color;
        button.setAttribute("aria-selected", color === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _defaultColor));
        button.addEventListener("click", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _colorSelect, colorSelect).bind(this, color), {
            signal
        });
        div.append(button);
    }
    div.addEventListener("keydown", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keyDown1, keyDown1).bind(this), {
        signal
    });
    return div;
}
function colorSelect(color, event) {
    event.stopPropagation();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _eventBus).dispatch("switchannotationeditorparams", {
        source: this,
        type: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _type),
        value: color
    });
}
function keyDown1(event) {
    ColorPicker._keyboardManager.exec(this, event);
}
function openDropdown(event) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDropdownVisible)) {
        this.hideDropdown();
        return;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdownWasFromKeyboard, event.detail === 0);
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _openDropdownAC)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _openDropdownAC, new AbortController());
        window.addEventListener("pointerdown", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _pointerDown, pointerDown1).bind(this), {
            signal: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager1).combinedSignal((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _openDropdownAC))
        });
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown).classList.remove("hidden");
        return;
    }
    const root = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getDropdownRoot, getDropdownRoot).call(this));
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _button).append(root);
}
function pointerDown1(event) {
    var _class_private_field_get;
    if ((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.contains(event.target)) {
        return;
    }
    this.hideDropdown();
}
function get_isDropdownVisible() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown) && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _dropdown).classList.contains("hidden");
}
; // ./src/display/editor/highlight.js
var _anchorNode = /*#__PURE__*/ new WeakMap(), _anchorOffset = /*#__PURE__*/ new WeakMap(), _boxes = /*#__PURE__*/ new WeakMap(), _clipPathId = /*#__PURE__*/ new WeakMap(), _colorPicker1 = /*#__PURE__*/ new WeakMap(), _focusOutlines = /*#__PURE__*/ new WeakMap(), _focusNode = /*#__PURE__*/ new WeakMap(), _focusOffset = /*#__PURE__*/ new WeakMap(), _highlightDiv = /*#__PURE__*/ new WeakMap(), _highlightOutlines = /*#__PURE__*/ new WeakMap(), _id3 = /*#__PURE__*/ new WeakMap(), _isFreeHighlight = /*#__PURE__*/ new WeakMap(), _lastPoint1 = /*#__PURE__*/ new WeakMap(), _opacity = /*#__PURE__*/ new WeakMap(), _outlineId = /*#__PURE__*/ new WeakMap(), _text = /*#__PURE__*/ new WeakMap(), _thickness1 = /*#__PURE__*/ new WeakMap(), _methodOfCreation = /*#__PURE__*/ new WeakMap(), _createOutlines = /*#__PURE__*/ new WeakSet(), _createFreeOutlines = /*#__PURE__*/ new WeakSet(), _updateColor1 = /*#__PURE__*/ new WeakSet(), _updateThickness = /*#__PURE__*/ new WeakSet(), _changeThickness = /*#__PURE__*/ new WeakSet(), _cleanDrawLayer = /*#__PURE__*/ new WeakSet(), _addToDrawLayer = /*#__PURE__*/ new WeakSet(), _keydown = /*#__PURE__*/ new WeakSet(), _setCaret = /*#__PURE__*/ new WeakSet(), _getRotation = /*#__PURE__*/ new WeakSet(), _serializeBoxes = /*#__PURE__*/ new WeakSet(), _serializeOutlines = /*#__PURE__*/ new WeakSet(), _hasElementChanged1 = /*#__PURE__*/ new WeakSet();
class HighlightEditor extends AnnotationEditor {
    static get _keyboardManager() {
        const proto = HighlightEditor.prototype;
        return shadow(this, "_keyboardManager", new KeyboardManager([
            [
                [
                    "ArrowLeft",
                    "mac+ArrowLeft"
                ],
                proto._moveCaret,
                {
                    args: [
                        0
                    ]
                }
            ],
            [
                [
                    "ArrowRight",
                    "mac+ArrowRight"
                ],
                proto._moveCaret,
                {
                    args: [
                        1
                    ]
                }
            ],
            [
                [
                    "ArrowUp",
                    "mac+ArrowUp"
                ],
                proto._moveCaret,
                {
                    args: [
                        2
                    ]
                }
            ],
            [
                [
                    "ArrowDown",
                    "mac+ArrowDown"
                ],
                proto._moveCaret,
                {
                    args: [
                        3
                    ]
                }
            ]
        ]));
    }
    get telemetryInitialData() {
        return {
            action: "added",
            type: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isFreeHighlight) ? "free_highlight" : "highlight",
            color: this._uiManager.highlightColorNames.get(this.color),
            thickness: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness1),
            methodOfCreation: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _methodOfCreation)
        };
    }
    get telemetryFinalData() {
        return {
            type: "highlight",
            color: this._uiManager.highlightColorNames.get(this.color)
        };
    }
    static computeTelemetryFinalData(data) {
        return {
            numberOfColors: data.get("color").size
        };
    }
    static initialize(l10n, uiManager) {
        var _uiManager_highlightColors;
        var _HighlightEditor;
        AnnotationEditor.initialize(l10n, uiManager);
        (_HighlightEditor = HighlightEditor)._defaultColor || (_HighlightEditor._defaultColor = ((_uiManager_highlightColors = uiManager.highlightColors) === null || _uiManager_highlightColors === void 0 ? void 0 : _uiManager_highlightColors.values().next().value) || "#fff066");
    }
    static updateDefaultParams(type, value) {
        switch(type){
            case AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR:
                HighlightEditor._defaultColor = value;
                break;
            case AnnotationEditorParamsType.HIGHLIGHT_THICKNESS:
                HighlightEditor._defaultThickness = value;
                break;
        }
    }
    translateInPage(x, y) {}
    get toolbarPosition() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastPoint1);
    }
    updateParams(type, value) {
        switch(type){
            case AnnotationEditorParamsType.HIGHLIGHT_COLOR:
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateColor1, updateColor1).call(this, value);
                break;
            case AnnotationEditorParamsType.HIGHLIGHT_THICKNESS:
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateThickness, updateThickness).call(this, value);
                break;
        }
    }
    static get defaultPropertiesToUpdate() {
        return [
            [
                AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR,
                HighlightEditor._defaultColor
            ],
            [
                AnnotationEditorParamsType.HIGHLIGHT_THICKNESS,
                HighlightEditor._defaultThickness
            ]
        ];
    }
    get propertiesToUpdate() {
        return [
            [
                AnnotationEditorParamsType.HIGHLIGHT_COLOR,
                this.color || HighlightEditor._defaultColor
            ],
            [
                AnnotationEditorParamsType.HIGHLIGHT_THICKNESS,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness1) || HighlightEditor._defaultThickness
            ],
            [
                AnnotationEditorParamsType.HIGHLIGHT_FREE,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isFreeHighlight)
            ]
        ];
    }
    async addEditToolbar() {
        const toolbar = await super.addEditToolbar();
        if (!toolbar) {
            return null;
        }
        if (this._uiManager.highlightColors) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _colorPicker1, new ColorPicker({
                editor: this
            }));
            toolbar.addColorPicker((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _colorPicker1));
        }
        return toolbar;
    }
    disableEditing() {
        super.disableEditing();
        this.div.classList.toggle("disabled", true);
    }
    enableEditing() {
        super.enableEditing();
        this.div.classList.toggle("disabled", false);
    }
    fixAndSetPosition() {
        return super.fixAndSetPosition((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getRotation, getRotation).call(this));
    }
    getBaseTranslation() {
        return [
            0,
            0
        ];
    }
    getRect(tx, ty) {
        return super.getRect(tx, ty, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getRotation, getRotation).call(this));
    }
    onceAdded(focus) {
        if (!this.annotationElementId) {
            this.parent.addUndoableEditor(this);
        }
        if (focus) {
            this.div.focus();
        }
    }
    remove() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cleanDrawLayer, cleanDrawLayer).call(this);
        this._reportTelemetry({
            action: "deleted"
        });
        super.remove();
    }
    rebuild() {
        if (!this.parent) {
            return;
        }
        super.rebuild();
        if (this.div === null) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addToDrawLayer, addToDrawLayer).call(this);
        if (!this.isAttachedToDOM) {
            this.parent.add(this);
        }
    }
    setParent(parent) {
        let mustBeSelected = false;
        if (this.parent && !parent) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cleanDrawLayer, cleanDrawLayer).call(this);
        } else if (parent) {
            var _this_div;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addToDrawLayer, addToDrawLayer).call(this, parent);
            mustBeSelected = !this.parent && ((_this_div = this.div) === null || _this_div === void 0 ? void 0 : _this_div.classList.contains("selectedEditor"));
        }
        super.setParent(parent);
        this.show(this._isVisible);
        if (mustBeSelected) {
            this.select();
        }
    }
    rotate(angle) {
        const { drawLayer } = this.parent;
        let box;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isFreeHighlight)) {
            angle = (angle - this.rotation + 360) % 360;
            box = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(HighlightEditor, HighlightEditor, rotateBbox).call(HighlightEditor, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightOutlines).box, angle);
        } else {
            box = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(HighlightEditor, HighlightEditor, rotateBbox).call(HighlightEditor, [
                this.x,
                this.y,
                this.width,
                this.height
            ], angle);
        }
        drawLayer.updateProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id3), {
            bbox: box,
            root: {
                "data-main-rotation": angle
            }
        });
        drawLayer.updateProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlineId), {
            bbox: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(HighlightEditor, HighlightEditor, rotateBbox).call(HighlightEditor, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOutlines).box, angle),
            root: {
                "data-main-rotation": angle
            }
        });
    }
    render() {
        if (this.div) {
            return this.div;
        }
        const div = super.render();
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _text)) {
            div.setAttribute("aria-label", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _text));
            div.setAttribute("role", "mark");
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isFreeHighlight)) {
            div.classList.add("free");
        } else {
            this.div.addEventListener("keydown", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keydown, keydown).bind(this), {
                signal: this._uiManager._signal
            });
        }
        const highlightDiv = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightDiv, document.createElement("div"));
        div.append(highlightDiv);
        highlightDiv.setAttribute("aria-hidden", "true");
        highlightDiv.className = "internal";
        highlightDiv.style.clipPath = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _clipPathId);
        const [parentWidth, parentHeight] = this.parentDimensions;
        this.setDims(this.width * parentWidth, this.height * parentHeight);
        bindEvents(this, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightDiv), [
            "pointerover",
            "pointerleave"
        ]);
        this.enableEditing();
        return div;
    }
    pointerover() {
        if (!this.isSelected) {
            var _this_parent;
            (_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.drawLayer.updateProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlineId), {
                rootClass: {
                    hovered: true
                }
            });
        }
    }
    pointerleave() {
        if (!this.isSelected) {
            var _this_parent;
            (_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.drawLayer.updateProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlineId), {
                rootClass: {
                    hovered: false
                }
            });
        }
    }
    _moveCaret(direction) {
        this.parent.unselect(this);
        switch(direction){
            case 0:
            case 2:
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setCaret, setCaret).call(this, true);
                break;
            case 1:
            case 3:
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setCaret, setCaret).call(this, false);
                break;
        }
    }
    select() {
        var _this_parent;
        super.select();
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlineId)) {
            return;
        }
        (_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.drawLayer.updateProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlineId), {
            rootClass: {
                hovered: false,
                selected: true
            }
        });
    }
    unselect() {
        var _this_parent;
        super.unselect();
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlineId)) {
            return;
        }
        (_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.drawLayer.updateProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlineId), {
            rootClass: {
                selected: false
            }
        });
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isFreeHighlight)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setCaret, setCaret).call(this, false);
        }
    }
    get _mustFixPosition() {
        return !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isFreeHighlight);
    }
    show() {
        let visible = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this._isVisible;
        super.show(visible);
        if (this.parent) {
            this.parent.drawLayer.updateProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id3), {
                rootClass: {
                    hidden: !visible
                }
            });
            this.parent.drawLayer.updateProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlineId), {
                rootClass: {
                    hidden: !visible
                }
            });
        }
    }
    static startHighlighting(parent, isLTR, param) {
        let { target: textLayer, x, y } = param;
        const { x: layerX, y: layerY, width: parentWidth, height: parentHeight } = textLayer.getBoundingClientRect();
        const ac = new AbortController();
        const signal = parent.combinedSignal(ac);
        const pointerUpCallback = (e)=>{
            ac.abort();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, HighlightEditor, endHighlight).call(HighlightEditor, parent, e);
        };
        window.addEventListener("blur", pointerUpCallback, {
            signal
        });
        window.addEventListener("pointerup", pointerUpCallback, {
            signal
        });
        window.addEventListener("pointerdown", stopEvent, {
            capture: true,
            passive: false,
            signal
        });
        window.addEventListener("contextmenu", noContextMenu, {
            signal
        });
        textLayer.addEventListener("pointermove", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, HighlightEditor, highlightMove).bind(this, parent), {
            signal
        });
        this._freeHighlight = new FreeHighlightOutliner({
            x,
            y
        }, [
            layerX,
            layerY,
            parentWidth,
            parentHeight
        ], parent.scale, this._defaultThickness / 2, isLTR, 0.001);
        ({ id: this._freeHighlightId, clipPathId: this._freeHighlightClipId } = parent.drawLayer.draw({
            bbox: [
                0,
                0,
                1,
                1
            ],
            root: {
                viewBox: "0 0 1 1",
                fill: this._defaultColor,
                "fill-opacity": this._defaultOpacity
            },
            rootClass: {
                highlight: true,
                free: true
            },
            path: {
                d: this._freeHighlight.toSVGPath()
            }
        }, true, true));
    }
    static async deserialize(data, parent, uiManager) {
        let initialData = null;
        if (data instanceof HighlightAnnotationElement) {
            const { data: { quadPoints, rect, rotation, id, color, opacity, popupRef }, parent: { page: { pageNumber } } } = data;
            initialData = data = {
                annotationType: AnnotationEditorType.HIGHLIGHT,
                color: Array.from(color),
                opacity,
                quadPoints,
                boxes: null,
                pageIndex: pageNumber - 1,
                rect: rect.slice(0),
                rotation,
                id,
                deleted: false,
                popupRef
            };
        } else if (data instanceof InkAnnotationElement) {
            const { data: { inkLists, rect, rotation, id, color, borderStyle: { rawWidth: thickness }, popupRef }, parent: { page: { pageNumber } } } = data;
            initialData = data = {
                annotationType: AnnotationEditorType.HIGHLIGHT,
                color: Array.from(color),
                thickness,
                inkLists,
                boxes: null,
                pageIndex: pageNumber - 1,
                rect: rect.slice(0),
                rotation,
                id,
                deleted: false,
                popupRef
            };
        }
        const { color, quadPoints, inkLists, opacity } = data;
        const editor = await super.deserialize(data, parent, uiManager);
        editor.color = Util.makeHexColor(...color);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _opacity, opacity || 1);
        if (inkLists) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _thickness1, data.thickness);
        }
        editor.annotationElementId = data.id || null;
        editor._initialData = initialData;
        const [pageWidth, pageHeight] = editor.pageDimensions;
        const [pageX, pageY] = editor.pageTranslation;
        if (quadPoints) {
            const boxes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _boxes, []);
            for(let i = 0; i < quadPoints.length; i += 8){
                boxes.push({
                    x: (quadPoints[i] - pageX) / pageWidth,
                    y: 1 - (quadPoints[i + 1] - pageY) / pageHeight,
                    width: (quadPoints[i + 2] - quadPoints[i]) / pageWidth,
                    height: (quadPoints[i + 1] - quadPoints[i + 5]) / pageHeight
                });
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _createOutlines, createOutlines).call(editor);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _addToDrawLayer, addToDrawLayer).call(editor);
            editor.rotate(editor.rotation);
        } else if (inkLists) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _isFreeHighlight, true);
            const points = inkLists[0];
            const point = {
                x: points[0] - pageX,
                y: pageHeight - (points[1] - pageY)
            };
            const outliner = new FreeHighlightOutliner(point, [
                0,
                0,
                pageWidth,
                pageHeight
            ], 1, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _thickness1) / 2, true, 0.001);
            for(let i = 0, ii = points.length; i < ii; i += 2){
                point.x = points[i] - pageX;
                point.y = pageHeight - (points[i + 1] - pageY);
                outliner.add(point);
            }
            const { id, clipPathId } = parent.drawLayer.draw({
                bbox: [
                    0,
                    0,
                    1,
                    1
                ],
                root: {
                    viewBox: "0 0 1 1",
                    fill: editor.color,
                    "fill-opacity": editor._defaultOpacity
                },
                rootClass: {
                    highlight: true,
                    free: true
                },
                path: {
                    d: outliner.toSVGPath()
                }
            }, true, true);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _createFreeOutlines, createFreeOutlines).call(editor, {
                highlightOutlines: outliner.getOutlines(),
                highlightId: id,
                clipPathId
            });
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _addToDrawLayer, addToDrawLayer).call(editor);
            editor.rotate(editor.parentRotation);
        }
        return editor;
    }
    serialize() {
        let isForCopying = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        if (this.isEmpty() || isForCopying) {
            return null;
        }
        if (this.deleted) {
            return this.serializeDeleted();
        }
        const rect = this.getRect(0, 0);
        const color = AnnotationEditor._colorManager.convert(this.color);
        const serialized = {
            annotationType: AnnotationEditorType.HIGHLIGHT,
            color,
            opacity: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _opacity),
            thickness: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness1),
            quadPoints: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serializeBoxes, serializeBoxes).call(this),
            outlines: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serializeOutlines, serializeOutlines).call(this, rect),
            pageIndex: this.pageIndex,
            rect,
            rotation: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getRotation, getRotation).call(this),
            structTreeParentId: this._structTreeParentId
        };
        if (this.annotationElementId && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasElementChanged1, hasElementChanged1).call(this, serialized)) {
            return null;
        }
        serialized.id = this.annotationElementId;
        return serialized;
    }
    renderAnnotationElement(annotation) {
        annotation.updateEdited({
            rect: this.getRect(0, 0)
        });
        return null;
    }
    static canCreateNewEmptyEditor() {
        return false;
    }
    constructor(params){
        super({
            ...params,
            name: "highlightEditor"
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createOutlines), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createFreeOutlines), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateColor1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateThickness), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _changeThickness), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cleanDrawLayer), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addToDrawLayer), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _keydown), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _setCaret), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getRotation), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serializeBoxes), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serializeOutlines), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasElementChanged1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _anchorNode, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _anchorOffset, {
            writable: true,
            value: 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boxes, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _clipPathId, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _colorPicker1, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOutlines, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusNode, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOffset, {
            writable: true,
            value: 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightDiv, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightOutlines, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id3, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isFreeHighlight, {
            writable: true,
            value: false
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastPoint1, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _opacity, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlineId, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _text, {
            writable: true,
            value: ""
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness1, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _methodOfCreation, {
            writable: true,
            value: ""
        });
        this.color = params.color || HighlightEditor._defaultColor;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness1, params.thickness || HighlightEditor._defaultThickness);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _opacity, params.opacity || HighlightEditor._defaultOpacity);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boxes, params.boxes || null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _methodOfCreation, params.methodOfCreation || "");
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _text, params.text || "");
        this._isDraggable = false;
        this.defaultL10nId = "pdfjs-editor-highlight-editor";
        if (params.highlightId > -1) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isFreeHighlight, true);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createFreeOutlines, createFreeOutlines).call(this, params);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addToDrawLayer, addToDrawLayer).call(this);
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boxes)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _anchorNode, params.anchorNode);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _anchorOffset, params.anchorOffset);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusNode, params.focusNode);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOffset, params.focusOffset);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createOutlines, createOutlines).call(this);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addToDrawLayer, addToDrawLayer).call(this);
            this.rotate(this.rotation);
        }
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(HighlightEditor, "_defaultColor", null);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(HighlightEditor, "_defaultOpacity", 1);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(HighlightEditor, "_defaultThickness", 12);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(HighlightEditor, "_type", "highlight");
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(HighlightEditor, "_editorType", AnnotationEditorType.HIGHLIGHT);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(HighlightEditor, "_freeHighlightId", -1);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(HighlightEditor, "_freeHighlight", null);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(HighlightEditor, "_freeHighlightClipId", "");
function createOutlines() {
    const outliner = new HighlightOutliner((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boxes), 0.001);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightOutlines, outliner.getOutlines());
    [this.x, this.y, this.width, this.height] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightOutlines).box;
    const outlinerForOutline = new HighlightOutliner((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boxes), 0.0025, 0.001, this._uiManager.direction === "ltr");
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOutlines, outlinerForOutline.getOutlines());
    const { lastPoint } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOutlines);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastPoint1, [
        (lastPoint[0] - this.x) / this.width,
        (lastPoint[1] - this.y) / this.height
    ]);
}
function createFreeOutlines(param) {
    let { highlightOutlines, highlightId, clipPathId } = param;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightOutlines, highlightOutlines);
    const extraThickness = 1.5;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOutlines, highlightOutlines.getNewOutline((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness1) / 2 + extraThickness, 0.0025));
    if (highlightId >= 0) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id3, highlightId);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _clipPathId, clipPathId);
        this.parent.drawLayer.finalizeDraw(highlightId, {
            bbox: highlightOutlines.box,
            path: {
                d: highlightOutlines.toSVGPath()
            }
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlineId, this.parent.drawLayer.drawOutline({
            rootClass: {
                highlightOutline: true,
                free: true
            },
            bbox: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOutlines).box,
            path: {
                d: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOutlines).toSVGPath()
            }
        }, true));
    } else if (this.parent) {
        const angle = this.parent.viewport.rotation;
        this.parent.drawLayer.updateProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id3), {
            bbox: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(HighlightEditor, HighlightEditor, rotateBbox).call(HighlightEditor, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightOutlines).box, (angle - this.rotation + 360) % 360),
            path: {
                d: highlightOutlines.toSVGPath()
            }
        });
        this.parent.drawLayer.updateProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlineId), {
            bbox: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(HighlightEditor, HighlightEditor, rotateBbox).call(HighlightEditor, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOutlines).box, angle),
            path: {
                d: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOutlines).toSVGPath()
            }
        });
    }
    const [x, y, width, height] = highlightOutlines.box;
    switch(this.rotation){
        case 0:
            this.x = x;
            this.y = y;
            this.width = width;
            this.height = height;
            break;
        case 90:
            {
                const [pageWidth, pageHeight] = this.parentDimensions;
                this.x = y;
                this.y = 1 - x;
                this.width = width * pageHeight / pageWidth;
                this.height = height * pageWidth / pageHeight;
                break;
            }
        case 180:
            this.x = 1 - x;
            this.y = 1 - y;
            this.width = width;
            this.height = height;
            break;
        case 270:
            {
                const [pageWidth, pageHeight] = this.parentDimensions;
                this.x = 1 - y;
                this.y = x;
                this.width = width * pageHeight / pageWidth;
                this.height = height * pageWidth / pageHeight;
                break;
            }
    }
    const { lastPoint } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOutlines);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastPoint1, [
        (lastPoint[0] - x) / width,
        (lastPoint[1] - y) / height
    ]);
}
function updateColor1(color) {
    const setColorAndOpacity = (col, opa)=>{
        var _this_parent, _class_private_field_get;
        this.color = col;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _opacity, opa);
        (_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.drawLayer.updateProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id3), {
            root: {
                fill: col,
                "fill-opacity": opa
            }
        });
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _colorPicker1)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.updateColor(col);
    };
    const savedColor = this.color;
    const savedOpacity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _opacity);
    this.addCommands({
        cmd: setColorAndOpacity.bind(this, color, HighlightEditor._defaultOpacity),
        undo: setColorAndOpacity.bind(this, savedColor, savedOpacity),
        post: this._uiManager.updateUI.bind(this._uiManager, this),
        mustExec: true,
        type: AnnotationEditorParamsType.HIGHLIGHT_COLOR,
        overwriteIfSameType: true,
        keepUndo: true
    });
    this._reportTelemetry({
        action: "color_changed",
        color: this._uiManager.highlightColorNames.get(color)
    }, true);
}
function updateThickness(thickness) {
    const savedThickness = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness1);
    const setThickness = (th)=>{
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness1, th);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _changeThickness, changeThickness).call(this, th);
    };
    this.addCommands({
        cmd: setThickness.bind(this, thickness),
        undo: setThickness.bind(this, savedThickness),
        post: this._uiManager.updateUI.bind(this._uiManager, this),
        mustExec: true,
        type: AnnotationEditorParamsType.INK_THICKNESS,
        overwriteIfSameType: true,
        keepUndo: true
    });
    this._reportTelemetry({
        action: "thickness_changed",
        thickness
    }, true);
}
function changeThickness(thickness) {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isFreeHighlight)) {
        return;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createFreeOutlines, createFreeOutlines).call(this, {
        highlightOutlines: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightOutlines).getNewOutline(thickness / 2)
    });
    this.fixAndSetPosition();
    const [parentWidth, parentHeight] = this.parentDimensions;
    this.setDims(this.width * parentWidth, this.height * parentHeight);
}
function cleanDrawLayer() {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id3) === null || !this.parent) {
        return;
    }
    this.parent.drawLayer.remove((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id3));
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id3, null);
    this.parent.drawLayer.remove((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlineId));
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlineId, null);
}
function addToDrawLayer() {
    let parent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.parent;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id3) !== null) {
        return;
    }
    ({ id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_destructure$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _id3).value, clipPathId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_destructure$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _clipPathId).value } = parent.drawLayer.draw({
        bbox: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightOutlines).box,
        root: {
            viewBox: "0 0 1 1",
            fill: this.color,
            "fill-opacity": (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _opacity)
        },
        rootClass: {
            highlight: true,
            free: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isFreeHighlight)
        },
        path: {
            d: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightOutlines).toSVGPath()
        }
    }, false, true));
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlineId, parent.drawLayer.drawOutline({
        rootClass: {
            highlightOutline: true,
            free: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isFreeHighlight)
        },
        bbox: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOutlines).box,
        path: {
            d: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOutlines).toSVGPath()
        }
    }, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isFreeHighlight)));
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightDiv)) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightDiv).style.clipPath = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _clipPathId);
    }
}
function rotateBbox(param, angle) {
    let [x, y, width, height] = param;
    switch(angle){
        case 90:
            return [
                1 - y - height,
                x,
                height,
                width
            ];
        case 180:
            return [
                1 - x - width,
                1 - y - height,
                width,
                height
            ];
        case 270:
            return [
                y,
                1 - x - width,
                height,
                width
            ];
    }
    return [
        x,
        y,
        width,
        height
    ];
}
function keydown(event) {
    HighlightEditor._keyboardManager.exec(this, event);
}
function setCaret(start) {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _anchorNode)) {
        return;
    }
    const selection = window.getSelection();
    if (start) {
        selection.setPosition((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _anchorNode), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _anchorOffset));
    } else {
        selection.setPosition((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusNode), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusOffset));
    }
}
function getRotation() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isFreeHighlight) ? this.rotation : 0;
}
function serializeBoxes() {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isFreeHighlight)) {
        return null;
    }
    const [pageWidth, pageHeight] = this.pageDimensions;
    const [pageX, pageY] = this.pageTranslation;
    const boxes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _boxes);
    const quadPoints = new Float32Array(boxes.length * 8);
    let i = 0;
    for (const { x, y, width, height } of boxes){
        const sx = x * pageWidth + pageX;
        const sy = (1 - y) * pageHeight + pageY;
        quadPoints[i] = quadPoints[i + 4] = sx;
        quadPoints[i + 1] = quadPoints[i + 3] = sy;
        quadPoints[i + 2] = quadPoints[i + 6] = sx + width * pageWidth;
        quadPoints[i + 5] = quadPoints[i + 7] = sy - height * pageHeight;
        i += 8;
    }
    return quadPoints;
}
function serializeOutlines(rect) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _highlightOutlines).serialize(rect, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getRotation, getRotation).call(this));
}
function highlightMove(parent, event) {
    if (this._freeHighlight.add(event)) {
        parent.drawLayer.updateProperties(this._freeHighlightId, {
            path: {
                d: this._freeHighlight.toSVGPath()
            }
        });
    }
}
function endHighlight(parent, event) {
    if (!this._freeHighlight.isEmpty()) {
        parent.createAndAddNewEditor(event, false, {
            highlightId: this._freeHighlightId,
            highlightOutlines: this._freeHighlight.getOutlines(),
            clipPathId: this._freeHighlightClipId,
            methodOfCreation: "main_toolbar"
        });
    } else {
        parent.drawLayer.remove(this._freeHighlightId);
    }
    this._freeHighlightId = -1;
    this._freeHighlight = null;
    this._freeHighlightClipId = "";
}
function hasElementChanged1(serialized) {
    const { color } = this._initialData;
    return serialized.color.some((c, i)=>c !== color[i]);
}
; // ./src/display/editor/draw.js
var _svgProperties = /*#__PURE__*/ new WeakMap();
class DrawingOptions {
    updateProperty(name, value) {
        this[name] = value;
        this.updateSVGProperty(name, value);
    }
    updateProperties(properties) {
        if (!properties) {
            return;
        }
        for (const [name, value] of Object.entries(properties)){
            if (!name.startsWith("_")) {
                this.updateProperty(name, value);
            }
        }
    }
    updateSVGProperty(name, value) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _svgProperties)[name] = value;
    }
    toSVGProperties() {
        const root = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _svgProperties);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _svgProperties, Object.create(null));
        return {
            root
        };
    }
    reset() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _svgProperties, Object.create(null));
    }
    updateAll() {
        let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this;
        this.updateProperties(options);
    }
    clone() {
        unreachable("Not implemented");
    }
    constructor(){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _svgProperties, {
            writable: true,
            value: Object.create(null)
        });
    }
}
var _drawOutlines = /*#__PURE__*/ new WeakMap(), _mustBeCommitted = /*#__PURE__*/ new WeakMap(), _createDrawOutlines = /*#__PURE__*/ new WeakSet(), _createDrawing = /*#__PURE__*/ new WeakSet(), _cleanDrawLayer1 = /*#__PURE__*/ new WeakSet(), _addToDrawLayer1 = /*#__PURE__*/ new WeakSet(), _convertToParentSpace = /*#__PURE__*/ new WeakSet(), _convertToDrawSpace = /*#__PURE__*/ new WeakSet(), _updateBbox = /*#__PURE__*/ new WeakSet(), _rotateBox = /*#__PURE__*/ new WeakSet();
class DrawingEditor extends AnnotationEditor {
    _addOutlines(params) {
        if (params.drawOutlines) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createDrawOutlines, createDrawOutlines).call(this, params);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addToDrawLayer1, addToDrawLayer1).call(this);
        }
    }
    static _mergeSVGProperties(p1, p2) {
        const p1Keys = new Set(Object.keys(p1));
        for (const [key, value] of Object.entries(p2)){
            if (p1Keys.has(key)) {
                Object.assign(p1[key], value);
            } else {
                p1[key] = value;
            }
        }
        return p1;
    }
    static getDefaultDrawingOptions(_options) {
        unreachable("Not implemented");
    }
    static get typesMap() {
        unreachable("Not implemented");
    }
    static get isDrawer() {
        return true;
    }
    static get supportMultipleDrawings() {
        return false;
    }
    static updateDefaultParams(type, value) {
        const propertyName = this.typesMap.get(type);
        if (propertyName) {
            this._defaultDrawingOptions.updateProperty(propertyName, value);
        }
        if (this._currentParent) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw).updateProperty(propertyName, value);
            this._currentParent.drawLayer.updateProperties(this._currentDrawId, this._defaultDrawingOptions.toSVGProperties());
        }
    }
    updateParams(type, value) {
        const propertyName = this.constructor.typesMap.get(type);
        if (propertyName) {
            this._updateProperty(type, propertyName, value);
        }
    }
    static get defaultPropertiesToUpdate() {
        const properties = [];
        const options = this._defaultDrawingOptions;
        for (const [type, name] of this.typesMap){
            properties.push([
                type,
                options[name]
            ]);
        }
        return properties;
    }
    get propertiesToUpdate() {
        const properties = [];
        const { _drawingOptions } = this;
        for (const [type, name] of this.constructor.typesMap){
            properties.push([
                type,
                _drawingOptions[name]
            ]);
        }
        return properties;
    }
    _updateProperty(type, name, value) {
        const options = this._drawingOptions;
        const savedValue = options[name];
        const setter = (val)=>{
            var _this_parent;
            options.updateProperty(name, val);
            const bbox = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawOutlines).updateProperty(name, val);
            if (bbox) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateBbox, updateBbox).call(this, bbox);
            }
            (_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.drawLayer.updateProperties(this._drawId, options.toSVGProperties());
        };
        this.addCommands({
            cmd: setter.bind(this, value),
            undo: setter.bind(this, savedValue),
            post: this._uiManager.updateUI.bind(this._uiManager, this),
            mustExec: true,
            type,
            overwriteIfSameType: true,
            keepUndo: true
        });
    }
    _onResizing() {
        var _this_parent;
        (_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.drawLayer.updateProperties(this._drawId, DrawingEditor._mergeSVGProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawOutlines).getPathResizingSVGProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _convertToDrawSpace, convertToDrawSpace).call(this)), {
            bbox: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotateBox, rotateBox).call(this)
        }));
    }
    _onResized() {
        var _this_parent;
        (_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.drawLayer.updateProperties(this._drawId, DrawingEditor._mergeSVGProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawOutlines).getPathResizedSVGProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _convertToDrawSpace, convertToDrawSpace).call(this)), {
            bbox: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotateBox, rotateBox).call(this)
        }));
    }
    _onTranslating(_x, _y) {
        var _this_parent;
        (_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.drawLayer.updateProperties(this._drawId, {
            bbox: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotateBox, rotateBox).call(this)
        });
    }
    _onTranslated() {
        var _this_parent;
        (_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.drawLayer.updateProperties(this._drawId, DrawingEditor._mergeSVGProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawOutlines).getPathTranslatedSVGProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _convertToDrawSpace, convertToDrawSpace).call(this), this.parentDimensions), {
            bbox: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotateBox, rotateBox).call(this)
        }));
    }
    _onStartDragging() {
        var _this_parent;
        (_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.drawLayer.updateProperties(this._drawId, {
            rootClass: {
                moving: true
            }
        });
    }
    _onStopDragging() {
        var _this_parent;
        (_this_parent = this.parent) === null || _this_parent === void 0 ? void 0 : _this_parent.drawLayer.updateProperties(this._drawId, {
            rootClass: {
                moving: false
            }
        });
    }
    commit() {
        super.commit();
        this.disableEditMode();
        this.disableEditing();
    }
    disableEditing() {
        super.disableEditing();
        this.div.classList.toggle("disabled", true);
    }
    enableEditing() {
        super.enableEditing();
        this.div.classList.toggle("disabled", false);
    }
    getBaseTranslation() {
        return [
            0,
            0
        ];
    }
    get isResizable() {
        return true;
    }
    onceAdded(focus) {
        if (!this.annotationElementId) {
            this.parent.addUndoableEditor(this);
        }
        this._isDraggable = true;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mustBeCommitted)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mustBeCommitted, false);
            this.commit();
            this.parent.setSelected(this);
            if (focus && this.isOnScreen) {
                this.div.focus();
            }
        }
    }
    remove() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cleanDrawLayer1, cleanDrawLayer1).call(this);
        super.remove();
    }
    rebuild() {
        if (!this.parent) {
            return;
        }
        super.rebuild();
        if (this.div === null) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addToDrawLayer1, addToDrawLayer1).call(this);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateBbox, updateBbox).call(this, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawOutlines).box);
        if (!this.isAttachedToDOM) {
            this.parent.add(this);
        }
    }
    setParent(parent) {
        let mustBeSelected = false;
        if (this.parent && !parent) {
            this._uiManager.removeShouldRescale(this);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cleanDrawLayer1, cleanDrawLayer1).call(this);
        } else if (parent) {
            var _this_div;
            this._uiManager.addShouldRescale(this);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addToDrawLayer1, addToDrawLayer1).call(this, parent);
            mustBeSelected = !this.parent && ((_this_div = this.div) === null || _this_div === void 0 ? void 0 : _this_div.classList.contains("selectedEditor"));
        }
        super.setParent(parent);
        if (mustBeSelected) {
            this.select();
        }
    }
    rotate() {
        if (!this.parent) {
            return;
        }
        this.parent.drawLayer.updateProperties(this._drawId, DrawingEditor._mergeSVGProperties({
            bbox: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotateBox, rotateBox).call(this)
        }, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawOutlines).updateRotation((this.parentRotation - this.rotation + 360) % 360)));
    }
    onScaleChanging() {
        if (!this.parent) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateBbox, updateBbox).call(this, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawOutlines).updateParentDimensions(this.parentDimensions, this.parent.scale));
    }
    static onScaleChangingWhenDrawing() {}
    render() {
        if (this.div) {
            return this.div;
        }
        let baseX, baseY;
        if (this._isCopy) {
            baseX = this.x;
            baseY = this.y;
        }
        const div = super.render();
        div.classList.add("draw");
        const drawDiv = document.createElement("div");
        div.append(drawDiv);
        drawDiv.setAttribute("aria-hidden", "true");
        drawDiv.className = "internal";
        const [parentWidth, parentHeight] = this.parentDimensions;
        this.setDims(this.width * parentWidth, this.height * parentHeight);
        this._uiManager.addShouldRescale(this);
        this.disableEditing();
        if (this._isCopy) {
            this._moveAfterPaste(baseX, baseY);
        }
        return div;
    }
    static createDrawerInstance(_x, _y, _parentWidth, _parentHeight, _rotation) {
        unreachable("Not implemented");
    }
    static startDrawing(parent, uiManager, _isLTR, event) {
        var _uiManager__editorUndoBar;
        var _DrawingEditor, _DrawingEditor1, _DrawingEditor2;
        const { target, offsetX: x, offsetY: y, pointerId, pointerType } = event;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerType) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerType) !== pointerType) {
            return;
        }
        const { viewport: { rotation } } = parent;
        const { width: parentWidth, height: parentHeight } = target.getBoundingClientRect();
        const ac = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDrawingAC, new AbortController());
        const signal = parent.combinedSignal(ac);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(_DrawingEditor = DrawingEditor, DrawingEditor, _currentPointerId, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerId) || pointerId);
        var _class_static_private_field_spec_get;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(_DrawingEditor1 = DrawingEditor, DrawingEditor, _currentPointerType, (_class_static_private_field_spec_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerType)) !== null && _class_static_private_field_spec_get !== void 0 ? _class_static_private_field_spec_get : pointerType);
        window.addEventListener("pointerup", (e)=>{
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerId) === e.pointerId) {
                this._endDraw(e);
            } else {
                var _class_static_private_field_spec_get;
                (_class_static_private_field_spec_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerIds)) === null || _class_static_private_field_spec_get === void 0 ? void 0 : _class_static_private_field_spec_get.delete(e.pointerId);
            }
        }, {
            signal
        });
        window.addEventListener("pointercancel", (e)=>{
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerId) === e.pointerId) {
                this._currentParent.endDrawingSession();
            } else {
                var _class_static_private_field_spec_get;
                (_class_static_private_field_spec_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerIds)) === null || _class_static_private_field_spec_get === void 0 ? void 0 : _class_static_private_field_spec_get.delete(e.pointerId);
            }
        }, {
            signal
        });
        window.addEventListener("pointerdown", (e)=>{
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerType) !== e.pointerType) {
                return;
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(_DrawingEditor2 = DrawingEditor, DrawingEditor, _currentPointerIds, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerIds) || new Set()).add(e.pointerId);
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw).isCancellable()) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw).removeLastElement();
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw).isEmpty()) {
                    this._currentParent.endDrawingSession(true);
                } else {
                    this._endDraw(null);
                }
            }
        }, {
            capture: true,
            passive: false,
            signal
        });
        window.addEventListener("contextmenu", noContextMenu, {
            signal
        });
        target.addEventListener("pointermove", this._drawMove.bind(this), {
            signal
        });
        target.addEventListener("touchmove", (e)=>{
            if (e.timeStamp === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentMoveTimestamp)) {
                stopEvent(e);
            }
        }, {
            signal
        });
        parent.toggleDrawing();
        (_uiManager__editorUndoBar = uiManager._editorUndoBar) === null || _uiManager__editorUndoBar === void 0 ? void 0 : _uiManager__editorUndoBar.hide();
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw)) {
            parent.drawLayer.updateProperties(this._currentDrawId, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw).startNew(x, y, parentWidth, parentHeight, rotation));
            return;
        }
        uiManager.updateUIForDefaultProperties(this);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw, this.createDrawerInstance(x, y, parentWidth, parentHeight, rotation));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDrawingOptions, this.getDefaultDrawingOptions());
        this._currentParent = parent;
        ({ id: this._currentDrawId } = parent.drawLayer.draw(this._mergeSVGProperties((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDrawingOptions).toSVGProperties(), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw).defaultSVGProperties), true, false));
    }
    static _drawMove(event) {
        var _class_static_private_field_spec_get;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentMoveTimestamp, -1);
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw)) {
            return;
        }
        const { offsetX, offsetY, pointerId } = event;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerId) !== pointerId) {
            return;
        }
        if (((_class_static_private_field_spec_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerIds)) === null || _class_static_private_field_spec_get === void 0 ? void 0 : _class_static_private_field_spec_get.size) >= 1) {
            this._endDraw(event);
            return;
        }
        this._currentParent.drawLayer.updateProperties(this._currentDrawId, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw).add(offsetX, offsetY));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentMoveTimestamp, event.timeStamp);
        stopEvent(event);
    }
    static _cleanup(all) {
        if (all) {
            this._currentDrawId = -1;
            this._currentParent = null;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw, null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDrawingOptions, null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerType, null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentMoveTimestamp, NaN);
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDrawingAC)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDrawingAC).abort();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDrawingAC, null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerId, NaN);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentPointerIds, null);
        }
    }
    static _endDraw(event) {
        const parent = this._currentParent;
        if (!parent) {
            return;
        }
        parent.toggleDrawing(true);
        this._cleanup(false);
        if ((event === null || event === void 0 ? void 0 : event.target) === parent.div) {
            parent.drawLayer.updateProperties(this._currentDrawId, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw).end(event.offsetX, event.offsetY));
        }
        if (this.supportMultipleDrawings) {
            const draw = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw);
            const drawId = this._currentDrawId;
            const lastElement = draw.getLastElement();
            parent.addCommands({
                cmd: ()=>{
                    parent.drawLayer.updateProperties(drawId, draw.setLastElement(lastElement));
                },
                undo: ()=>{
                    parent.drawLayer.updateProperties(drawId, draw.removeLastElement());
                },
                mustExec: false,
                type: AnnotationEditorParamsType.DRAW_STEP
            });
            return;
        }
        this.endDrawing(false);
    }
    static endDrawing(isAborted) {
        const parent = this._currentParent;
        if (!parent) {
            return null;
        }
        parent.toggleDrawing(true);
        parent.cleanUndoStack(AnnotationEditorParamsType.DRAW_STEP);
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw).isEmpty()) {
            const { pageDimensions: [pageWidth, pageHeight], scale } = parent;
            const editor = parent.createAndAddNewEditor({
                offsetX: 0,
                offsetY: 0
            }, false, {
                drawId: this._currentDrawId,
                drawOutlines: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDraw).getOutlines(pageWidth * scale, pageHeight * scale, scale, this._INNER_MARGIN),
                drawingOptions: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, DrawingEditor, _currentDrawingOptions),
                mustBeCommitted: !isAborted
            });
            this._cleanup(true);
            return editor;
        }
        parent.drawLayer.remove(this._currentDrawId);
        this._cleanup(true);
        return null;
    }
    createDrawingOptions(_data) {}
    static deserializeDraw(_pageX, _pageY, _pageWidth, _pageHeight, _innerWidth, _data) {
        unreachable("Not implemented");
    }
    static async deserialize(data, parent, uiManager) {
        const { rawDims: { pageWidth, pageHeight, pageX, pageY } } = parent.viewport;
        const drawOutlines = this.deserializeDraw(pageX, pageY, pageWidth, pageHeight, this._INNER_MARGIN, data);
        const editor = await super.deserialize(data, parent, uiManager);
        editor.createDrawingOptions(data);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _createDrawOutlines, createDrawOutlines).call(editor, {
            drawOutlines
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _addToDrawLayer1, addToDrawLayer1).call(editor);
        editor.onScaleChanging();
        editor.rotate();
        return editor;
    }
    serializeDraw(isForCopying) {
        const [pageX, pageY] = this.pageTranslation;
        const [pageWidth, pageHeight] = this.pageDimensions;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawOutlines).serialize([
            pageX,
            pageY,
            pageWidth,
            pageHeight
        ], isForCopying);
    }
    renderAnnotationElement(annotation) {
        annotation.updateEdited({
            rect: this.getRect(0, 0)
        });
        return null;
    }
    static canCreateNewEmptyEditor() {
        return false;
    }
    constructor(params){
        super(params), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createDrawOutlines), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createDrawing), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cleanDrawLayer1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _addToDrawLayer1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _convertToParentSpace), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _convertToDrawSpace), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateBbox), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotateBox), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawOutlines, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mustBeCommitted, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "_drawId", null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mustBeCommitted, params.mustBeCommitted || false);
        this._addOutlines(params);
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, "_currentDrawId", -1);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, "_currentParent", null);
var _currentDraw = {
    writable: true,
    value: null
};
var _currentDrawingAC = {
    writable: true,
    value: null
};
var _currentDrawingOptions = {
    writable: true,
    value: null
};
var _currentPointerId = {
    writable: true,
    value: NaN
};
var _currentPointerType = {
    writable: true,
    value: null
};
var _currentPointerIds = {
    writable: true,
    value: null
};
var _currentMoveTimestamp = {
    writable: true,
    value: NaN
};
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawingEditor, "_INNER_MARGIN", 3);
function createDrawOutlines(param) {
    let { drawOutlines, drawId, drawingOptions } = param;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawOutlines, drawOutlines);
    this._drawingOptions || (this._drawingOptions = drawingOptions);
    if (drawId >= 0) {
        this._drawId = drawId;
        this.parent.drawLayer.finalizeDraw(drawId, drawOutlines.defaultProperties);
    } else {
        this._drawId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createDrawing, createDrawing).call(this, drawOutlines, this.parent);
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateBbox, updateBbox).call(this, drawOutlines.box);
}
function createDrawing(drawOutlines, parent) {
    const { id } = parent.drawLayer.draw(DrawingEditor._mergeSVGProperties(this._drawingOptions.toSVGProperties(), drawOutlines.defaultSVGProperties), false, false);
    return id;
}
function cleanDrawLayer1() {
    if (this._drawId === null || !this.parent) {
        return;
    }
    this.parent.drawLayer.remove(this._drawId);
    this._drawId = null;
    this._drawingOptions.reset();
}
function addToDrawLayer1() {
    let parent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.parent;
    if (this._drawId !== null && this.parent === parent) {
        return;
    }
    if (this._drawId !== null) {
        this.parent.drawLayer.updateParent(this._drawId, parent.drawLayer);
        return;
    }
    this._drawingOptions.updateAll();
    this._drawId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createDrawing, createDrawing).call(this, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawOutlines), parent);
}
function convertToParentSpace(param) {
    let [x, y, width, height] = param;
    const { parentDimensions: [pW, pH], rotation } = this;
    switch(rotation){
        case 90:
            return [
                y,
                1 - x,
                width * (pH / pW),
                height * (pW / pH)
            ];
        case 180:
            return [
                1 - x,
                1 - y,
                width,
                height
            ];
        case 270:
            return [
                1 - y,
                x,
                width * (pH / pW),
                height * (pW / pH)
            ];
        default:
            return [
                x,
                y,
                width,
                height
            ];
    }
}
function convertToDrawSpace() {
    const { x, y, width, height, parentDimensions: [pW, pH], rotation } = this;
    switch(rotation){
        case 90:
            return [
                1 - y,
                x,
                width * (pW / pH),
                height * (pH / pW)
            ];
        case 180:
            return [
                1 - x,
                1 - y,
                width,
                height
            ];
        case 270:
            return [
                y,
                1 - x,
                width * (pW / pH),
                height * (pH / pW)
            ];
        default:
            return [
                x,
                y,
                width,
                height
            ];
    }
}
function updateBbox(bbox) {
    [this.x, this.y, this.width, this.height] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _convertToParentSpace, convertToParentSpace).call(this, bbox);
    if (this.div) {
        this.fixAndSetPosition();
        const [parentWidth, parentHeight] = this.parentDimensions;
        this.setDims(this.width * parentWidth, this.height * parentHeight);
    }
    this._onResized();
}
function rotateBox() {
    const { x, y, width, height, rotation, parentRotation, parentDimensions: [pW, pH] } = this;
    switch((rotation * 4 + parentRotation) / 90){
        case 1:
            return [
                1 - y - height,
                x,
                height,
                width
            ];
        case 2:
            return [
                1 - x - width,
                1 - y - height,
                width,
                height
            ];
        case 3:
            return [
                y,
                1 - x - width,
                height,
                width
            ];
        case 4:
            return [
                x,
                y - width * (pW / pH),
                height * (pH / pW),
                width * (pW / pH)
            ];
        case 5:
            return [
                1 - y,
                x,
                width * (pW / pH),
                height * (pH / pW)
            ];
        case 6:
            return [
                1 - x - height * (pH / pW),
                1 - y,
                height * (pH / pW),
                width * (pW / pH)
            ];
        case 7:
            return [
                y - width * (pW / pH),
                1 - x - height * (pH / pW),
                width * (pW / pH),
                height * (pH / pW)
            ];
        case 8:
            return [
                x - width,
                y - height,
                width,
                height
            ];
        case 9:
            return [
                1 - y,
                x - width,
                height,
                width
            ];
        case 10:
            return [
                1 - x,
                1 - y,
                width,
                height
            ];
        case 11:
            return [
                y - height,
                1 - x,
                height,
                width
            ];
        case 12:
            return [
                x - height * (pH / pW),
                y,
                height * (pH / pW),
                width * (pW / pH)
            ];
        case 13:
            return [
                1 - y - width * (pW / pH),
                x - height * (pH / pW),
                width * (pW / pH),
                height * (pH / pW)
            ];
        case 14:
            return [
                1 - x,
                1 - y - width * (pW / pH),
                height * (pH / pW),
                width * (pW / pH)
            ];
        case 15:
            return [
                y,
                1 - x,
                width * (pW / pH),
                height * (pH / pW)
            ];
        default:
            return [
                x,
                y,
                width,
                height
            ];
    }
}
; // ./src/display/editor/drawers/inkdraw.js
var _last1 = /*#__PURE__*/ new WeakMap(), _line1 = /*#__PURE__*/ new WeakMap(), _lines = /*#__PURE__*/ new WeakMap(), _rotation1 = /*#__PURE__*/ new WeakMap(), _thickness2 = /*#__PURE__*/ new WeakMap(), _points2 = /*#__PURE__*/ new WeakMap(), _lastSVGPath = /*#__PURE__*/ new WeakMap(), _lastIndex = /*#__PURE__*/ new WeakMap(), _outlines1 = /*#__PURE__*/ new WeakMap(), _parentWidth = /*#__PURE__*/ new WeakMap(), _parentHeight = /*#__PURE__*/ new WeakMap(), _normalizePoint = /*#__PURE__*/ new WeakSet();
class InkDrawOutliner {
    updateProperty(name, value) {
        if (name === "stroke-width") {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness2, value);
        }
    }
    isEmpty() {
        return !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines).length === 0;
    }
    isCancellable() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points2).length <= 10;
    }
    add(x, y) {
        [x, y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _normalizePoint, normalizePoint).call(this, x, y);
        const [x1, y1, x2, y2] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last1).subarray(2, 6);
        const diffX = x - x2;
        const diffY = y - y2;
        const d = Math.hypot((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentWidth) * diffX, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentHeight) * diffY);
        if (d <= 2) {
            return null;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points2).push(x, y);
        if (isNaN(x1)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last1).set([
                x2,
                y2,
                x,
                y
            ], 2);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1).push(NaN, NaN, NaN, NaN, x, y);
            return {
                path: {
                    d: this.toSVGPath()
                }
            };
        }
        if (isNaN((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last1)[0])) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1).splice(6, 6);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last1).set([
            x1,
            y1,
            x2,
            y2,
            x,
            y
        ], 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1).push(...Outline.createBezierPoints(x1, y1, x2, y2, x, y));
        return {
            path: {
                d: this.toSVGPath()
            }
        };
    }
    end(x, y) {
        const change = this.add(x, y);
        if (change) {
            return change;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points2).length === 2) {
            return {
                path: {
                    d: this.toSVGPath()
                }
            };
        }
        return null;
    }
    startNew(x, y, parentWidth, parentHeight, rotation) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentWidth, parentWidth);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentHeight, parentHeight);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotation1, rotation);
        [x, y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _normalizePoint, normalizePoint).call(this, x, y);
        const line = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1, [
            NaN,
            NaN,
            NaN,
            NaN,
            x,
            y
        ]);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points2, [
            x,
            y
        ]);
        const last = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines).at(-1);
        if (last) {
            last.line = new Float32Array(last.line);
            last.points = new Float32Array(last.points);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines).push({
            line,
            points: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points2)
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last1).set(line, 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastIndex, 0);
        this.toSVGPath();
        return null;
    }
    getLastElement() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines).at(-1);
    }
    setLastElement(element) {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines)) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlines1).setLastElement(element);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines).push(element);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1, element.line);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points2, element.points);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastIndex, 0);
        return {
            path: {
                d: this.toSVGPath()
            }
        };
    }
    removeLastElement() {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines)) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlines1).removeLastElement();
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines).pop();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath, "");
        for(let i = 0, ii = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines).length; i < ii; i++){
            const { line, points } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines)[i];
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1, line);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points2, points);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastIndex, 0);
            this.toSVGPath();
        }
        return {
            path: {
                d: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath)
            }
        };
    }
    toSVGPath() {
        const firstX = Outline.svgRound((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1)[4]);
        const firstY = Outline.svgRound((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1)[5]);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points2).length === 2) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath, "".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath), " M ").concat(firstX, " ").concat(firstY, " Z"));
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath);
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points2).length <= 6) {
            const i = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath).lastIndexOf("M");
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath, "".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath).slice(0, i), " M ").concat(firstX, " ").concat(firstY));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastIndex, 6);
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points2).length === 4) {
            const secondX = Outline.svgRound((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1)[10]);
            const secondY = Outline.svgRound((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1)[11]);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath, "".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath), " L ").concat(secondX, " ").concat(secondY));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastIndex, 12);
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath);
        }
        const buffer = [];
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastIndex) === 0) {
            buffer.push("M ".concat(firstX, " ").concat(firstY));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastIndex, 6);
        }
        for(let i = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastIndex), ii = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1).length; i < ii; i += 6){
            const [c1x, c1y, c2x, c2y, x, y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1).slice(i, i + 6).map(Outline.svgRound);
            buffer.push("C".concat(c1x, " ").concat(c1y, " ").concat(c2x, " ").concat(c2y, " ").concat(x, " ").concat(y));
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath) + buffer.join(" "));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastIndex, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1).length);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath);
    }
    getOutlines(parentWidth, parentHeight, scale, innerMargin) {
        const last = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines).at(-1);
        last.line = new Float32Array(last.line);
        last.points = new Float32Array(last.points);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlines1).build((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines), parentWidth, parentHeight, scale, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotation1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness2), innerMargin);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last1, null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1, null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines, null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath, null);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlines1);
    }
    get defaultSVGProperties() {
        return {
            root: {
                viewBox: "0 0 10000 10000"
            },
            rootClass: {
                draw: true
            },
            bbox: [
                0,
                0,
                1,
                1
            ]
        };
    }
    constructor(x, y, parentWidth, parentHeight, rotation, thickness){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _normalizePoint);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last1, {
            writable: true,
            value: new Float64Array(6)
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotation1, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness2, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points2, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastSVGPath, {
            writable: true,
            value: ""
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lastIndex, {
            writable: true,
            value: 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _outlines1, {
            writable: true,
            value: new InkDrawOutline()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentWidth, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentHeight, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentWidth, parentWidth);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentHeight, parentHeight);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotation1, rotation);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness2, thickness);
        [x, y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _normalizePoint, normalizePoint).call(this, x, y);
        const line = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _line1, [
            NaN,
            NaN,
            NaN,
            NaN,
            x,
            y
        ]);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points2, [
            x,
            y
        ]);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines, [
            {
                line,
                points: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _points2)
            }
        ]);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _last1).set(line, 0);
    }
}
function normalizePoint(x, y) {
    return Outline._normalizePoint(x, y, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentWidth), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentHeight), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotation1));
}
var _bbox1 = /*#__PURE__*/ new WeakMap(), _currentRotation = /*#__PURE__*/ new WeakMap(), _innerMargin2 = /*#__PURE__*/ new WeakMap(), _lines1 = /*#__PURE__*/ new WeakMap(), _parentWidth1 = /*#__PURE__*/ new WeakMap(), _parentHeight1 = /*#__PURE__*/ new WeakMap(), _parentScale = /*#__PURE__*/ new WeakMap(), _rotation2 = /*#__PURE__*/ new WeakMap(), _thickness3 = /*#__PURE__*/ new WeakMap(), _getMarginComponents = /*#__PURE__*/ new WeakSet(), _getBBoxWithNoMargin = /*#__PURE__*/ new WeakSet(), _computeBbox = /*#__PURE__*/ new WeakSet(), _updateThickness1 = /*#__PURE__*/ new WeakSet();
class InkDrawOutline extends Outline {
    build(lines, parentWidth, parentHeight, parentScale, rotation, thickness, innerMargin) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentWidth1, parentWidth);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentHeight1, parentHeight);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentScale, parentScale);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotation2, rotation);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness3, thickness);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _innerMargin2, innerMargin !== null && innerMargin !== void 0 ? innerMargin : 0);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines1, lines);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _computeBbox, computeBbox).call(this);
    }
    get thickness() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness3);
    }
    setLastElement(element) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines1).push(element);
        return {
            path: {
                d: this.toSVGPath()
            }
        };
    }
    removeLastElement() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines1).pop();
        return {
            path: {
                d: this.toSVGPath()
            }
        };
    }
    toSVGPath() {
        const buffer = [];
        for (const { line } of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines1)){
            buffer.push("M".concat(Outline.svgRound(line[4]), " ").concat(Outline.svgRound(line[5])));
            if (line.length === 6) {
                buffer.push("Z");
                continue;
            }
            if (line.length === 12 && isNaN(line[6])) {
                buffer.push("L".concat(Outline.svgRound(line[10]), " ").concat(Outline.svgRound(line[11])));
                continue;
            }
            for(let i = 6, ii = line.length; i < ii; i += 6){
                const [c1x, c1y, c2x, c2y, x, y] = line.subarray(i, i + 6).map(Outline.svgRound);
                buffer.push("C".concat(c1x, " ").concat(c1y, " ").concat(c2x, " ").concat(c2y, " ").concat(x, " ").concat(y));
            }
        }
        return buffer.join("");
    }
    serialize(param, isForCopying) {
        let [pageX, pageY, pageWidth, pageHeight] = param;
        const serializedLines = [];
        const serializedPoints = [];
        const [x, y, width, height] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBBoxWithNoMargin, getBBoxWithNoMargin).call(this);
        let tx, ty, sx, sy, x1, y1, x2, y2, rescaleFn;
        switch((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotation2)){
            case 0:
                rescaleFn = Outline._rescale;
                tx = pageX;
                ty = pageY + pageHeight;
                sx = pageWidth;
                sy = -pageHeight;
                x1 = pageX + x * pageWidth;
                y1 = pageY + (1 - y - height) * pageHeight;
                x2 = pageX + (x + width) * pageWidth;
                y2 = pageY + (1 - y) * pageHeight;
                break;
            case 90:
                rescaleFn = Outline._rescaleAndSwap;
                tx = pageX;
                ty = pageY;
                sx = pageWidth;
                sy = pageHeight;
                x1 = pageX + y * pageWidth;
                y1 = pageY + x * pageHeight;
                x2 = pageX + (y + height) * pageWidth;
                y2 = pageY + (x + width) * pageHeight;
                break;
            case 180:
                rescaleFn = Outline._rescale;
                tx = pageX + pageWidth;
                ty = pageY;
                sx = -pageWidth;
                sy = pageHeight;
                x1 = pageX + (1 - x - width) * pageWidth;
                y1 = pageY + y * pageHeight;
                x2 = pageX + (1 - x) * pageWidth;
                y2 = pageY + (y + height) * pageHeight;
                break;
            case 270:
                rescaleFn = Outline._rescaleAndSwap;
                tx = pageX + pageWidth;
                ty = pageY + pageHeight;
                sx = -pageWidth;
                sy = -pageHeight;
                x1 = pageX + (1 - y - height) * pageWidth;
                y1 = pageY + (1 - x - width) * pageHeight;
                x2 = pageX + (1 - y) * pageWidth;
                y2 = pageY + (1 - x) * pageHeight;
                break;
        }
        for (const { line, points } of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines1)){
            serializedLines.push(rescaleFn(line, tx, ty, sx, sy, isForCopying ? new Array(line.length) : null));
            serializedPoints.push(rescaleFn(points, tx, ty, sx, sy, isForCopying ? new Array(points.length) : null));
        }
        return {
            lines: serializedLines,
            points: serializedPoints,
            rect: [
                x1,
                y1,
                x2,
                y2
            ]
        };
    }
    static deserialize(pageX, pageY, pageWidth, pageHeight, innerMargin, param) {
        let { paths: { lines, points }, rotation, thickness } = param;
        const newLines = [];
        let tx, ty, sx, sy, rescaleFn;
        switch(rotation){
            case 0:
                rescaleFn = Outline._rescale;
                tx = -pageX / pageWidth;
                ty = pageY / pageHeight + 1;
                sx = 1 / pageWidth;
                sy = -1 / pageHeight;
                break;
            case 90:
                rescaleFn = Outline._rescaleAndSwap;
                tx = -pageY / pageHeight;
                ty = -pageX / pageWidth;
                sx = 1 / pageHeight;
                sy = 1 / pageWidth;
                break;
            case 180:
                rescaleFn = Outline._rescale;
                tx = pageX / pageWidth + 1;
                ty = -pageY / pageHeight;
                sx = -1 / pageWidth;
                sy = 1 / pageHeight;
                break;
            case 270:
                rescaleFn = Outline._rescaleAndSwap;
                tx = pageY / pageHeight + 1;
                ty = pageX / pageWidth + 1;
                sx = -1 / pageHeight;
                sy = -1 / pageWidth;
                break;
        }
        if (!lines) {
            lines = [];
            for (const point of points){
                const len = point.length;
                if (len === 2) {
                    lines.push(new Float32Array([
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        point[0],
                        point[1]
                    ]));
                    continue;
                }
                if (len === 4) {
                    lines.push(new Float32Array([
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        point[0],
                        point[1],
                        NaN,
                        NaN,
                        NaN,
                        NaN,
                        point[2],
                        point[3]
                    ]));
                    continue;
                }
                const line = new Float32Array(3 * (len - 2));
                lines.push(line);
                let [x1, y1, x2, y2] = point.subarray(0, 4);
                line.set([
                    NaN,
                    NaN,
                    NaN,
                    NaN,
                    x1,
                    y1
                ], 0);
                for(let i = 4; i < len; i += 2){
                    const x = point[i];
                    const y = point[i + 1];
                    line.set(Outline.createBezierPoints(x1, y1, x2, y2, x, y), (i - 2) * 3);
                    [x1, y1, x2, y2] = [
                        x2,
                        y2,
                        x,
                        y
                    ];
                }
            }
        }
        for(let i = 0, ii = lines.length; i < ii; i++){
            newLines.push({
                line: rescaleFn(lines[i].map((x)=>x !== null && x !== void 0 ? x : NaN), tx, ty, sx, sy),
                points: rescaleFn(points[i].map((x)=>x !== null && x !== void 0 ? x : NaN), tx, ty, sx, sy)
            });
        }
        const outlines = new this.prototype.constructor();
        outlines.build(newLines, pageWidth, pageHeight, 1, rotation, thickness, innerMargin);
        return outlines;
    }
    get box() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox1);
    }
    updateProperty(name, value) {
        if (name === "stroke-width") {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateThickness1, updateThickness1).call(this, value);
        }
        return null;
    }
    updateParentDimensions(param, scale) {
        let [width, height] = param;
        const [oldMarginX, oldMarginY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getMarginComponents, getMarginComponents).call(this);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentWidth1, width);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentHeight1, height);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentScale, scale);
        const [newMarginX, newMarginY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getMarginComponents, getMarginComponents).call(this);
        const diffMarginX = newMarginX - oldMarginX;
        const diffMarginY = newMarginY - oldMarginY;
        const bbox = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox1);
        bbox[0] -= diffMarginX;
        bbox[1] -= diffMarginY;
        bbox[2] += 2 * diffMarginX;
        bbox[3] += 2 * diffMarginY;
        return bbox;
    }
    updateRotation(rotation) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentRotation, rotation);
        return {
            path: {
                transform: this.rotationTransform
            }
        };
    }
    get viewBox() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox1).map(Outline.svgRound).join(" ");
    }
    get defaultProperties() {
        const [x, y] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox1);
        return {
            root: {
                viewBox: this.viewBox
            },
            path: {
                "transform-origin": "".concat(Outline.svgRound(x), " ").concat(Outline.svgRound(y))
            }
        };
    }
    get rotationTransform() {
        const [, , width, height] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox1);
        let a = 0, b = 0, c = 0, d = 0, e = 0, f = 0;
        switch((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentRotation)){
            case 90:
                b = height / width;
                c = -width / height;
                e = width;
                break;
            case 180:
                a = -1;
                d = -1;
                e = width;
                f = height;
                break;
            case 270:
                b = -height / width;
                c = width / height;
                f = height;
                break;
            default:
                return "";
        }
        return "matrix(".concat(a, " ").concat(b, " ").concat(c, " ").concat(d, " ").concat(Outline.svgRound(e), " ").concat(Outline.svgRound(f), ")");
    }
    getPathResizingSVGProperties(param) {
        let [newX, newY, newWidth, newHeight] = param;
        const [marginX, marginY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getMarginComponents, getMarginComponents).call(this);
        const [x, y, width, height] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox1);
        if (Math.abs(width - marginX) <= Outline.PRECISION || Math.abs(height - marginY) <= Outline.PRECISION) {
            const tx = newX + newWidth / 2 - (x + width / 2);
            const ty = newY + newHeight / 2 - (y + height / 2);
            return {
                path: {
                    "transform-origin": "".concat(Outline.svgRound(newX), " ").concat(Outline.svgRound(newY)),
                    transform: "".concat(this.rotationTransform, " translate(").concat(tx, " ").concat(ty, ")")
                }
            };
        }
        const s1x = (newWidth - 2 * marginX) / (width - 2 * marginX);
        const s1y = (newHeight - 2 * marginY) / (height - 2 * marginY);
        const s2x = width / newWidth;
        const s2y = height / newHeight;
        return {
            path: {
                "transform-origin": "".concat(Outline.svgRound(x), " ").concat(Outline.svgRound(y)),
                transform: "".concat(this.rotationTransform, " scale(").concat(s2x, " ").concat(s2y, ") ") + "translate(".concat(Outline.svgRound(marginX), " ").concat(Outline.svgRound(marginY), ") scale(").concat(s1x, " ").concat(s1y, ") ") + "translate(".concat(Outline.svgRound(-marginX), " ").concat(Outline.svgRound(-marginY), ")")
            }
        };
    }
    getPathResizedSVGProperties(param) {
        let [newX, newY, newWidth, newHeight] = param;
        const [marginX, marginY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getMarginComponents, getMarginComponents).call(this);
        const bbox = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox1);
        const [x, y, width, height] = bbox;
        bbox[0] = newX;
        bbox[1] = newY;
        bbox[2] = newWidth;
        bbox[3] = newHeight;
        if (Math.abs(width - marginX) <= Outline.PRECISION || Math.abs(height - marginY) <= Outline.PRECISION) {
            const tx = newX + newWidth / 2 - (x + width / 2);
            const ty = newY + newHeight / 2 - (y + height / 2);
            for (const { line, points } of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines1)){
                Outline._translate(line, tx, ty, line);
                Outline._translate(points, tx, ty, points);
            }
            return {
                root: {
                    viewBox: this.viewBox
                },
                path: {
                    "transform-origin": "".concat(Outline.svgRound(newX), " ").concat(Outline.svgRound(newY)),
                    transform: this.rotationTransform || null,
                    d: this.toSVGPath()
                }
            };
        }
        const s1x = (newWidth - 2 * marginX) / (width - 2 * marginX);
        const s1y = (newHeight - 2 * marginY) / (height - 2 * marginY);
        const tx = -s1x * (x + marginX) + newX + marginX;
        const ty = -s1y * (y + marginY) + newY + marginY;
        if (s1x !== 1 || s1y !== 1 || tx !== 0 || ty !== 0) {
            for (const { line, points } of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines1)){
                Outline._rescale(line, tx, ty, s1x, s1y, line);
                Outline._rescale(points, tx, ty, s1x, s1y, points);
            }
        }
        return {
            root: {
                viewBox: this.viewBox
            },
            path: {
                "transform-origin": "".concat(Outline.svgRound(newX), " ").concat(Outline.svgRound(newY)),
                transform: this.rotationTransform || null,
                d: this.toSVGPath()
            }
        };
    }
    getPathTranslatedSVGProperties(param, parentDimensions) {
        let [newX, newY] = param;
        const [newParentWidth, newParentHeight] = parentDimensions;
        const bbox = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox1);
        const tx = newX - bbox[0];
        const ty = newY - bbox[1];
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentWidth1) === newParentWidth && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentHeight1) === newParentHeight) {
            for (const { line, points } of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines1)){
                Outline._translate(line, tx, ty, line);
                Outline._translate(points, tx, ty, points);
            }
        } else {
            const sx = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentWidth1) / newParentWidth;
            const sy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentHeight1) / newParentHeight;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentWidth1, newParentWidth);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentHeight1, newParentHeight);
            for (const { line, points } of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines1)){
                Outline._rescale(line, tx, ty, sx, sy, line);
                Outline._rescale(points, tx, ty, sx, sy, points);
            }
            bbox[2] *= sx;
            bbox[3] *= sy;
        }
        bbox[0] = newX;
        bbox[1] = newY;
        return {
            root: {
                viewBox: this.viewBox
            },
            path: {
                d: this.toSVGPath(),
                "transform-origin": "".concat(Outline.svgRound(newX), " ").concat(Outline.svgRound(newY))
            }
        };
    }
    get defaultSVGProperties() {
        const bbox = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox1);
        return {
            root: {
                viewBox: this.viewBox
            },
            rootClass: {
                draw: true
            },
            path: {
                d: this.toSVGPath(),
                "transform-origin": "".concat(Outline.svgRound(bbox[0]), " ").concat(Outline.svgRound(bbox[1])),
                transform: this.rotationTransform || null
            },
            bbox
        };
    }
    constructor(...args){
        super(...args), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getMarginComponents), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBBoxWithNoMargin), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _computeBbox), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateThickness1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox1, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentRotation, {
            writable: true,
            value: 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _innerMargin2, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines1, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentWidth1, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentHeight1, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentScale, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotation2, {
            writable: true,
            value: void 0
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness3, {
            writable: true,
            value: void 0
        });
    }
}
function getMarginComponents() {
    let thickness = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness3);
    const margin = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _innerMargin2) + thickness / 2 * (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentScale);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _rotation2) % 180 === 0 ? [
        margin / (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentWidth1),
        margin / (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentHeight1)
    ] : [
        margin / (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentHeight1),
        margin / (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parentWidth1)
    ];
}
function getBBoxWithNoMargin() {
    const [x, y, width, height] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox1);
    const [marginX, marginY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getMarginComponents, getMarginComponents).call(this, 0);
    return [
        x + marginX,
        y + marginY,
        width - 2 * marginX,
        height - 2 * marginY
    ];
}
function computeBbox() {
    const bbox = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox1, new Float32Array([
        Infinity,
        Infinity,
        -Infinity,
        -Infinity
    ]));
    for (const { line } of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _lines1)){
        if (line.length <= 12) {
            for(let i = 4, ii = line.length; i < ii; i += 6){
                Util.pointBoundingBox(line[i], line[i + 1], bbox);
            }
            continue;
        }
        let lastX = line[4], lastY = line[5];
        for(let i = 6, ii = line.length; i < ii; i += 6){
            const [c1x, c1y, c2x, c2y, x, y] = line.subarray(i, i + 6);
            Util.bezierBoundingBox(lastX, lastY, c1x, c1y, c2x, c2y, x, y, bbox);
            lastX = x;
            lastY = y;
        }
    }
    const [marginX, marginY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getMarginComponents, getMarginComponents).call(this);
    bbox[0] = MathClamp(bbox[0] - marginX, 0, 1);
    bbox[1] = MathClamp(bbox[1] - marginY, 0, 1);
    bbox[2] = MathClamp(bbox[2] + marginX, 0, 1);
    bbox[3] = MathClamp(bbox[3] + marginY, 0, 1);
    bbox[2] -= bbox[0];
    bbox[3] -= bbox[1];
}
function updateThickness1(thickness) {
    const [oldMarginX, oldMarginY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getMarginComponents, getMarginComponents).call(this);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _thickness3, thickness);
    const [newMarginX, newMarginY] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getMarginComponents, getMarginComponents).call(this);
    const [diffMarginX, diffMarginY] = [
        newMarginX - oldMarginX,
        newMarginY - oldMarginY
    ];
    const bbox = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bbox1);
    bbox[0] -= diffMarginX;
    bbox[1] -= diffMarginY;
    bbox[2] += 2 * diffMarginX;
    bbox[3] += 2 * diffMarginY;
    return bbox;
}
; // ./src/display/editor/ink.js
class InkDrawingOptions extends DrawingOptions {
    updateSVGProperty(name, value) {
        if (name === "stroke-width") {
            value !== null && value !== void 0 ? value : value = this["stroke-width"];
            value *= this._viewParameters.realScale;
        }
        super.updateSVGProperty(name, value);
    }
    clone() {
        const clone = new InkDrawingOptions(this._viewParameters);
        clone.updateAll(this);
        return clone;
    }
    constructor(viewerParameters){
        super();
        this._viewParameters = viewerParameters;
        super.updateProperties({
            fill: "none",
            stroke: AnnotationEditor._defaultLineColor,
            "stroke-opacity": 1,
            "stroke-width": 1,
            "stroke-linecap": "round",
            "stroke-linejoin": "round",
            "stroke-miterlimit": 10
        });
    }
}
var _hasElementChanged2 = /*#__PURE__*/ new WeakSet();
class InkEditor extends DrawingEditor {
    static initialize(l10n, uiManager) {
        AnnotationEditor.initialize(l10n, uiManager);
        this._defaultDrawingOptions = new InkDrawingOptions(uiManager.viewParameters);
    }
    static getDefaultDrawingOptions(options) {
        const clone = this._defaultDrawingOptions.clone();
        clone.updateProperties(options);
        return clone;
    }
    static get supportMultipleDrawings() {
        return true;
    }
    static get typesMap() {
        return shadow(this, "typesMap", new Map([
            [
                AnnotationEditorParamsType.INK_THICKNESS,
                "stroke-width"
            ],
            [
                AnnotationEditorParamsType.INK_COLOR,
                "stroke"
            ],
            [
                AnnotationEditorParamsType.INK_OPACITY,
                "stroke-opacity"
            ]
        ]));
    }
    static createDrawerInstance(x, y, parentWidth, parentHeight, rotation) {
        return new InkDrawOutliner(x, y, parentWidth, parentHeight, rotation, this._defaultDrawingOptions["stroke-width"]);
    }
    static deserializeDraw(pageX, pageY, pageWidth, pageHeight, innerMargin, data) {
        return InkDrawOutline.deserialize(pageX, pageY, pageWidth, pageHeight, innerMargin, data);
    }
    static async deserialize(data, parent, uiManager) {
        let initialData = null;
        if (data instanceof InkAnnotationElement) {
            const { data: { inkLists, rect, rotation, id, color, opacity, borderStyle: { rawWidth: thickness }, popupRef }, parent: { page: { pageNumber } } } = data;
            initialData = data = {
                annotationType: AnnotationEditorType.INK,
                color: Array.from(color),
                thickness,
                opacity,
                paths: {
                    points: inkLists
                },
                boxes: null,
                pageIndex: pageNumber - 1,
                rect: rect.slice(0),
                rotation,
                id,
                deleted: false,
                popupRef
            };
        }
        const editor = await super.deserialize(data, parent, uiManager);
        editor.annotationElementId = data.id || null;
        editor._initialData = initialData;
        return editor;
    }
    onScaleChanging() {
        if (!this.parent) {
            return;
        }
        super.onScaleChanging();
        const { _drawId, _drawingOptions, parent } = this;
        _drawingOptions.updateSVGProperty("stroke-width");
        parent.drawLayer.updateProperties(_drawId, _drawingOptions.toSVGProperties());
    }
    static onScaleChangingWhenDrawing() {
        const parent = this._currentParent;
        if (!parent) {
            return;
        }
        super.onScaleChangingWhenDrawing();
        this._defaultDrawingOptions.updateSVGProperty("stroke-width");
        parent.drawLayer.updateProperties(this._currentDrawId, this._defaultDrawingOptions.toSVGProperties());
    }
    createDrawingOptions(param) {
        let { color, thickness, opacity } = param;
        this._drawingOptions = InkEditor.getDefaultDrawingOptions({
            stroke: Util.makeHexColor(...color),
            "stroke-width": thickness,
            "stroke-opacity": opacity
        });
    }
    serialize() {
        let isForCopying = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        if (this.isEmpty()) {
            return null;
        }
        if (this.deleted) {
            return this.serializeDeleted();
        }
        const { lines, points, rect } = this.serializeDraw(isForCopying);
        const { _drawingOptions: { stroke, "stroke-opacity": opacity, "stroke-width": thickness } } = this;
        const serialized = {
            annotationType: AnnotationEditorType.INK,
            color: AnnotationEditor._colorManager.convert(stroke),
            opacity,
            thickness,
            paths: {
                lines,
                points
            },
            pageIndex: this.pageIndex,
            rect,
            rotation: this.rotation,
            structTreeParentId: this._structTreeParentId
        };
        if (isForCopying) {
            serialized.isCopy = true;
            return serialized;
        }
        if (this.annotationElementId && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasElementChanged2, hasElementChanged2).call(this, serialized)) {
            return null;
        }
        serialized.id = this.annotationElementId;
        return serialized;
    }
    renderAnnotationElement(annotation) {
        const { points, rect } = this.serializeDraw(false);
        annotation.updateEdited({
            rect,
            thickness: this._drawingOptions["stroke-width"],
            points
        });
        return null;
    }
    constructor(params){
        super({
            ...params,
            name: "inkEditor"
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasElementChanged2);
        this._willKeepAspectRatio = true;
        this.defaultL10nId = "pdfjs-editor-ink-editor";
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(InkEditor, "_type", "ink");
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(InkEditor, "_editorType", AnnotationEditorType.INK);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(InkEditor, "_defaultDrawingOptions", null);
function hasElementChanged2(serialized) {
    const { color, thickness, opacity, pageIndex } = this._initialData;
    return this._hasBeenMoved || this._hasBeenResized || serialized.color.some((c, i)=>c !== color[i]) || serialized.thickness !== thickness || serialized.opacity !== opacity || serialized.pageIndex !== pageIndex;
}
; // ./src/display/editor/drawers/contour.js
class ContourDrawOutline extends InkDrawOutline {
    toSVGPath() {
        let path = super.toSVGPath();
        if (!path.endsWith("Z")) {
            path += "Z";
        }
        return path;
    }
}
; // ./src/display/editor/drawers/signaturedraw.js
const BASE_HEADER_LENGTH = 8;
const POINTS_PROPERTIES_NUMBER = 3;
class SignatureExtractor {
    static extractContoursFromText(text, param, pageWidth, pageHeight, rotation, innerMargin) {
        let { fontFamily, fontStyle, fontWeight } = param;
        let canvas = new OffscreenCanvas(1, 1);
        let ctx = canvas.getContext("2d", {
            alpha: false
        });
        const fontSize = 200;
        const font = ctx.font = "".concat(fontStyle, " ").concat(fontWeight, " ").concat(fontSize, "px ").concat(fontFamily);
        const { actualBoundingBoxLeft, actualBoundingBoxRight, actualBoundingBoxAscent, actualBoundingBoxDescent, fontBoundingBoxAscent, fontBoundingBoxDescent, width } = ctx.measureText(text);
        const SCALE = 1.5;
        const canvasWidth = Math.ceil(Math.max(Math.abs(actualBoundingBoxLeft) + Math.abs(actualBoundingBoxRight) || 0, width) * SCALE);
        const canvasHeight = Math.ceil(Math.max(Math.abs(actualBoundingBoxAscent) + Math.abs(actualBoundingBoxDescent) || fontSize, Math.abs(fontBoundingBoxAscent) + Math.abs(fontBoundingBoxDescent) || fontSize) * SCALE);
        canvas = new OffscreenCanvas(canvasWidth, canvasHeight);
        ctx = canvas.getContext("2d", {
            alpha: true,
            willReadFrequently: true
        });
        ctx.font = font;
        ctx.filter = "grayscale(1)";
        ctx.fillStyle = "white";
        ctx.fillRect(0, 0, canvasWidth, canvasHeight);
        ctx.fillStyle = "black";
        ctx.fillText(text, canvasWidth * (SCALE - 1) / 2, canvasHeight * (3 - SCALE) / 2);
        const uint8Buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, toUint8).call(SignatureExtractor, ctx.getImageData(0, 0, canvasWidth, canvasHeight).data);
        const histogram = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, getHistogram).call(SignatureExtractor, uint8Buf);
        const threshold = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, guessThreshold).call(SignatureExtractor, histogram);
        const contourList = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, findContours).call(SignatureExtractor, uint8Buf, canvasWidth, canvasHeight, threshold);
        return this.processDrawnLines({
            lines: {
                curves: contourList,
                width: canvasWidth,
                height: canvasHeight
            },
            pageWidth,
            pageHeight,
            rotation,
            innerMargin,
            mustSmooth: true,
            areContours: true
        });
    }
    static process(bitmap, pageWidth, pageHeight, rotation, innerMargin) {
        const [uint8Buf, width, height] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, getGrayPixels).call(SignatureExtractor, bitmap);
        const [buffer, histogram] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, bilateralFilter).call(SignatureExtractor, uint8Buf, width, height, Math.hypot(width, height) * (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, _PARAMETERS).sigmaSFactor, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, _PARAMETERS).sigmaR, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, _PARAMETERS).kernelSize);
        const threshold = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, guessThreshold).call(SignatureExtractor, histogram);
        const contourList = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, findContours).call(SignatureExtractor, buffer, width, height, threshold);
        return this.processDrawnLines({
            lines: {
                curves: contourList,
                width,
                height
            },
            pageWidth,
            pageHeight,
            rotation,
            innerMargin,
            mustSmooth: true,
            areContours: true
        });
    }
    static processDrawnLines(param) {
        let { lines, pageWidth, pageHeight, rotation, innerMargin, mustSmooth, areContours } = param;
        if (rotation % 180 !== 0) {
            [pageWidth, pageHeight] = [
                pageHeight,
                pageWidth
            ];
        }
        const { curves, width, height } = lines;
        var _lines_thickness;
        const thickness = (_lines_thickness = lines.thickness) !== null && _lines_thickness !== void 0 ? _lines_thickness : 0;
        const linesAndPoints = [];
        const ratio = Math.min(pageWidth / width, pageHeight / height);
        const xScale = ratio / pageWidth;
        const yScale = ratio / pageHeight;
        const newCurves = [];
        for (const { points } of curves){
            const reducedPoints = mustSmooth ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, douglasPeucker).call(SignatureExtractor, points) : points;
            if (!reducedPoints) {
                continue;
            }
            newCurves.push(reducedPoints);
            const len = reducedPoints.length;
            const newPoints = new Float32Array(len);
            const line = new Float32Array(3 * (len === 2 ? 2 : len - 2));
            linesAndPoints.push({
                line,
                points: newPoints
            });
            if (len === 2) {
                newPoints[0] = reducedPoints[0] * xScale;
                newPoints[1] = reducedPoints[1] * yScale;
                line.set([
                    NaN,
                    NaN,
                    NaN,
                    NaN,
                    newPoints[0],
                    newPoints[1]
                ], 0);
                continue;
            }
            let [x1, y1, x2, y2] = reducedPoints;
            x1 *= xScale;
            y1 *= yScale;
            x2 *= xScale;
            y2 *= yScale;
            newPoints.set([
                x1,
                y1,
                x2,
                y2
            ], 0);
            line.set([
                NaN,
                NaN,
                NaN,
                NaN,
                x1,
                y1
            ], 0);
            for(let i = 4; i < len; i += 2){
                const x = newPoints[i] = reducedPoints[i] * xScale;
                const y = newPoints[i + 1] = reducedPoints[i + 1] * yScale;
                line.set(Outline.createBezierPoints(x1, y1, x2, y2, x, y), (i - 2) * 3);
                [x1, y1, x2, y2] = [
                    x2,
                    y2,
                    x,
                    y
                ];
            }
        }
        if (linesAndPoints.length === 0) {
            return null;
        }
        const outline = areContours ? new ContourDrawOutline() : new InkDrawOutline();
        outline.build(linesAndPoints, pageWidth, pageHeight, 1, rotation, areContours ? 0 : thickness, innerMargin);
        return {
            outline,
            newCurves,
            areContours,
            thickness,
            width,
            height
        };
    }
    static async compressSignature(param) {
        let { outlines, areContours, thickness, width, height } = param;
        let minDiff = Infinity;
        let maxDiff = -Infinity;
        let outlinesLength = 0;
        for (const points of outlines){
            outlinesLength += points.length;
            for(let i = 2, ii = points.length; i < ii; i++){
                const dx = points[i] - points[i - 2];
                minDiff = Math.min(minDiff, dx);
                maxDiff = Math.max(maxDiff, dx);
            }
        }
        let bufferType;
        if (minDiff >= -128 && maxDiff <= 127) {
            bufferType = Int8Array;
        } else if (minDiff >= -32768 && maxDiff <= 32767) {
            bufferType = Int16Array;
        } else {
            bufferType = Int32Array;
        }
        const len = outlines.length;
        const headerLength = BASE_HEADER_LENGTH + POINTS_PROPERTIES_NUMBER * len;
        const header = new Uint32Array(headerLength);
        let offset = 0;
        header[offset++] = headerLength * Uint32Array.BYTES_PER_ELEMENT + (outlinesLength - 2 * len) * bufferType.BYTES_PER_ELEMENT;
        header[offset++] = 0;
        header[offset++] = width;
        header[offset++] = height;
        header[offset++] = areContours ? 0 : 1;
        header[offset++] = Math.max(0, Math.floor(thickness !== null && thickness !== void 0 ? thickness : 0));
        header[offset++] = len;
        header[offset++] = bufferType.BYTES_PER_ELEMENT;
        for (const points of outlines){
            header[offset++] = points.length - 2;
            header[offset++] = points[0];
            header[offset++] = points[1];
        }
        const cs = new CompressionStream("deflate-raw");
        const writer = cs.writable.getWriter();
        await writer.ready;
        writer.write(header);
        const BufferCtor = bufferType.prototype.constructor;
        for (const points of outlines){
            const diffs = new BufferCtor(points.length - 2);
            for(let i = 2, ii = points.length; i < ii; i++){
                diffs[i - 2] = points[i] - points[i - 2];
            }
            writer.write(diffs);
        }
        writer.close();
        const buf = await new Response(cs.readable).arrayBuffer();
        const bytes = new Uint8Array(buf);
        return toBase64Util(bytes);
    }
    static async decompressSignature(signatureData) {
        try {
            const bytes = fromBase64Util(signatureData);
            const { readable, writable } = new DecompressionStream("deflate-raw");
            const writer = writable.getWriter();
            await writer.ready;
            writer.write(bytes).then(async ()=>{
                await writer.ready;
                await writer.close();
            }).catch(()=>{});
            let data = null;
            let offset = 0;
            for await (const chunk of readable){
                data || (data = new Uint8Array(new Uint32Array(chunk.buffer, 0, 4)[0]));
                data.set(chunk, offset);
                offset += chunk.length;
            }
            const header = new Uint32Array(data.buffer, 0, data.length >> 2);
            const version = header[1];
            if (version !== 0) {
                throw new Error("Invalid version: ".concat(version));
            }
            const width = header[2];
            const height = header[3];
            const areContours = header[4] === 0;
            const thickness = header[5];
            const numberOfDrawings = header[6];
            const bufferType = header[7];
            const outlines = [];
            const diffsOffset = (BASE_HEADER_LENGTH + POINTS_PROPERTIES_NUMBER * numberOfDrawings) * Uint32Array.BYTES_PER_ELEMENT;
            let diffs;
            switch(bufferType){
                case Int8Array.BYTES_PER_ELEMENT:
                    diffs = new Int8Array(data.buffer, diffsOffset);
                    break;
                case Int16Array.BYTES_PER_ELEMENT:
                    diffs = new Int16Array(data.buffer, diffsOffset);
                    break;
                case Int32Array.BYTES_PER_ELEMENT:
                    diffs = new Int32Array(data.buffer, diffsOffset);
                    break;
            }
            offset = 0;
            for(let i = 0; i < numberOfDrawings; i++){
                const len = header[POINTS_PROPERTIES_NUMBER * i + BASE_HEADER_LENGTH];
                const points = new Float32Array(len + 2);
                outlines.push(points);
                for(let j = 0; j < POINTS_PROPERTIES_NUMBER - 1; j++){
                    points[j] = header[POINTS_PROPERTIES_NUMBER * i + BASE_HEADER_LENGTH + j + 1];
                }
                for(let j = 0; j < len; j++){
                    points[j + 2] = points[j] + diffs[offset++];
                }
            }
            return {
                areContours,
                thickness,
                outlines,
                width,
                height
            };
        } catch (e) {
            warn("decompressSignature: ".concat(e));
            return null;
        }
    }
}
var _PARAMETERS = {
    writable: true,
    value: {
        maxDim: 512,
        sigmaSFactor: 0.02,
        sigmaR: 25,
        kernelSize: 16
    }
};
var _neighborIdToIndex = {
    writable: true,
    value: new Int32Array([
        0,
        1,
        -1,
        1,
        -1,
        0,
        -1,
        -1,
        0,
        -1,
        1,
        -1,
        1,
        0,
        1,
        1
    ])
};
function neighborIndexToId(i0, j0, i, j) {
    i -= i0;
    j -= j0;
    if (i === 0) {
        return j > 0 ? 0 : 4;
    }
    if (i === 1) {
        return j + 6;
    }
    return 2 - j;
}
function clockwiseNonZero(buf, width, i0, j0, i, j, offset) {
    const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, neighborIndexToId).call(SignatureExtractor, i0, j0, i, j);
    for(let k = 0; k < 8; k++){
        const kk = (-k + id - offset + 16) % 8;
        const shiftI = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, _neighborIdToIndex)[2 * kk];
        const shiftJ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, _neighborIdToIndex)[2 * kk + 1];
        if (buf[(i0 + shiftI) * width + (j0 + shiftJ)] !== 0) {
            return kk;
        }
    }
    return -1;
}
function counterClockwiseNonZero(buf, width, i0, j0, i, j, offset) {
    const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, neighborIndexToId).call(SignatureExtractor, i0, j0, i, j);
    for(let k = 0; k < 8; k++){
        const kk = (k + id + offset + 16) % 8;
        const shiftI = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, _neighborIdToIndex)[2 * kk];
        const shiftJ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, _neighborIdToIndex)[2 * kk + 1];
        if (buf[(i0 + shiftI) * width + (j0 + shiftJ)] !== 0) {
            return kk;
        }
    }
    return -1;
}
function findContours(buf, width, height, threshold) {
    const N = buf.length;
    const types = new Int32Array(N);
    for(let i = 0; i < N; i++){
        types[i] = buf[i] <= threshold ? 1 : 0;
    }
    for(let i = 1; i < height - 1; i++){
        types[i * width] = types[i * width + width - 1] = 0;
    }
    for(let i = 0; i < width; i++){
        types[i] = types[width * height - 1 - i] = 0;
    }
    let nbd = 1;
    let lnbd;
    const contours = [];
    for(let i = 1; i < height - 1; i++){
        lnbd = 1;
        for(let j = 1; j < width - 1; j++){
            const ij = i * width + j;
            const pix = types[ij];
            if (pix === 0) {
                continue;
            }
            let i2 = i;
            let j2 = j;
            if (pix === 1 && types[ij - 1] === 0) {
                nbd += 1;
                j2 -= 1;
            } else if (pix >= 1 && types[ij + 1] === 0) {
                nbd += 1;
                j2 += 1;
                if (pix > 1) {
                    lnbd = pix;
                }
            } else {
                if (pix !== 1) {
                    lnbd = Math.abs(pix);
                }
                continue;
            }
            const points = [
                j,
                i
            ];
            const isHole = j2 === j + 1;
            const contour = {
                isHole,
                points,
                id: nbd,
                parent: 0
            };
            contours.push(contour);
            let contour0;
            for (const c of contours){
                if (c.id === lnbd) {
                    contour0 = c;
                    break;
                }
            }
            if (!contour0) {
                contour.parent = isHole ? lnbd : 0;
            } else if (contour0.isHole) {
                contour.parent = isHole ? contour0.parent : lnbd;
            } else {
                contour.parent = isHole ? lnbd : contour0.parent;
            }
            const k = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, clockwiseNonZero).call(SignatureExtractor, types, width, i, j, i2, j2, 0);
            if (k === -1) {
                types[ij] = -nbd;
                if (types[ij] !== 1) {
                    lnbd = Math.abs(types[ij]);
                }
                continue;
            }
            let shiftI = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, _neighborIdToIndex)[2 * k];
            let shiftJ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, _neighborIdToIndex)[2 * k + 1];
            const i1 = i + shiftI;
            const j1 = j + shiftJ;
            i2 = i1;
            j2 = j1;
            let i3 = i;
            let j3 = j;
            while(true){
                const kk = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, counterClockwiseNonZero).call(SignatureExtractor, types, width, i3, j3, i2, j2, 1);
                shiftI = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, _neighborIdToIndex)[2 * kk];
                shiftJ = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, _neighborIdToIndex)[2 * kk + 1];
                const i4 = i3 + shiftI;
                const j4 = j3 + shiftJ;
                points.push(j4, i4);
                const ij3 = i3 * width + j3;
                if (types[ij3 + 1] === 0) {
                    types[ij3] = -nbd;
                } else if (types[ij3] === 1) {
                    types[ij3] = nbd;
                }
                if (i4 === i && j4 === j && i3 === i1 && j3 === j1) {
                    if (types[ij] !== 1) {
                        lnbd = Math.abs(types[ij]);
                    }
                    break;
                } else {
                    i2 = i3;
                    j2 = j3;
                    i3 = i4;
                    j3 = j4;
                }
            }
        }
    }
    return contours;
}
function douglasPeuckerHelper(points, start, end, output) {
    if (end - start <= 4) {
        for(let i = start; i < end - 2; i += 2){
            output.push(points[i], points[i + 1]);
        }
        return;
    }
    const ax = points[start];
    const ay = points[start + 1];
    const abx = points[end - 4] - ax;
    const aby = points[end - 3] - ay;
    const dist = Math.hypot(abx, aby);
    const nabx = abx / dist;
    const naby = aby / dist;
    const aa = nabx * ay - naby * ax;
    const m = aby / abx;
    const invS = 1 / dist;
    const phi = Math.atan(m);
    const cosPhi = Math.cos(phi);
    const sinPhi = Math.sin(phi);
    const tmax = invS * (Math.abs(cosPhi) + Math.abs(sinPhi));
    const poly = invS * (1 - tmax + tmax ** 2);
    const partialPhi = Math.max(Math.atan(Math.abs(sinPhi + cosPhi) * poly), Math.atan(Math.abs(sinPhi - cosPhi) * poly));
    let dmax = 0;
    let index = start;
    for(let i = start + 2; i < end - 2; i += 2){
        const d = Math.abs(aa - nabx * points[i + 1] + naby * points[i]);
        if (d > dmax) {
            index = i;
            dmax = d;
        }
    }
    if (dmax > (dist * partialPhi) ** 2) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, douglasPeuckerHelper).call(SignatureExtractor, points, start, index + 2, output);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, douglasPeuckerHelper).call(SignatureExtractor, points, index, end, output);
    } else {
        output.push(ax, ay);
    }
}
function douglasPeucker(points) {
    const output = [];
    const len = points.length;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, douglasPeuckerHelper).call(SignatureExtractor, points, 0, len, output);
    output.push(points[len - 2], points[len - 1]);
    return output.length <= 4 ? null : output;
}
function bilateralFilter(buf, width, height, sigmaS, sigmaR, kernelSize) {
    const kernel = new Float32Array(kernelSize ** 2);
    const sigmaS2 = -2 * sigmaS ** 2;
    const halfSize = kernelSize >> 1;
    for(let i = 0; i < kernelSize; i++){
        const x = (i - halfSize) ** 2;
        for(let j = 0; j < kernelSize; j++){
            kernel[i * kernelSize + j] = Math.exp((x + (j - halfSize) ** 2) / sigmaS2);
        }
    }
    const rangeValues = new Float32Array(256);
    const sigmaR2 = -2 * sigmaR ** 2;
    for(let i = 0; i < 256; i++){
        rangeValues[i] = Math.exp(i ** 2 / sigmaR2);
    }
    const N = buf.length;
    const out = new Uint8Array(N);
    const histogram = new Uint32Array(256);
    for(let i = 0; i < height; i++){
        for(let j = 0; j < width; j++){
            const ij = i * width + j;
            const center = buf[ij];
            let sum = 0;
            let norm = 0;
            for(let k = 0; k < kernelSize; k++){
                const y = i + k - halfSize;
                if (y < 0 || y >= height) {
                    continue;
                }
                for(let l = 0; l < kernelSize; l++){
                    const x = j + l - halfSize;
                    if (x < 0 || x >= width) {
                        continue;
                    }
                    const neighbour = buf[y * width + x];
                    const w = kernel[k * kernelSize + l] * rangeValues[Math.abs(neighbour - center)];
                    sum += neighbour * w;
                    norm += w;
                }
            }
            const pix = out[ij] = Math.round(sum / norm);
            histogram[pix]++;
        }
    }
    return [
        out,
        histogram
    ];
}
function getHistogram(buf) {
    const histogram = new Uint32Array(256);
    for (const g of buf){
        histogram[g]++;
    }
    return histogram;
}
function toUint8(buf) {
    const N = buf.length;
    const out = new Uint8ClampedArray(N >> 2);
    let max = -Infinity;
    let min = Infinity;
    for(let i = 0, ii = out.length; i < ii; i++){
        const A = buf[(i << 2) + 3];
        if (A === 0) {
            max = out[i] = 0xff;
            continue;
        }
        const pix = out[i] = buf[i << 2];
        if (pix > max) {
            max = pix;
        }
        if (pix < min) {
            min = pix;
        }
    }
    const ratio = 255 / (max - min);
    for(let i = 0; i < N; i++){
        out[i] = (out[i] - min) * ratio;
    }
    return out;
}
function guessThreshold(histogram) {
    let i;
    let M = -Infinity;
    let L = -Infinity;
    const min = histogram.findIndex((v)=>v !== 0);
    let pos = min;
    let spos = min;
    for(i = min; i < 256; i++){
        const v = histogram[i];
        if (v > M) {
            if (i - pos > L) {
                L = i - pos;
                spos = i - 1;
            }
            M = v;
            pos = i;
        }
    }
    for(i = spos - 1; i >= 0; i--){
        if (histogram[i] > histogram[i + 1]) {
            break;
        }
    }
    return i;
}
function getGrayPixels(bitmap) {
    const originalBitmap = bitmap;
    const { width, height } = bitmap;
    const { maxDim } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, _PARAMETERS);
    let newWidth = width;
    let newHeight = height;
    if (width > maxDim || height > maxDim) {
        let prevWidth = width;
        let prevHeight = height;
        let steps = Math.log2(Math.max(width, height) / maxDim);
        const isteps = Math.floor(steps);
        steps = steps === isteps ? isteps - 1 : isteps;
        for(let i = 0; i < steps; i++){
            newWidth = Math.ceil(prevWidth / 2);
            newHeight = Math.ceil(prevHeight / 2);
            const offscreen = new OffscreenCanvas(newWidth, newHeight);
            const ctx = offscreen.getContext("2d");
            ctx.drawImage(bitmap, 0, 0, prevWidth, prevHeight, 0, 0, newWidth, newHeight);
            prevWidth = newWidth;
            prevHeight = newHeight;
            if (bitmap !== originalBitmap) {
                bitmap.close();
            }
            bitmap = offscreen.transferToImageBitmap();
        }
        const ratio = Math.min(maxDim / newWidth, maxDim / newHeight);
        newWidth = Math.round(newWidth * ratio);
        newHeight = Math.round(newHeight * ratio);
    }
    const offscreen = new OffscreenCanvas(newWidth, newHeight);
    const ctx = offscreen.getContext("2d", {
        willReadFrequently: true
    });
    ctx.filter = "grayscale(1)";
    ctx.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0, newWidth, newHeight);
    const grayImage = ctx.getImageData(0, 0, newWidth, newHeight).data;
    const uint8Buf = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, SignatureExtractor, toUint8).call(SignatureExtractor, grayImage);
    return [
        uint8Buf,
        newWidth,
        newHeight
    ];
}
; // ./src/display/editor/signature.js
class SignatureOptions extends DrawingOptions {
    clone() {
        const clone = new SignatureOptions();
        clone.updateAll(this);
        return clone;
    }
    constructor(){
        super();
        super.updateProperties({
            fill: AnnotationEditor._defaultLineColor,
            "stroke-width": 0
        });
    }
}
class DrawnSignatureOptions extends InkDrawingOptions {
    clone() {
        const clone = new DrawnSignatureOptions(this._viewParameters);
        clone.updateAll(this);
        return clone;
    }
    constructor(viewerParameters){
        super(viewerParameters);
        super.updateProperties({
            stroke: AnnotationEditor._defaultLineColor,
            "stroke-width": 1
        });
    }
}
var _isExtracted = /*#__PURE__*/ new WeakMap(), _description = /*#__PURE__*/ new WeakMap(), _signatureData = /*#__PURE__*/ new WeakMap(), _signatureUUID = /*#__PURE__*/ new WeakMap();
class SignatureEditor extends DrawingEditor {
    static initialize(l10n, uiManager) {
        AnnotationEditor.initialize(l10n, uiManager);
        this._defaultDrawingOptions = new SignatureOptions();
        this._defaultDrawnSignatureOptions = new DrawnSignatureOptions(uiManager.viewParameters);
    }
    static getDefaultDrawingOptions(options) {
        const clone = this._defaultDrawingOptions.clone();
        clone.updateProperties(options);
        return clone;
    }
    static get supportMultipleDrawings() {
        return false;
    }
    static get typesMap() {
        return shadow(this, "typesMap", new Map());
    }
    static get isDrawer() {
        return false;
    }
    get telemetryFinalData() {
        return {
            type: "signature",
            hasDescription: !!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _description)
        };
    }
    static computeTelemetryFinalData(data) {
        const hasDescriptionStats = data.get("hasDescription");
        var _hasDescriptionStats_get, _hasDescriptionStats_get1;
        return {
            hasAltText: (_hasDescriptionStats_get = hasDescriptionStats.get(true)) !== null && _hasDescriptionStats_get !== void 0 ? _hasDescriptionStats_get : 0,
            hasNoAltText: (_hasDescriptionStats_get1 = hasDescriptionStats.get(false)) !== null && _hasDescriptionStats_get1 !== void 0 ? _hasDescriptionStats_get1 : 0
        };
    }
    get isResizable() {
        return true;
    }
    onScaleChanging() {
        if (this._drawId === null) {
            return;
        }
        super.onScaleChanging();
    }
    render() {
        if (this.div) {
            return this.div;
        }
        let baseX, baseY;
        const { _isCopy } = this;
        if (_isCopy) {
            this._isCopy = false;
            baseX = this.x;
            baseY = this.y;
        }
        super.render();
        if (this._drawId === null) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureData)) {
                const { lines, mustSmooth, areContours, description, uuid, heightInPage } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureData);
                const { rawDims: { pageWidth, pageHeight }, rotation } = this.parent.viewport;
                const outline = SignatureExtractor.processDrawnLines({
                    lines,
                    pageWidth,
                    pageHeight,
                    rotation,
                    innerMargin: SignatureEditor._INNER_MARGIN,
                    mustSmooth,
                    areContours
                });
                this.addSignature(outline, heightInPage, description, uuid);
            } else {
                this.div.setAttribute("data-l10n-args", JSON.stringify({
                    description: ""
                }));
                this.div.hidden = true;
                this._uiManager.getSignature(this);
            }
        }
        if (_isCopy) {
            this._isCopy = true;
            this._moveAfterPaste(baseX, baseY);
        }
        return this.div;
    }
    setUuid(uuid) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureUUID, uuid);
        this.addEditToolbar();
    }
    getUuid() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureUUID);
    }
    get description() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _description);
    }
    set description(description) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _description, description);
        super.addEditToolbar().then((toolbar)=>{
            toolbar === null || toolbar === void 0 ? void 0 : toolbar.updateEditSignatureButton(description);
        });
    }
    getSignaturePreview() {
        const { newCurves, areContours, thickness, width, height } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureData);
        const maxDim = Math.max(width, height);
        const outlineData = SignatureExtractor.processDrawnLines({
            lines: {
                curves: newCurves.map((points)=>({
                        points
                    })),
                thickness,
                width,
                height
            },
            pageWidth: maxDim,
            pageHeight: maxDim,
            rotation: 0,
            innerMargin: 0,
            mustSmooth: false,
            areContours
        });
        return {
            areContours,
            outline: outlineData.outline
        };
    }
    async addEditToolbar() {
        const toolbar = await super.addEditToolbar();
        if (!toolbar) {
            return null;
        }
        if (this._uiManager.signatureManager && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _description) !== null) {
            await toolbar.addEditSignatureButton(this._uiManager.signatureManager, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureUUID), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _description));
            toolbar.show();
        }
        return toolbar;
    }
    addSignature(data, heightInPage, description, uuid) {
        const { x: savedX, y: savedY } = this;
        const { outline } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureData, data);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isExtracted, outline instanceof ContourDrawOutline);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _description, description);
        this.div.setAttribute("data-l10n-args", JSON.stringify({
            description
        }));
        let drawingOptions;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isExtracted)) {
            drawingOptions = SignatureEditor.getDefaultDrawingOptions();
        } else {
            drawingOptions = SignatureEditor._defaultDrawnSignatureOptions.clone();
            drawingOptions.updateProperties({
                "stroke-width": outline.thickness
            });
        }
        this._addOutlines({
            drawOutlines: outline,
            drawingOptions
        });
        const [parentWidth, parentHeight] = this.parentDimensions;
        const [, pageHeight] = this.pageDimensions;
        let newHeight = heightInPage / pageHeight;
        newHeight = newHeight >= 1 ? 0.5 : newHeight;
        this.width *= newHeight / this.height;
        if (this.width >= 1) {
            newHeight *= 0.9 / this.width;
            this.width = 0.9;
        }
        this.height = newHeight;
        this.setDims(parentWidth * this.width, parentHeight * this.height);
        this.x = savedX;
        this.y = savedY;
        this.center();
        this._onResized();
        this.onScaleChanging();
        this.rotate();
        this._uiManager.addToAnnotationStorage(this);
        this.setUuid(uuid);
        this._reportTelemetry({
            action: "pdfjs.signature.inserted",
            data: {
                hasBeenSaved: !!uuid,
                hasDescription: !!description
            }
        });
        this.div.hidden = false;
    }
    getFromImage(bitmap) {
        const { rawDims: { pageWidth, pageHeight }, rotation } = this.parent.viewport;
        return SignatureExtractor.process(bitmap, pageWidth, pageHeight, rotation, SignatureEditor._INNER_MARGIN);
    }
    getFromText(text, fontInfo) {
        const { rawDims: { pageWidth, pageHeight }, rotation } = this.parent.viewport;
        return SignatureExtractor.extractContoursFromText(text, fontInfo, pageWidth, pageHeight, rotation, SignatureEditor._INNER_MARGIN);
    }
    getDrawnSignature(curves) {
        const { rawDims: { pageWidth, pageHeight }, rotation } = this.parent.viewport;
        return SignatureExtractor.processDrawnLines({
            lines: curves,
            pageWidth,
            pageHeight,
            rotation,
            innerMargin: SignatureEditor._INNER_MARGIN,
            mustSmooth: false,
            areContours: false
        });
    }
    createDrawingOptions(param) {
        let { areContours, thickness } = param;
        if (areContours) {
            this._drawingOptions = SignatureEditor.getDefaultDrawingOptions();
        } else {
            this._drawingOptions = SignatureEditor._defaultDrawnSignatureOptions.clone();
            this._drawingOptions.updateProperties({
                "stroke-width": thickness
            });
        }
    }
    serialize() {
        let isForCopying = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        if (this.isEmpty()) {
            return null;
        }
        const { lines, points, rect } = this.serializeDraw(isForCopying);
        const { _drawingOptions: { "stroke-width": thickness } } = this;
        const serialized = {
            annotationType: AnnotationEditorType.SIGNATURE,
            isSignature: true,
            areContours: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isExtracted),
            color: [
                0,
                0,
                0
            ],
            thickness: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isExtracted) ? 0 : thickness,
            pageIndex: this.pageIndex,
            rect,
            rotation: this.rotation,
            structTreeParentId: this._structTreeParentId
        };
        if (isForCopying) {
            serialized.paths = {
                lines,
                points
            };
            serialized.uuid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureUUID);
            serialized.isCopy = true;
        } else {
            serialized.lines = lines;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _description)) {
            serialized.accessibilityData = {
                type: "Figure",
                alt: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _description)
            };
        }
        return serialized;
    }
    static deserializeDraw(pageX, pageY, pageWidth, pageHeight, innerMargin, data) {
        if (data.areContours) {
            return ContourDrawOutline.deserialize(pageX, pageY, pageWidth, pageHeight, innerMargin, data);
        }
        return InkDrawOutline.deserialize(pageX, pageY, pageWidth, pageHeight, innerMargin, data);
    }
    static async deserialize(data, parent, uiManager) {
        var _data_accessibilityData;
        const editor = await super.deserialize(data, parent, uiManager);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _isExtracted, data.areContours);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _description, ((_data_accessibilityData = data.accessibilityData) === null || _data_accessibilityData === void 0 ? void 0 : _data_accessibilityData.alt) || "");
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _signatureUUID, data.uuid);
        return editor;
    }
    constructor(params){
        super({
            ...params,
            mustBeCommitted: true,
            name: "signatureEditor"
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isExtracted, {
            writable: true,
            value: false
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _description, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureData, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureUUID, {
            writable: true,
            value: null
        });
        this._willKeepAspectRatio = true;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _signatureData, params.signatureData || null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _description, null);
        this.defaultL10nId = "pdfjs-editor-signature-editor1";
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(SignatureEditor, "_type", "signature");
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(SignatureEditor, "_editorType", AnnotationEditorType.SIGNATURE);
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(SignatureEditor, "_defaultDrawingOptions", null);
; // ./src/display/editor/stamp.js
var _bitmap = /*#__PURE__*/ new WeakMap(), _bitmapId = /*#__PURE__*/ new WeakMap(), _bitmapPromise = /*#__PURE__*/ new WeakMap(), _bitmapUrl = /*#__PURE__*/ new WeakMap(), _bitmapFile = /*#__PURE__*/ new WeakMap(), _bitmapFileName = /*#__PURE__*/ new WeakMap(), _canvas = /*#__PURE__*/ new WeakMap(), _missingCanvas = /*#__PURE__*/ new WeakMap(), _resizeTimeoutId = /*#__PURE__*/ new WeakMap(), _isSvg = /*#__PURE__*/ new WeakMap(), _hasBeenAddedInUndoStack = /*#__PURE__*/ new WeakMap(), _getBitmapFetched = /*#__PURE__*/ new WeakSet(), _getBitmapDone = /*#__PURE__*/ new WeakSet(), _getBitmap = /*#__PURE__*/ new WeakSet(), _createCanvas = /*#__PURE__*/ new WeakSet(), _scaleBitmap = /*#__PURE__*/ new WeakSet(), _drawBitmap = /*#__PURE__*/ new WeakSet(), _serializeBitmap = /*#__PURE__*/ new WeakSet(), _hasElementChanged3 = /*#__PURE__*/ new WeakSet();
class StampEditor extends AnnotationEditor {
    static initialize(l10n, uiManager) {
        AnnotationEditor.initialize(l10n, uiManager);
    }
    static isHandlingMimeForPasting(mime) {
        return SupportedImageMimeTypes.includes(mime);
    }
    static paste(item, parent) {
        parent.pasteEditor({
            mode: AnnotationEditorType.STAMP
        }, {
            bitmapFile: item.getAsFile()
        });
    }
    altTextFinish() {
        if (this._uiManager.useNewAltTextFlow) {
            this.div.hidden = false;
        }
        super.altTextFinish();
    }
    get telemetryFinalData() {
        var _this_altTextData;
        return {
            type: "stamp",
            hasAltText: !!((_this_altTextData = this.altTextData) === null || _this_altTextData === void 0 ? void 0 : _this_altTextData.altText)
        };
    }
    static computeTelemetryFinalData(data) {
        const hasAltTextStats = data.get("hasAltText");
        var _hasAltTextStats_get, _hasAltTextStats_get1;
        return {
            hasAltText: (_hasAltTextStats_get = hasAltTextStats.get(true)) !== null && _hasAltTextStats_get !== void 0 ? _hasAltTextStats_get : 0,
            hasNoAltText: (_hasAltTextStats_get1 = hasAltTextStats.get(false)) !== null && _hasAltTextStats_get1 !== void 0 ? _hasAltTextStats_get1 : 0
        };
    }
    async mlGuessAltText() {
        let imageData = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, updateAltTextData = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
        if (this.hasAltTextData()) {
            return null;
        }
        const { mlManager } = this._uiManager;
        if (!mlManager) {
            throw new Error("No ML.");
        }
        if (!await mlManager.isEnabledFor("altText")) {
            throw new Error("ML isn't enabled for alt text.");
        }
        const { data, width, height } = imageData || this.copyCanvas(null, null, true).imageData;
        const response = await mlManager.guess({
            name: "altText",
            request: {
                data,
                width,
                height,
                channels: data.length / (width * height)
            }
        });
        if (!response) {
            throw new Error("No response from the AI service.");
        }
        if (response.error) {
            throw new Error("Error from the AI service.");
        }
        if (response.cancel) {
            return null;
        }
        if (!response.output) {
            throw new Error("No valid response from the AI service.");
        }
        const altText = response.output;
        await this.setGuessedAltText(altText);
        if (updateAltTextData && !this.hasAltTextData()) {
            this.altTextData = {
                alt: altText,
                decorative: false
            };
        }
        return altText;
    }
    remove() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId)) {
            var _class_private_field_get;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap, null);
            this._uiManager.imageManager.deleteId((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId));
            (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _canvas)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.remove();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _canvas, null);
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizeTimeoutId)) {
                clearTimeout((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizeTimeoutId));
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizeTimeoutId, null);
            }
        }
        super.remove();
    }
    rebuild() {
        if (!this.parent) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId)) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBitmap, getBitmap).call(this);
            }
            return;
        }
        super.rebuild();
        if (this.div === null) {
            return;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _canvas) === null) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBitmap, getBitmap).call(this);
        }
        if (!this.isAttachedToDOM) {
            this.parent.add(this);
        }
    }
    onceAdded(focus) {
        this._isDraggable = true;
        if (focus) {
            this.div.focus();
        }
    }
    isEmpty() {
        return !((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapPromise) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapUrl) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapFile) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _missingCanvas));
    }
    get isResizable() {
        return true;
    }
    render() {
        if (this.div) {
            return this.div;
        }
        let baseX, baseY;
        if (this._isCopy) {
            baseX = this.x;
            baseY = this.y;
        }
        super.render();
        this.div.hidden = true;
        this.addAltTextButton();
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _missingCanvas)) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap)) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createCanvas, createCanvas).call(this);
            } else {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBitmap, getBitmap).call(this);
            }
        }
        if (this._isCopy) {
            this._moveAfterPaste(baseX, baseY);
        }
        this._uiManager.addShouldRescale(this);
        return this.div;
    }
    setCanvas(annotationElementId, canvas) {
        const { id: bitmapId, bitmap } = this._uiManager.imageManager.getFromCanvas(annotationElementId, canvas);
        canvas.remove();
        if (bitmapId && this._uiManager.imageManager.isValidId(bitmapId)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId, bitmapId);
            if (bitmap) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap, bitmap);
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _missingCanvas, false);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createCanvas, createCanvas).call(this);
        }
    }
    _onResized() {
        this.onScaleChanging();
    }
    onScaleChanging() {
        if (!this.parent) {
            return;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizeTimeoutId) !== null) {
            clearTimeout((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizeTimeoutId));
        }
        const TIME_TO_WAIT = 200;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizeTimeoutId, setTimeout(()=>{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizeTimeoutId, null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawBitmap, drawBitmap).call(this);
        }, TIME_TO_WAIT));
    }
    copyCanvas(maxDataDimension, maxPreviewDimension) {
        let createImageData = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
        if (!maxDataDimension) {
            maxDataDimension = 224;
        }
        const { width: bitmapWidth, height: bitmapHeight } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap);
        const outputScale = new OutputScale();
        let bitmap = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap);
        let width = bitmapWidth, height = bitmapHeight;
        let canvas = null;
        if (maxPreviewDimension) {
            var _window_matchMedia, _window;
            if (bitmapWidth > maxPreviewDimension || bitmapHeight > maxPreviewDimension) {
                const ratio = Math.min(maxPreviewDimension / bitmapWidth, maxPreviewDimension / bitmapHeight);
                width = Math.floor(bitmapWidth * ratio);
                height = Math.floor(bitmapHeight * ratio);
            }
            canvas = document.createElement("canvas");
            const scaledWidth = canvas.width = Math.ceil(width * outputScale.sx);
            const scaledHeight = canvas.height = Math.ceil(height * outputScale.sy);
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isSvg)) {
                bitmap = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scaleBitmap, scaleBitmap).call(this, scaledWidth, scaledHeight);
            }
            const ctx = canvas.getContext("2d");
            ctx.filter = this._uiManager.hcmFilter;
            let white = "white", black = "#cfcfd8";
            if (this._uiManager.hcmFilter !== "none") {
                black = "black";
            } else if ((_window_matchMedia = (_window = window).matchMedia) === null || _window_matchMedia === void 0 ? void 0 : _window_matchMedia.call(_window, "(prefers-color-scheme: dark)").matches) {
                white = "#8f8f9d";
                black = "#42414d";
            }
            const boxDim = 15;
            const boxDimWidth = boxDim * outputScale.sx;
            const boxDimHeight = boxDim * outputScale.sy;
            const pattern = new OffscreenCanvas(boxDimWidth * 2, boxDimHeight * 2);
            const patternCtx = pattern.getContext("2d");
            patternCtx.fillStyle = white;
            patternCtx.fillRect(0, 0, boxDimWidth * 2, boxDimHeight * 2);
            patternCtx.fillStyle = black;
            patternCtx.fillRect(0, 0, boxDimWidth, boxDimHeight);
            patternCtx.fillRect(boxDimWidth, boxDimHeight, boxDimWidth, boxDimHeight);
            ctx.fillStyle = ctx.createPattern(pattern, "repeat");
            ctx.fillRect(0, 0, scaledWidth, scaledHeight);
            ctx.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0, scaledWidth, scaledHeight);
        }
        let imageData = null;
        if (createImageData) {
            let dataWidth, dataHeight;
            if (outputScale.symmetric && bitmap.width < maxDataDimension && bitmap.height < maxDataDimension) {
                dataWidth = bitmap.width;
                dataHeight = bitmap.height;
            } else {
                bitmap = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap);
                if (bitmapWidth > maxDataDimension || bitmapHeight > maxDataDimension) {
                    const ratio = Math.min(maxDataDimension / bitmapWidth, maxDataDimension / bitmapHeight);
                    dataWidth = Math.floor(bitmapWidth * ratio);
                    dataHeight = Math.floor(bitmapHeight * ratio);
                    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isSvg)) {
                        bitmap = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scaleBitmap, scaleBitmap).call(this, dataWidth, dataHeight);
                    }
                }
            }
            const offscreen = new OffscreenCanvas(dataWidth, dataHeight);
            const offscreenCtx = offscreen.getContext("2d", {
                willReadFrequently: true
            });
            offscreenCtx.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0, dataWidth, dataHeight);
            imageData = {
                width: dataWidth,
                height: dataHeight,
                data: offscreenCtx.getImageData(0, 0, dataWidth, dataHeight).data
            };
        }
        return {
            canvas,
            width,
            height,
            imageData
        };
    }
    static async deserialize(data, parent, uiManager) {
        let initialData = null;
        let missingCanvas = false;
        if (data instanceof StampAnnotationElement) {
            var _this;
            const { data: { rect, rotation, id, structParent, popupRef }, container, parent: { page: { pageNumber } }, canvas } = data;
            let bitmapId, bitmap;
            if (canvas) {
                delete data.canvas;
                ({ id: bitmapId, bitmap } = uiManager.imageManager.getFromCanvas(container.id, canvas));
                canvas.remove();
            } else {
                missingCanvas = true;
                data._hasNoCanvas = true;
            }
            const altText = ((_this = await parent._structTree.getAriaAttributes("".concat(AnnotationPrefix).concat(id))) === null || _this === void 0 ? void 0 : _this.get("aria-label")) || "";
            initialData = data = {
                annotationType: AnnotationEditorType.STAMP,
                bitmapId,
                bitmap,
                pageIndex: pageNumber - 1,
                rect: rect.slice(0),
                rotation,
                id,
                deleted: false,
                accessibilityData: {
                    decorative: false,
                    altText
                },
                isSvg: false,
                structParent,
                popupRef
            };
        }
        const editor = await super.deserialize(data, parent, uiManager);
        const { rect, bitmap, bitmapUrl, bitmapId, isSvg, accessibilityData } = data;
        if (missingCanvas) {
            uiManager.addMissingCanvas(data.id, editor);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _missingCanvas, true);
        } else if (bitmapId && uiManager.imageManager.isValidId(bitmapId)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _bitmapId, bitmapId);
            if (bitmap) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _bitmap, bitmap);
            }
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _bitmapUrl, bitmapUrl);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _isSvg, isSvg);
        const [parentWidth, parentHeight] = editor.pageDimensions;
        editor.width = (rect[2] - rect[0]) / parentWidth;
        editor.height = (rect[3] - rect[1]) / parentHeight;
        editor.annotationElementId = data.id || null;
        if (accessibilityData) {
            editor.altTextData = accessibilityData;
        }
        editor._initialData = initialData;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(editor, _hasBeenAddedInUndoStack, !!initialData);
        return editor;
    }
    serialize() {
        let isForCopying = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false, context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
        var _context;
        if (this.isEmpty()) {
            return null;
        }
        if (this.deleted) {
            return this.serializeDeleted();
        }
        const serialized = {
            annotationType: AnnotationEditorType.STAMP,
            bitmapId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId),
            pageIndex: this.pageIndex,
            rect: this.getRect(0, 0),
            rotation: this.rotation,
            isSvg: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isSvg),
            structTreeParentId: this._structTreeParentId
        };
        if (isForCopying) {
            serialized.bitmapUrl = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serializeBitmap, serializeBitmap).call(this, true);
            serialized.accessibilityData = this.serializeAltText(true);
            serialized.isCopy = true;
            return serialized;
        }
        const { decorative, altText } = this.serializeAltText(false);
        if (!decorative && altText) {
            serialized.accessibilityData = {
                type: "Figure",
                alt: altText
            };
        }
        if (this.annotationElementId) {
            const changes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasElementChanged3, hasElementChanged3).call(this, serialized);
            if (changes.isSame) {
                return null;
            }
            if (changes.isSameAltText) {
                delete serialized.accessibilityData;
            } else {
                var _this__initialData_structParent;
                serialized.accessibilityData.structParent = (_this__initialData_structParent = this._initialData.structParent) !== null && _this__initialData_structParent !== void 0 ? _this__initialData_structParent : -1;
            }
        }
        serialized.id = this.annotationElementId;
        if (context === null) {
            return serialized;
        }
        (_context = context).stamps || (_context.stamps = new Map());
        const area = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isSvg) ? (serialized.rect[2] - serialized.rect[0]) * (serialized.rect[3] - serialized.rect[1]) : null;
        if (!context.stamps.has((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId))) {
            context.stamps.set((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId), {
                area,
                serialized
            });
            serialized.bitmap = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serializeBitmap, serializeBitmap).call(this, false);
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isSvg)) {
            const prevData = context.stamps.get((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId));
            if (area > prevData.area) {
                prevData.area = area;
                prevData.serialized.bitmap.close();
                prevData.serialized.bitmap = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serializeBitmap, serializeBitmap).call(this, false);
            }
        }
        return serialized;
    }
    renderAnnotationElement(annotation) {
        annotation.updateEdited({
            rect: this.getRect(0, 0)
        });
        return null;
    }
    constructor(params){
        super({
            ...params,
            name: "stampEditor"
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBitmapFetched), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBitmapDone), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBitmap), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createCanvas), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scaleBitmap), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawBitmap), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _serializeBitmap), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasElementChanged3), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapPromise, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapUrl, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapFile, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapFileName, {
            writable: true,
            value: ""
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _canvas, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _missingCanvas, {
            writable: true,
            value: false
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _resizeTimeoutId, {
            writable: true,
            value: null
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isSvg, {
            writable: true,
            value: false
        }), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasBeenAddedInUndoStack, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapUrl, params.bitmapUrl);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapFile, params.bitmapFile);
        this.defaultL10nId = "pdfjs-editor-stamp-editor";
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(StampEditor, "_type", "stamp");
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(StampEditor, "_editorType", AnnotationEditorType.STAMP);
function getBitmapFetched(data) {
    let fromId = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    if (!data) {
        this.remove();
        return;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap, data.bitmap);
    if (!fromId) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId, data.id);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isSvg, data.isSvg);
    }
    if (data.file) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapFileName, data.file.name);
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createCanvas, createCanvas).call(this);
}
function getBitmapDone() {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapPromise, null);
    this._uiManager.enableWaiting(false);
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _canvas)) {
        return;
    }
    if (this._uiManager.useNewAltTextWhenAddingImage && this._uiManager.useNewAltTextFlow && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap)) {
        this._editToolbar.hide();
        this._uiManager.editAltText(this, true);
        return;
    }
    if (!this._uiManager.useNewAltTextWhenAddingImage && this._uiManager.useNewAltTextFlow && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap)) {
        this._reportTelemetry({
            action: "pdfjs.image.image_added",
            data: {
                alt_text_modal: false,
                alt_text_type: "empty"
            }
        });
        try {
            this.mlGuessAltText();
        } catch (e) {}
    }
    this.div.focus();
}
function getBitmap() {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId)) {
        this._uiManager.enableWaiting(true);
        this._uiManager.imageManager.getFromId((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId)).then((data)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBitmapFetched, getBitmapFetched).call(this, data, true)).finally(()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBitmapDone, getBitmapDone).call(this));
        return;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapUrl)) {
        const url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapUrl);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapUrl, null);
        this._uiManager.enableWaiting(true);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapPromise, this._uiManager.imageManager.getFromUrl(url).then((data)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBitmapFetched, getBitmapFetched).call(this, data)).finally(()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBitmapDone, getBitmapDone).call(this)));
        return;
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapFile)) {
        const file = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapFile);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapFile, null);
        this._uiManager.enableWaiting(true);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapPromise, this._uiManager.imageManager.getFromFile(file).then((data)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBitmapFetched, getBitmapFetched).call(this, data)).finally(()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBitmapDone, getBitmapDone).call(this)));
        return;
    }
    const input = document.createElement("input");
    input.type = "file";
    input.accept = SupportedImageMimeTypes.join(",");
    const signal = this._uiManager._signal;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapPromise, new Promise((resolve)=>{
        input.addEventListener("change", async ()=>{
            if (!input.files || input.files.length === 0) {
                this.remove();
            } else {
                this._uiManager.enableWaiting(true);
                const data = await this._uiManager.imageManager.getFromFile(input.files[0]);
                this._reportTelemetry({
                    action: "pdfjs.image.image_selected",
                    data: {
                        alt_text_modal: this._uiManager.useNewAltTextFlow
                    }
                });
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBitmapFetched, getBitmapFetched).call(this, data);
            }
            resolve();
        }, {
            signal
        });
        input.addEventListener("cancel", ()=>{
            this.remove();
            resolve();
        }, {
            signal
        });
    }).finally(()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getBitmapDone, getBitmapDone).call(this)));
    input.click();
}
function createCanvas() {
    var _this__initialOptions;
    const { div } = this;
    let { width, height } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap);
    const [pageWidth, pageHeight] = this.pageDimensions;
    const MAX_RATIO = 0.75;
    if (this.width) {
        width = this.width * pageWidth;
        height = this.height * pageHeight;
    } else if (width > MAX_RATIO * pageWidth || height > MAX_RATIO * pageHeight) {
        const factor = Math.min(MAX_RATIO * pageWidth / width, MAX_RATIO * pageHeight / height);
        width *= factor;
        height *= factor;
    }
    const [parentWidth, parentHeight] = this.parentDimensions;
    this.setDims(width * parentWidth / pageWidth, height * parentHeight / pageHeight);
    this._uiManager.enableWaiting(false);
    const canvas = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _canvas, document.createElement("canvas"));
    canvas.setAttribute("role", "img");
    this.addContainer(canvas);
    this.width = width / pageWidth;
    this.height = height / pageHeight;
    if ((_this__initialOptions = this._initialOptions) === null || _this__initialOptions === void 0 ? void 0 : _this__initialOptions.isCentered) {
        this.center();
    } else {
        this.fixAndSetPosition();
    }
    this._initialOptions = null;
    if (!this._uiManager.useNewAltTextWhenAddingImage || !this._uiManager.useNewAltTextFlow || this.annotationElementId) {
        div.hidden = false;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawBitmap, drawBitmap).call(this);
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasBeenAddedInUndoStack)) {
        this.parent.addUndoableEditor(this);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hasBeenAddedInUndoStack, true);
    }
    this._reportTelemetry({
        action: "inserted_image"
    });
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapFileName)) {
        this.div.setAttribute("aria-description", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapFileName));
    }
}
function scaleBitmap(width, height) {
    const { width: bitmapWidth, height: bitmapHeight } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap);
    let newWidth = bitmapWidth;
    let newHeight = bitmapHeight;
    let bitmap = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap);
    while(newWidth > 2 * width || newHeight > 2 * height){
        const prevWidth = newWidth;
        const prevHeight = newHeight;
        if (newWidth > 2 * width) {
            newWidth = newWidth >= 16384 ? Math.floor(newWidth / 2) - 1 : Math.ceil(newWidth / 2);
        }
        if (newHeight > 2 * height) {
            newHeight = newHeight >= 16384 ? Math.floor(newHeight / 2) - 1 : Math.ceil(newHeight / 2);
        }
        const offscreen = new OffscreenCanvas(newWidth, newHeight);
        const ctx = offscreen.getContext("2d");
        ctx.drawImage(bitmap, 0, 0, prevWidth, prevHeight, 0, 0, newWidth, newHeight);
        bitmap = offscreen.transferToImageBitmap();
    }
    return bitmap;
}
function drawBitmap() {
    const [parentWidth, parentHeight] = this.parentDimensions;
    const { width, height } = this;
    const outputScale = new OutputScale();
    const scaledWidth = Math.ceil(width * parentWidth * outputScale.sx);
    const scaledHeight = Math.ceil(height * parentHeight * outputScale.sy);
    const canvas = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _canvas);
    if (!canvas || canvas.width === scaledWidth && canvas.height === scaledHeight) {
        return;
    }
    canvas.width = scaledWidth;
    canvas.height = scaledHeight;
    const bitmap = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isSvg) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _scaleBitmap, scaleBitmap).call(this, scaledWidth, scaledHeight);
    const ctx = canvas.getContext("2d");
    ctx.filter = this._uiManager.hcmFilter;
    ctx.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0, scaledWidth, scaledHeight);
}
function serializeBitmap(toUrl) {
    if (toUrl) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isSvg)) {
            const url = this._uiManager.imageManager.getSvgUrl((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmapId));
            if (url) {
                return url;
            }
        }
        const canvas = document.createElement("canvas");
        ({ width: canvas.width, height: canvas.height } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap));
        const ctx = canvas.getContext("2d");
        ctx.drawImage((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap), 0, 0);
        return canvas.toDataURL();
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isSvg)) {
        const [pageWidth, pageHeight] = this.pageDimensions;
        const width = Math.round(this.width * pageWidth * PixelsPerInch.PDF_TO_CSS_UNITS);
        const height = Math.round(this.height * pageHeight * PixelsPerInch.PDF_TO_CSS_UNITS);
        const offscreen = new OffscreenCanvas(width, height);
        const ctx = offscreen.getContext("2d");
        ctx.drawImage((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap), 0, 0, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap).width, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap).height, 0, 0, width, height);
        return offscreen.transferToImageBitmap();
    }
    return structuredClone((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _bitmap));
}
function hasElementChanged3(serialized) {
    var _serialized_accessibilityData;
    const { pageIndex, accessibilityData: { altText } } = this._initialData;
    const isSamePageIndex = serialized.pageIndex === pageIndex;
    const isSameAltText = (((_serialized_accessibilityData = serialized.accessibilityData) === null || _serialized_accessibilityData === void 0 ? void 0 : _serialized_accessibilityData.alt) || "") === altText;
    return {
        isSame: !this._hasBeenMoved && !this._hasBeenResized && isSamePageIndex && isSameAltText,
        isSameAltText
    };
}
; // ./src/display/editor/annotation_editor_layer.js
var _accessibilityManager1 = /*#__PURE__*/ new WeakMap(), _allowClick = /*#__PURE__*/ new WeakMap(), _annotationLayer = /*#__PURE__*/ new WeakMap(), _clickAC = /*#__PURE__*/ new WeakMap(), _editorFocusTimeoutId = /*#__PURE__*/ new WeakMap(), _editors = /*#__PURE__*/ new WeakMap(), _hadPointerDown = /*#__PURE__*/ new WeakMap(), _isDisabling = /*#__PURE__*/ new WeakMap(), _isEnabling = /*#__PURE__*/ new WeakMap(), _drawingAC = /*#__PURE__*/ new WeakMap(), _focusedElement = /*#__PURE__*/ new WeakMap(), _textLayer = /*#__PURE__*/ new WeakMap(), _textSelectionAC = /*#__PURE__*/ new WeakMap(), _uiManager2 = /*#__PURE__*/ new WeakMap(), _textLayerPointerDown = /*#__PURE__*/ new WeakSet(), _currentEditorType = /*#__PURE__*/ new WeakMap(), _createNewEditor = /*#__PURE__*/ new WeakSet(), _getCenterPoint = /*#__PURE__*/ new WeakSet(), _cleanup = /*#__PURE__*/ new WeakSet();
class AnnotationEditorLayer {
    get isEmpty() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editors).size === 0;
    }
    get isInvisible() {
        return this.isEmpty && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).getMode() === AnnotationEditorType.NONE;
    }
    updateToolbar(options) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).updateToolbar(options);
    }
    updateMode() {
        let mode = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).getMode();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cleanup, cleanup).call(this);
        switch(mode){
            case AnnotationEditorType.NONE:
                this.disableTextSelection();
                this.togglePointerEvents(false);
                this.toggleAnnotationLayerPointerEvents(true);
                this.disableClick();
                return;
            case AnnotationEditorType.INK:
                this.disableTextSelection();
                this.togglePointerEvents(true);
                this.enableClick();
                break;
            case AnnotationEditorType.HIGHLIGHT:
                this.enableTextSelection();
                this.togglePointerEvents(false);
                this.disableClick();
                break;
            default:
                this.disableTextSelection();
                this.togglePointerEvents(true);
                this.enableClick();
        }
        this.toggleAnnotationLayerPointerEvents(false);
        const { classList } = this.div;
        for (const editorType of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditorLayer, AnnotationEditorLayer, _editorTypes1).values()){
            classList.toggle("".concat(editorType._type, "Editing"), mode === editorType._editorType);
        }
        this.div.hidden = false;
    }
    hasTextLayer(textLayer) {
        var _class_private_field_get;
        return textLayer === ((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayer)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.div);
    }
    setEditingState(isEditing) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).setEditingState(isEditing);
    }
    addCommands(params) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).addCommands(params);
    }
    cleanUndoStack(type) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).cleanUndoStack(type);
    }
    toggleDrawing() {
        let enabled = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        this.div.classList.toggle("drawing", !enabled);
    }
    togglePointerEvents() {
        let enabled = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        this.div.classList.toggle("disabled", !enabled);
    }
    toggleAnnotationLayerPointerEvents() {
        let enabled = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        var _class_private_field_get;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationLayer)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.div.classList.toggle("disabled", !enabled);
    }
    async enable() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEnabling, true);
        this.div.tabIndex = 0;
        this.togglePointerEvents(true);
        const annotationElementIds = new Set();
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editors).values()){
            editor.enableEditing();
            editor.show(true);
            if (editor.annotationElementId) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).removeChangedExistingAnnotation(editor);
                annotationElementIds.add(editor.annotationElementId);
            }
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationLayer)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEnabling, false);
            return;
        }
        const editables = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationLayer).getEditableAnnotations();
        for (const editable of editables){
            editable.hide();
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).isDeletedAnnotationElement(editable.data.id)) {
                continue;
            }
            if (annotationElementIds.has(editable.data.id)) {
                continue;
            }
            const editor = await this.deserialize(editable);
            if (!editor) {
                continue;
            }
            this.addOrRebuild(editor);
            editor.enableEditing();
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEnabling, false);
    }
    disable() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDisabling, true);
        this.div.tabIndex = -1;
        this.togglePointerEvents(false);
        const changedAnnotations = new Map();
        const resetAnnotations = new Map();
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editors).values()){
            var _this_getEditableAnnotation;
            editor.disableEditing();
            if (!editor.annotationElementId) {
                continue;
            }
            if (editor.serialize() !== null) {
                changedAnnotations.set(editor.annotationElementId, editor);
                continue;
            } else {
                resetAnnotations.set(editor.annotationElementId, editor);
            }
            (_this_getEditableAnnotation = this.getEditableAnnotation(editor.annotationElementId)) === null || _this_getEditableAnnotation === void 0 ? void 0 : _this_getEditableAnnotation.show();
            editor.remove();
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationLayer)) {
            const editables = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationLayer).getEditableAnnotations();
            for (const editable of editables){
                const { id } = editable.data;
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).isDeletedAnnotationElement(id)) {
                    continue;
                }
                let editor = resetAnnotations.get(id);
                if (editor) {
                    editor.resetAnnotationElement(editable);
                    editor.show(false);
                    editable.show();
                    continue;
                }
                editor = changedAnnotations.get(id);
                if (editor) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).addChangedExistingAnnotation(editor);
                    if (editor.renderAnnotationElement(editable)) {
                        editor.show(false);
                    }
                }
                editable.show();
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cleanup, cleanup).call(this);
        if (this.isEmpty) {
            this.div.hidden = true;
        }
        const { classList } = this.div;
        for (const editorType of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditorLayer, AnnotationEditorLayer, _editorTypes1).values()){
            classList.remove("".concat(editorType._type, "Editing"));
        }
        this.disableTextSelection();
        this.toggleAnnotationLayerPointerEvents(true);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDisabling, false);
    }
    getEditableAnnotation(id) {
        var _class_private_field_get;
        return ((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationLayer)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.getEditableAnnotation(id)) || null;
    }
    setActiveEditor(editor) {
        const currentActive = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).getActive();
        if (currentActive === editor) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).setActiveEditor(editor);
    }
    enableTextSelection() {
        var _class_private_field_get;
        this.div.tabIndex = -1;
        if (((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayer)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.div) && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textSelectionAC)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textSelectionAC, new AbortController());
            const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).combinedSignal((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textSelectionAC));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayer).div.addEventListener("pointerdown", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayerPointerDown, textLayerPointerDown).bind(this), {
                signal
            });
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayer).div.classList.add("highlighting");
        }
    }
    disableTextSelection() {
        var _class_private_field_get;
        this.div.tabIndex = 0;
        if (((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayer)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.div) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textSelectionAC)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textSelectionAC).abort();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textSelectionAC, null);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayer).div.classList.remove("highlighting");
        }
    }
    enableClick() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _clickAC)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _clickAC, new AbortController());
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).combinedSignal((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _clickAC));
        this.div.addEventListener("pointerdown", this.pointerdown.bind(this), {
            signal
        });
        const pointerup = this.pointerup.bind(this);
        this.div.addEventListener("pointerup", pointerup, {
            signal
        });
        this.div.addEventListener("pointercancel", pointerup, {
            signal
        });
    }
    disableClick() {
        var _class_private_field_get;
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _clickAC)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.abort();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _clickAC, null);
    }
    attach(editor) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editors).set(editor.id, editor);
        const { annotationElementId } = editor;
        if (annotationElementId && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).isDeletedAnnotationElement(annotationElementId)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).removeDeletedAnnotationElement(editor);
        }
    }
    detach(editor) {
        var _class_private_field_get;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editors).delete(editor.id);
        (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _accessibilityManager1)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.removePointerInTextLayer(editor.contentDiv);
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDisabling) && editor.annotationElementId) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).addDeletedAnnotationElement(editor);
        }
    }
    remove(editor) {
        this.detach(editor);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).removeEditor(editor);
        editor.div.remove();
        editor.isAttachedToDOM = false;
    }
    changeParent(editor) {
        var _editor_parent;
        if (editor.parent === this) {
            return;
        }
        if (editor.parent && editor.annotationElementId) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).addDeletedAnnotationElement(editor.annotationElementId);
            AnnotationEditor.deleteAnnotationElement(editor);
            editor.annotationElementId = null;
        }
        this.attach(editor);
        (_editor_parent = editor.parent) === null || _editor_parent === void 0 ? void 0 : _editor_parent.detach(editor);
        editor.setParent(this);
        if (editor.div && editor.isAttachedToDOM) {
            editor.div.remove();
            this.div.append(editor.div);
        }
    }
    add(editor) {
        if (editor.parent === this && editor.isAttachedToDOM) {
            return;
        }
        this.changeParent(editor);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).addEditor(editor);
        this.attach(editor);
        if (!editor.isAttachedToDOM) {
            const div = editor.render();
            this.div.append(div);
            editor.isAttachedToDOM = true;
        }
        editor.fixAndSetPosition();
        editor.onceAdded(!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEnabling));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).addToAnnotationStorage(editor);
        editor._reportTelemetry(editor.telemetryInitialData);
    }
    moveEditorInDOM(editor) {
        var _class_private_field_get;
        if (!editor.isAttachedToDOM) {
            return;
        }
        const { activeElement } = document;
        if (editor.div.contains(activeElement) && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorFocusTimeoutId)) {
            editor._focusEventsAllowed = false;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorFocusTimeoutId, setTimeout(()=>{
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorFocusTimeoutId, null);
                if (!editor.div.contains(document.activeElement)) {
                    editor.div.addEventListener("focusin", ()=>{
                        editor._focusEventsAllowed = true;
                    }, {
                        once: true,
                        signal: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2)._signal
                    });
                    activeElement.focus();
                } else {
                    editor._focusEventsAllowed = true;
                }
            }, 0));
        }
        editor._structTreeParentId = (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _accessibilityManager1)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.moveElementInDOM(this.div, editor.div, editor.contentDiv, true);
    }
    addOrRebuild(editor) {
        if (editor.needsToBeRebuilt()) {
            var _editor;
            (_editor = editor).parent || (_editor.parent = this);
            editor.rebuild();
            editor.show();
        } else {
            this.add(editor);
        }
    }
    addUndoableEditor(editor) {
        const cmd = ()=>editor._uiManager.rebuild(editor);
        const undo = ()=>{
            editor.remove();
        };
        this.addCommands({
            cmd,
            undo,
            mustExec: false
        });
    }
    getNextId() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).getId();
    }
    combinedSignal(ac) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).combinedSignal(ac);
    }
    canCreateNewEmptyEditor() {
        var _class_private_field_get;
        return (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentEditorType)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.canCreateNewEmptyEditor();
    }
    async pasteEditor(options, params) {
        this.updateToolbar(options);
        await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).updateMode(options.mode);
        const { offsetX, offsetY } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getCenterPoint, getCenterPoint).call(this);
        const id = this.getNextId();
        const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createNewEditor, createNewEditor).call(this, {
            parent: this,
            id,
            x: offsetX,
            y: offsetY,
            uiManager: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2),
            isCentered: true,
            ...params
        });
        if (editor) {
            this.add(editor);
        }
    }
    async deserialize(data) {
        var _class_static_private_field_spec_get_get;
        var _data_annotationType;
        return await ((_class_static_private_field_spec_get_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditorLayer, AnnotationEditorLayer, _editorTypes1).get((_data_annotationType = data.annotationType) !== null && _data_annotationType !== void 0 ? _data_annotationType : data.annotationEditorType)) === null || _class_static_private_field_spec_get_get === void 0 ? void 0 : _class_static_private_field_spec_get_get.deserialize(data, this, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2))) || null;
    }
    createAndAddNewEditor(event, isCentered) {
        let data = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        const id = this.getNextId();
        const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createNewEditor, createNewEditor).call(this, {
            parent: this,
            id,
            x: event.offsetX,
            y: event.offsetY,
            uiManager: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2),
            isCentered,
            ...data
        });
        if (editor) {
            this.add(editor);
        }
        return editor;
    }
    addNewEditor() {
        let data = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        this.createAndAddNewEditor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getCenterPoint, getCenterPoint).call(this), true, data);
    }
    setSelected(editor) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).setSelected(editor);
    }
    toggleSelected(editor) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).toggleSelected(editor);
    }
    unselect(editor) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).unselect(editor);
    }
    pointerup(event) {
        var _class_private_field_get;
        const { isMac } = util_FeatureTest.platform;
        if (event.button !== 0 || event.ctrlKey && isMac) {
            return;
        }
        if (event.target !== this.div) {
            return;
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hadPointerDown)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hadPointerDown, false);
        if (((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentEditorType)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.isDrawer) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentEditorType).supportMultipleDrawings) {
            return;
        }
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allowClick)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allowClick, true);
            return;
        }
        const currentMode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).getMode();
        if (currentMode === AnnotationEditorType.STAMP || currentMode === AnnotationEditorType.SIGNATURE) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).unselectAll();
            return;
        }
        this.createAndAddNewEditor(event, false);
    }
    pointerdown(event) {
        var _class_private_field_get;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).getMode() === AnnotationEditorType.HIGHLIGHT) {
            this.enableTextSelection();
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hadPointerDown)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hadPointerDown, false);
            return;
        }
        const { isMac } = util_FeatureTest.platform;
        if (event.button !== 0 || event.ctrlKey && isMac) {
            return;
        }
        if (event.target !== this.div) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hadPointerDown, true);
        if ((_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentEditorType)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.isDrawer) {
            this.startDrawingSession(event);
            return;
        }
        const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).getActive();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allowClick, !editor || editor.isEmpty());
    }
    startDrawingSession(event) {
        this.div.focus({
            preventScroll: true
        });
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawingAC)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentEditorType).startDrawing(this, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2), false, event);
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).setCurrentDrawingSession(this);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawingAC, new AbortController());
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).combinedSignal((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawingAC));
        this.div.addEventListener("blur", (param)=>{
            let { relatedTarget } = param;
            if (relatedTarget && !this.div.contains(relatedTarget)) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusedElement, null);
                this.commitOrRemove();
            }
        }, {
            signal
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentEditorType).startDrawing(this, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2), false, event);
    }
    pause(on) {
        if (on) {
            const { activeElement } = document;
            if (this.div.contains(activeElement)) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusedElement, activeElement);
            }
            return;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusedElement)) {
            setTimeout(()=>{
                var _class_private_field_get;
                (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusedElement)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.focus();
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusedElement, null);
            }, 0);
        }
    }
    endDrawingSession() {
        let isAborted = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawingAC)) {
            return null;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).setCurrentDrawingSession(null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawingAC).abort();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawingAC, null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusedElement, null);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentEditorType).endDrawing(isAborted);
    }
    findNewParent(editor, x, y) {
        const layer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).findParent(x, y);
        if (layer === null || layer === this) {
            return false;
        }
        layer.changeParent(editor);
        return true;
    }
    commitOrRemove() {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawingAC)) {
            this.endDrawingSession();
            return true;
        }
        return false;
    }
    onScaleChanging() {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawingAC)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentEditorType).onScaleChangingWhenDrawing(this);
    }
    destroy() {
        var _class_private_field_get_getActive;
        this.commitOrRemove();
        if (((_class_private_field_get_getActive = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).getActive()) === null || _class_private_field_get_getActive === void 0 ? void 0 : _class_private_field_get_getActive.parent) === this) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).commitOrRemove();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).setActiveEditor(null);
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorFocusTimeoutId)) {
            clearTimeout((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorFocusTimeoutId));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorFocusTimeoutId, null);
        }
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editors).values()){
            var _class_private_field_get;
            (_class_private_field_get = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _accessibilityManager1)) === null || _class_private_field_get === void 0 ? void 0 : _class_private_field_get.removePointerInTextLayer(editor.contentDiv);
            editor.setParent(null);
            editor.isAttachedToDOM = false;
            editor.div.remove();
        }
        this.div = null;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editors).clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).removeLayer(this);
    }
    render(param) {
        let { viewport } = param;
        this.viewport = viewport;
        setLayerDimensions(this.div, viewport);
        for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).getEditors(this.pageIndex)){
            this.add(editor);
            editor.rebuild();
        }
        this.updateMode();
    }
    update(param) {
        let { viewport } = param;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).commitOrRemove();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cleanup, cleanup).call(this);
        const oldRotation = this.viewport.rotation;
        const rotation = viewport.rotation;
        this.viewport = viewport;
        setLayerDimensions(this.div, {
            rotation
        });
        if (oldRotation !== rotation) {
            for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editors).values()){
                editor.rotate(rotation);
            }
        }
    }
    get pageDimensions() {
        const { pageWidth, pageHeight } = this.viewport.rawDims;
        return [
            pageWidth,
            pageHeight
        ];
    }
    get scale() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).viewParameters.realScale;
    }
    constructor({ uiManager, pageIndex, div, structTreeLayer, accessibilityManager, annotationLayer, drawLayer, textLayer, viewport, l10n }){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayerPointerDown);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentEditorType, {
            get: get_currentEditorType,
            set: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createNewEditor);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _getCenterPoint);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _cleanup);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _accessibilityManager1, {
            writable: true,
            value: void 0
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _allowClick, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationLayer, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _clickAC, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editorFocusTimeoutId, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editors, {
            writable: true,
            value: new Map()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _hadPointerDown, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isDisabling, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _isEnabling, {
            writable: true,
            value: false
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _drawingAC, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _focusedElement, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayer, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textSelectionAC, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2, {
            writable: true,
            value: void 0
        });
        const editorTypes = [
            ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditorLayer, AnnotationEditorLayer, _editorTypes1).values()
        ];
        if (!AnnotationEditorLayer._initialized) {
            AnnotationEditorLayer._initialized = true;
            for (const editorType of editorTypes){
                editorType.initialize(l10n, uiManager);
            }
        }
        uiManager.registerEditorTypes(editorTypes);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2, uiManager);
        this.pageIndex = pageIndex;
        this.div = div;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _accessibilityManager1, accessibilityManager);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _annotationLayer, annotationLayer);
        this.viewport = viewport;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayer, textLayer);
        this.drawLayer = drawLayer;
        this._structTree = structTreeLayer;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).addLayer(this);
    }
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditorLayer, "_initialized", false);
var _editorTypes1 = {
    writable: true,
    value: new Map([
        FreeTextEditor,
        InkEditor,
        StampEditor,
        HighlightEditor,
        SignatureEditor
    ].map((type)=>[
            type._editorType,
            type
        ]))
};
function textLayerPointerDown(event) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).unselectAll();
    const { target } = event;
    if (target === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayer).div || (target.getAttribute("role") === "img" || target.classList.contains("endOfContent")) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayer).div.contains(target)) {
        const { isMac } = util_FeatureTest.platform;
        if (event.button !== 0 || event.ctrlKey && isMac) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).showAllEditors("highlight", true, true);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayer).div.classList.add("free");
        this.toggleDrawing();
        HighlightEditor.startHighlighting(this, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).direction === "ltr", {
            target: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayer).div,
            x: event.x,
            y: event.y
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayer).div.addEventListener("pointerup", ()=>{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _textLayer).div.classList.remove("free");
            this.toggleDrawing(true);
        }, {
            once: true,
            signal: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2)._signal
        });
        event.preventDefault();
    }
}
function get_currentEditorType() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_spec_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(AnnotationEditorLayer, AnnotationEditorLayer, _editorTypes1).get((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _uiManager2).getMode());
}
function createNewEditor(params) {
    const editorType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _currentEditorType);
    return editorType ? new editorType.prototype.constructor(params) : null;
}
function getCenterPoint() {
    const { x, y, width, height } = this.div.getBoundingClientRect();
    const tlX = Math.max(0, x);
    const tlY = Math.max(0, y);
    const brX = Math.min(window.innerWidth, x + width);
    const brY = Math.min(window.innerHeight, y + height);
    const centerX = (tlX + brX) / 2 - x;
    const centerY = (tlY + brY) / 2 - y;
    const [offsetX, offsetY] = this.viewport.rotation % 180 === 0 ? [
        centerX,
        centerY
    ] : [
        centerY,
        centerX
    ];
    return {
        offsetX,
        offsetY
    };
}
function cleanup() {
    for (const editor of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _editors).values()){
        if (editor.isEmpty()) {
            editor.remove();
        }
    }
}
; // ./src/display/draw_layer.js
var _parent1 = /*#__PURE__*/ new WeakMap(), _mapping = /*#__PURE__*/ new WeakMap(), _toUpdate = /*#__PURE__*/ new WeakMap(), _createSVG = /*#__PURE__*/ new WeakSet(), _createClipPath = /*#__PURE__*/ new WeakSet(), _updateProperties = /*#__PURE__*/ new WeakSet();
class DrawLayer {
    setParent(parent) {
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parent1)) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parent1, parent);
            return;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parent1) !== parent) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mapping).size > 0) {
                for (const root of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mapping).values()){
                    root.remove();
                    parent.append(root);
                }
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parent1, parent);
        }
    }
    static get _svgFactory() {
        return shadow(this, "_svgFactory", new DOMSVGFactory());
    }
    draw(properties) {
        let isPathUpdatable = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false, hasClip = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
        const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_update$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawLayer, DrawLayer, _id4).value++;
        const root = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createSVG, createSVG).call(this);
        const defs = DrawLayer._svgFactory.createElement("defs");
        root.append(defs);
        const path = DrawLayer._svgFactory.createElement("path");
        defs.append(path);
        const pathId = "path_p".concat(this.pageIndex, "_").concat(id);
        path.setAttribute("id", pathId);
        path.setAttribute("vector-effect", "non-scaling-stroke");
        if (isPathUpdatable) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toUpdate).set(id, path);
        }
        const clipPathId = hasClip ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createClipPath, createClipPath).call(this, defs, pathId) : null;
        const use = DrawLayer._svgFactory.createElement("use");
        root.append(use);
        use.setAttribute("href", "#".concat(pathId));
        this.updateProperties(root, properties);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mapping).set(id, root);
        return {
            id,
            clipPathId: "url(#".concat(clipPathId, ")")
        };
    }
    drawOutline(properties, mustRemoveSelfIntersections) {
        const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_field_update$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawLayer, DrawLayer, _id4).value++;
        const root = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createSVG, createSVG).call(this);
        const defs = DrawLayer._svgFactory.createElement("defs");
        root.append(defs);
        const path = DrawLayer._svgFactory.createElement("path");
        defs.append(path);
        const pathId = "path_p".concat(this.pageIndex, "_").concat(id);
        path.setAttribute("id", pathId);
        path.setAttribute("vector-effect", "non-scaling-stroke");
        let maskId;
        if (mustRemoveSelfIntersections) {
            const mask = DrawLayer._svgFactory.createElement("mask");
            defs.append(mask);
            maskId = "mask_p".concat(this.pageIndex, "_").concat(id);
            mask.setAttribute("id", maskId);
            mask.setAttribute("maskUnits", "objectBoundingBox");
            const rect = DrawLayer._svgFactory.createElement("rect");
            mask.append(rect);
            rect.setAttribute("width", "1");
            rect.setAttribute("height", "1");
            rect.setAttribute("fill", "white");
            const use = DrawLayer._svgFactory.createElement("use");
            mask.append(use);
            use.setAttribute("href", "#".concat(pathId));
            use.setAttribute("stroke", "none");
            use.setAttribute("fill", "black");
            use.setAttribute("fill-rule", "nonzero");
            use.classList.add("mask");
        }
        const use1 = DrawLayer._svgFactory.createElement("use");
        root.append(use1);
        use1.setAttribute("href", "#".concat(pathId));
        if (maskId) {
            use1.setAttribute("mask", "url(#".concat(maskId, ")"));
        }
        const use2 = use1.cloneNode();
        root.append(use2);
        use1.classList.add("mainOutline");
        use2.classList.add("secondaryOutline");
        this.updateProperties(root, properties);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mapping).set(id, root);
        return id;
    }
    finalizeDraw(id, properties) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toUpdate).delete(id);
        this.updateProperties(id, properties);
    }
    updateProperties(elementOrId, properties) {
        if (!properties) {
            return;
        }
        const { root, bbox, rootClass, path } = properties;
        const element = typeof elementOrId === "number" ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mapping).get(elementOrId) : elementOrId;
        if (!element) {
            return;
        }
        if (root) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateProperties, updateProperties).call(this, element, root);
        }
        if (bbox) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_static_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(DrawLayer, DrawLayer, setBox).call(DrawLayer, element, bbox);
        }
        if (rootClass) {
            const { classList } = element;
            for (const [className, value] of Object.entries(rootClass)){
                classList.toggle(className, value);
            }
        }
        if (path) {
            const defs = element.firstChild;
            const pathElement = defs.firstChild;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateProperties, updateProperties).call(this, pathElement, path);
        }
    }
    updateParent(id, layer) {
        if (layer === this) {
            return;
        }
        const root = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mapping).get(id);
        if (!root) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(layer, _parent1).append(root);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mapping).delete(id);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(layer, _mapping).set(id, root);
    }
    remove(id) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toUpdate).delete(id);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parent1) === null) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mapping).get(id).remove();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mapping).delete(id);
    }
    destroy() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_set$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parent1, null);
        for (const root of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mapping).values()){
            root.remove();
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mapping).clear();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toUpdate).clear();
    }
    constructor({ pageIndex }){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createSVG);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _createClipPath);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _updateProperties);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parent1, {
            writable: true,
            value: null
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _mapping, {
            writable: true,
            value: new Map()
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _toUpdate, {
            writable: true,
            value: new Map()
        });
        this.pageIndex = pageIndex;
    }
}
var _id4 = {
    writable: true,
    value: 0
};
function setBox(element, param) {
    let [x, y, width, height] = param;
    const { style } = element;
    style.top = "".concat(100 * y, "%");
    style.left = "".concat(100 * x, "%");
    style.width = "".concat(100 * width, "%");
    style.height = "".concat(100 * height, "%");
}
function createSVG() {
    const svg = DrawLayer._svgFactory.create(1, 1, true);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_field_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _parent1).append(svg);
    svg.setAttribute("aria-hidden", true);
    return svg;
}
function createClipPath(defs, pathId) {
    const clipPath = DrawLayer._svgFactory.createElement("clipPath");
    defs.append(clipPath);
    const clipPathId = "clip_".concat(pathId);
    clipPath.setAttribute("id", clipPathId);
    clipPath.setAttribute("clipPathUnits", "objectBoundingBox");
    const clipPathUse = DrawLayer._svgFactory.createElement("use");
    clipPath.append(clipPathUse);
    clipPathUse.setAttribute("href", "#".concat(pathId));
    clipPathUse.classList.add("clip");
    return clipPathId;
}
function updateProperties(element, properties) {
    for (const [key, value] of Object.entries(properties)){
        if (value === null) {
            element.removeAttribute(key);
        } else {
            element.setAttribute(key, value);
        }
    }
}
; // ./src/pdf.js
{
    globalThis._pdfjsTestingUtils = {
        HighlightOutliner: HighlightOutliner
    };
}globalThis.pdfjsLib = {
    AbortException: AbortException,
    AnnotationEditorLayer: AnnotationEditorLayer,
    AnnotationEditorParamsType: AnnotationEditorParamsType,
    AnnotationEditorType: AnnotationEditorType,
    AnnotationEditorUIManager: AnnotationEditorUIManager,
    AnnotationLayer: AnnotationLayer,
    AnnotationMode: AnnotationMode,
    AnnotationType: AnnotationType,
    build: build,
    ColorPicker: ColorPicker,
    createValidAbsoluteUrl: createValidAbsoluteUrl,
    DOMSVGFactory: DOMSVGFactory,
    DrawLayer: DrawLayer,
    FeatureTest: util_FeatureTest,
    fetchData: fetchData,
    getDocument: getDocument,
    getFilenameFromUrl: getFilenameFromUrl,
    getPdfFilenameFromUrl: getPdfFilenameFromUrl,
    getUuid: getUuid,
    getXfaPageViewport: getXfaPageViewport,
    GlobalWorkerOptions: GlobalWorkerOptions,
    ImageKind: util_ImageKind,
    InvalidPDFException: InvalidPDFException,
    isDataScheme: isDataScheme,
    isPdfFile: isPdfFile,
    isValidExplicitDest: isValidExplicitDest,
    MathClamp: MathClamp,
    noContextMenu: noContextMenu,
    normalizeUnicode: normalizeUnicode,
    OPS: OPS,
    OutputScale: OutputScale,
    PasswordResponses: PasswordResponses,
    PDFDataRangeTransport: PDFDataRangeTransport,
    PDFDateString: PDFDateString,
    PDFWorker: PDFWorker,
    PermissionFlag: PermissionFlag,
    PixelsPerInch: PixelsPerInch,
    RenderingCancelledException: RenderingCancelledException,
    ResponseException: ResponseException,
    setLayerDimensions: setLayerDimensions,
    shadow: shadow,
    SignatureExtractor: SignatureExtractor,
    stopEvent: stopEvent,
    SupportedImageMimeTypes: SupportedImageMimeTypes,
    TextLayer: TextLayer,
    TouchManager: TouchManager,
    updateUrlHash: updateUrlHash,
    Util: Util,
    VerbosityLevel: VerbosityLevel,
    version: version,
    XfaLayer: XfaLayer
};
;
 //# sourceMappingURL=pdf.mjs.map
}),
}]);

//# sourceMappingURL=017e3_pdfjs-dist_build_pdf_mjs_8faa9d3a._.js.map