{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/arvin/WebDev/pdf-schema-builder/app/src/lib/pdfStorage.ts"],"sourcesContent":["export async function savePdfToIndexedDB(projectId: string, data: ArrayBuffer): Promise<void> {\n  if (typeof window === \"undefined\" || !(\"indexedDB\" in window)) {\n    throw new Error(\"IndexedDB not available\");\n  }\n\n  const db = await new Promise<IDBDatabase>((resolve, reject) => {\n    const request = indexedDB.open(\"pdf-storage\", 1);\n    request.onupgradeneeded = () => {\n      const db = request.result;\n      if (!db.objectStoreNames.contains(\"pdfs\")) {\n        db.createObjectStore(\"pdfs\");\n      }\n    };\n    request.onsuccess = () => resolve(request.result);\n    request.onerror = () => reject(request.error);\n  });\n\n  await new Promise<void>((resolve, reject) => {\n    const tx = db.transaction(\"pdfs\", \"readwrite\");\n    const store = tx.objectStore(\"pdfs\");\n    // Store as Blob to avoid structured clone large overhead\n    const blob = new Blob([data], { type: \"application/pdf\" });\n    const req = store.put(blob, projectId);\n    req.onsuccess = () => resolve();\n    req.onerror = () => reject(req.error);\n  });\n}\n\nexport async function loadPdfFromIndexedDB(projectId: string): Promise<ArrayBuffer | null> {\n  if (typeof window === \"undefined\" || !(\"indexedDB\" in window)) {\n    return null;\n  }\n  const db = await new Promise<IDBDatabase>((resolve, reject) => {\n    const request = indexedDB.open(\"pdf-storage\", 1);\n    request.onupgradeneeded = () => {\n      const db = request.result;\n      if (!db.objectStoreNames.contains(\"pdfs\")) {\n        db.createObjectStore(\"pdfs\");\n      }\n    };\n    request.onsuccess = () => resolve(request.result);\n    request.onerror = () => reject(request.error);\n  });\n\n  const blob = await new Promise<Blob | null>((resolve, reject) => {\n    const tx = db.transaction(\"pdfs\", \"readonly\");\n    const store = tx.objectStore(\"pdfs\");\n    const req = store.get(projectId);\n    req.onsuccess = () => resolve((req.result as Blob) || null);\n    req.onerror = () => reject(req.error);\n  });\n\n  if (!blob) return null;\n  return await blob.arrayBuffer();\n}\n\nexport async function arrayBufferToBase64(ab: ArrayBuffer): Promise<string> {\n  // Use FileReader on a Blob to avoid large typed array conversions\n  const blob = new Blob([ab], { type: \"application/pdf\" });\n  const dataUrl: string = await new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result as string);\n    reader.onerror = () => reject(reader.error);\n    reader.readAsDataURL(blob);\n  });\n  // data:[mime];base64,XXXX\n  const commaIndex = dataUrl.indexOf(\",\");\n  return commaIndex >= 0 ? dataUrl.slice(commaIndex + 1) : dataUrl;\n}\n\nexport async function base64ToArrayBuffer(b64: string): Promise<ArrayBuffer> {\n  const res = await fetch(`data:application/pdf;base64,${b64}`);\n  return await res.arrayBuffer();\n}\n\nexport function savePdfToLocalStorage(projectId: string, ab: ArrayBuffer): Promise<void> {\n  return arrayBufferToBase64(ab).then((b64) => {\n    localStorage.setItem(`pdf:${projectId}`, b64);\n  });\n}\n\nexport function loadPdfFromLocalStorage(projectId: string): ArrayBuffer | null {\n  const b64 = localStorage.getItem(`pdf:${projectId}`);\n  if (!b64) return null;\n  // Convert synchronously using fetch data URL trick\n  // Note: returning Promise-like via async IIFE is not ideal for sync fn; keep it simple for now\n  // Caller can use the async load function below instead if desired\n  return null;\n}\n\nexport async function tryLoadPdf(projectId: string): Promise<ArrayBuffer | null> {\n  // Try IndexedDB first\n  try {\n    const fromIdb = await loadPdfFromIndexedDB(projectId);\n    if (fromIdb) return fromIdb;\n  } catch {}\n  // Fallback to localStorage\n  const b64 = (typeof window !== \"undefined\") ? localStorage.getItem(`pdf:${projectId}`) : null;\n  if (b64) {\n    return await base64ToArrayBuffer(b64);\n  }\n  return null;\n}\n\nexport async function persistPdf(projectId: string, data: ArrayBuffer): Promise<\"idb\" | \"localStorage\"> {\n  // Prefer IndexedDB\n  try {\n    await savePdfToIndexedDB(projectId, data);\n    return \"idb\";\n  } catch {\n    // Fallback to localStorage for â‰¤20MB (caller enforces size limit)\n    await savePdfToLocalStorage(projectId, data);\n    return \"localStorage\";\n  }\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/arvin/WebDev/pdf-schema-builder/app/src/stores/projects.ts"],"sourcesContent":["\"use client\";\nimport { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\n\nexport type Project = {\n  id: string;\n  name: string;\n  formType: string;\n};\n\ntype ProjectsState = {\n  projects: Project[];\n  addProject: (project: Omit<Project, \"id\"> & { id?: string }) => string; // returns id\n  renameProject: (id: string, name: string) => void;\n  deleteProject: (id: string) => void;\n  replaceAll: (projects: Project[]) => void;\n};\n\nfunction genId() {\n  // Simple unique-ish id for local usage\n  return Math.random().toString(36).slice(2, 10);\n}\n\nexport const useProjectsStore = create<ProjectsState>()(\n  persist(\n    (set) => ({\n      projects: [],\n      addProject: (project) => {\n        const id = project.id ?? genId();\n        set((state) => ({\n          projects: [\n            ...state.projects,\n            { id, name: project.name, formType: project.formType },\n          ],\n        }));\n        return id;\n      },\n      renameProject: (id, name) =>\n        set((state) => ({\n          projects: state.projects.map((p) => (p.id === id ? { ...p, name } : p)),\n        })),\n      deleteProject: (id) =>\n        set((state) => ({\n          projects: state.projects.filter((p) => p.id !== id),\n        })),\n      replaceAll: (projects) => set({ projects }),\n    }),\n    {\n      name: \"psb_projects\",\n      version: 1,\n      partialize: (state) => ({ projects: state.projects }),\n      // migrate just in case future shapes change\n      migrate: (persisted) => {\n        if (!persisted) return { projects: [] };\n        return persisted;\n      },\n    }\n  )\n);\n\n"],"names":[],"mappings":";;;AACA;AACA;AAFA;;;AAkBA,SAAS;IACP,uCAAuC;IACvC,OAAO,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,KAAK,CAAC,GAAG;AAC7C;AAEO,MAAM,mBAAmB,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,IACnC,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD,EACJ,CAAC,MAAQ,CAAC;QACR,UAAU,EAAE;QACZ,YAAY,CAAC;gBACA;YAAX,MAAM,KAAK,CAAA,cAAA,QAAQ,EAAE,cAAV,yBAAA,cAAc;YACzB,IAAI,CAAC,QAAU,CAAC;oBACd,UAAU;2BACL,MAAM,QAAQ;wBACjB;4BAAE;4BAAI,MAAM,QAAQ,IAAI;4BAAE,UAAU,QAAQ,QAAQ;wBAAC;qBACtD;gBACH,CAAC;YACD,OAAO;QACT;QACA,eAAe,CAAC,IAAI,OAClB,IAAI,CAAC,QAAU,CAAC;oBACd,UAAU,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAO,EAAE,EAAE,KAAK,KAAK;4BAAE,GAAG,CAAC;4BAAE;wBAAK,IAAI;gBACtE,CAAC;QACH,eAAe,CAAC,KACd,IAAI,CAAC,QAAU,CAAC;oBACd,UAAU,MAAM,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;gBAClD,CAAC;QACH,YAAY,CAAC,WAAa,IAAI;gBAAE;YAAS;IAC3C,CAAC,GACD;IACE,MAAM;IACN,SAAS;IACT,YAAY,CAAC,QAAU,CAAC;YAAE,UAAU,MAAM,QAAQ;QAAC,CAAC;IACpD,4CAA4C;IAC5C,SAAS,CAAC;QACR,IAAI,CAAC,WAAW,OAAO;YAAE,UAAU,EAAE;QAAC;QACtC,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file:///Users/arvin/WebDev/pdf-schema-builder/app/src/components/PdfViewer.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { PDFField } from \"@/types/schema\";\nimport dynamic from \"next/dynamic\";\n\n// Dynamically import react-pdf to avoid SSR issues\nconst Document = dynamic(\n  () => import(\"react-pdf\").then((mod) => mod.Document),\n  { ssr: false }\n);\n\nconst Page = dynamic(\n  () => import(\"react-pdf\").then((mod) => mod.Page),\n  { ssr: false }\n);\n\n// We'll set up the worker inside the component\n\ninterface PdfViewerProps {\n  pdfData: ArrayBuffer;\n  onFieldsExtracted: (fields: PDFField[]) => void;\n  selectedFields: Set<string>;\n  onFieldClick: (field: PDFField) => void;\n  groupedFields?: Set<string>;\n  linkingMode?: boolean;\n}\n\nexport default function PdfViewer({ pdfData, onFieldsExtracted, selectedFields, onFieldClick, groupedFields = new Set(), linkingMode = false }: PdfViewerProps) {\n  const [numPages, setNumPages] = useState<number>(0);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [scale, setScale] = useState<number>(1.0);\n  const [pdfFields, setPdfFields] = useState<PDFField[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  // Set up worker when component mounts\n  useEffect(() => {\n    const setupWorker = async () => {\n      if (typeof window !== \"undefined\") {\n        const pdfjsLib = await import(\"react-pdf\");\n        const { pdfjs } = pdfjsLib;\n        // Use local worker file to avoid CORS issues\n        pdfjs.GlobalWorkerOptions.workerSrc = '/pdf.worker.min.js';\n      }\n    };\n    setupWorker();\n  }, []);\n\n  const extractFormFields = useCallback(async () => {\n    if (typeof window === \"undefined\") return;\n    \n    try {\n      const { pdfjs } = await import(\"react-pdf\");\n      // Create a copy of the ArrayBuffer to avoid detachment issues\n      const pdfDataCopy = pdfData.slice(0);\n      const loadingTask = pdfjs.getDocument({ data: pdfDataCopy });\n      const pdf = await loadingTask.promise;\n      const allFields: PDFField[] = [];\n\n      for (let pageNum = 1; pageNum <= pdf.numPages; pageNum++) {\n        const page = await pdf.getPage(pageNum);\n        const annotations = await page.getAnnotations();\n\n        annotations.forEach((annotation) => {\n          if (annotation.fieldType) {\n            let type: PDFField[\"type\"] = \"text\";\n            \n            // Determine field type\n            if (annotation.fieldType === \"Tx\") type = \"text\";\n            else if (annotation.fieldType === \"Ch\") {\n              if (annotation.checkBox) type = \"checkbox\";\n              else type = \"radio\";\n            } else if (annotation.fieldType === \"Sig\") type = \"signature\";\n            else if (annotation.fieldType === \"Btn\") {\n              if (annotation.checkBox) type = \"checkbox\";\n              else if (annotation.radioButton) type = \"radio\";\n              else type = \"button\";\n            }\n\n            const field: PDFField = {\n              name: annotation.fieldName || `field_${pageNum}_${annotation.id}`,\n              type,\n              page: pageNum,\n              rect: annotation.rect as [number, number, number, number],\n              value: annotation.fieldValue,\n              options: annotation.options?.map((opt: { displayValue?: string; exportValue?: string }) => opt.displayValue || opt.exportValue)\n            };\n\n            allFields.push(field);\n          }\n        });\n      }\n\n      setPdfFields(allFields);\n      onFieldsExtracted(allFields);\n    } catch (error) {\n      console.error(\"Error extracting form fields:\", error);\n    }\n  }, [pdfData, onFieldsExtracted]);\n\n  useEffect(() => {\n    extractFormFields();\n    setIsLoading(false);\n  }, [extractFormFields]);\n\n  function onDocumentLoadSuccess({ numPages }: { numPages: number }) {\n    setNumPages(numPages);\n  }\n\n  const getFieldsForCurrentPage = () => {\n    return pdfFields.filter(field => field.page === currentPage);\n  };\n\n  return (\n    <div className=\"pdf-viewer-container\" style={{ position: \"relative\", height: \"100%\", overflow: \"auto\" }}>\n      <div style={{ padding: \"10px\", borderBottom: \"1px solid #ccc\", background: \"#f5f5f5\" }}>\n        <button onClick={() => setCurrentPage(Math.max(1, currentPage - 1))} disabled={currentPage <= 1}>\n          Previous\n        </button>\n        <span style={{ margin: \"0 10px\" }}>\n          Page {currentPage} of {numPages}\n        </span>\n        <button onClick={() => setCurrentPage(Math.min(numPages, currentPage + 1))} disabled={currentPage >= numPages}>\n          Next\n        </button>\n        <span style={{ marginLeft: \"20px\" }}>\n          Zoom:\n          <button onClick={() => setScale(scale - 0.1)} style={{ marginLeft: \"5px\" }}>-</button>\n          <span style={{ margin: \"0 10px\" }}>{Math.round(scale * 100)}%</span>\n          <button onClick={() => setScale(scale + 0.1)}>+</button>\n        </span>\n      </div>\n\n      <div style={{ position: \"relative\", padding: \"20px\" }}>\n        {isLoading ? (\n          <div style={{ textAlign: \"center\", padding: \"40px\" }}>Loading PDF...</div>\n        ) : pdfData ? (\n          <Document \n            file={pdfData.slice(0)} \n            onLoadSuccess={onDocumentLoadSuccess}\n          >\n            <Page\n              pageNumber={currentPage}\n              scale={scale}\n              renderAnnotationLayer={false}\n              renderTextLayer={false}\n            />\n          </Document>\n        ) : (\n          <div style={{ textAlign: \"center\", padding: \"40px\" }}>No PDF data available</div>\n        )}\n\n        {/* Field Overlays */}\n        {getFieldsForCurrentPage().map((field, index) => {\n          const [x1, y1, x2, y2] = field.rect;\n          const isSelected = selectedFields.has(field.name);\n          const isGrouped = groupedFields.has(field.name);\n          \n          // Determine colors based on state\n          let borderColor = \"#9ca3af\"; // Default gray\n          let bgColor = \"rgba(156, 163, 175, 0.1)\";\n          let hoverColor = \"rgba(156, 163, 175, 0.2)\";\n          \n          if (isSelected) {\n            borderColor = \"#2563eb\"; // Blue for selected\n            bgColor = \"rgba(37, 99, 235, 0.1)\";\n            hoverColor = \"rgba(37, 99, 235, 0.2)\";\n          } else if (isGrouped) {\n            if (linkingMode) {\n              borderColor = \"#10b981\"; // Green for grouped fields in linking mode\n              bgColor = \"rgba(16, 185, 129, 0.1)\";\n              hoverColor = \"rgba(16, 185, 129, 0.3)\";\n            } else {\n              borderColor = \"#8b5cf6\"; // Purple for grouped fields\n              bgColor = \"rgba(139, 92, 246, 0.1)\";\n              hoverColor = \"rgba(139, 92, 246, 0.2)\";\n            }\n          }\n          \n          return (\n            <div\n              key={`${field.name}_${index}_${field.page}`}\n              onClick={() => onFieldClick(field)}\n              style={{\n                position: \"absolute\",\n                left: `${x1 * scale + 20}px`,\n                bottom: `${y1 * scale + 20}px`,\n                width: `${(x2 - x1) * scale}px`,\n                height: `${(y2 - y1) * scale}px`,\n                border: `2px solid ${borderColor}`,\n                backgroundColor: bgColor,\n                cursor: linkingMode && isGrouped ? \"crosshair\" : \"pointer\",\n                transition: \"all 0.2s\",\n              }}\n              title={`${field.name} (${field.type})${isGrouped ? ' - GROUPED' : ''}`}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.backgroundColor = hoverColor;\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.backgroundColor = bgColor;\n              }}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 549, "column": 0}, "map": {"version":3,"sources":["file:///Users/arvin/WebDev/pdf-schema-builder/app/src/components/FieldGrouping.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { PDFField, FieldGroup } from \"@/types/schema\";\n\ninterface FieldGroupingProps {\n  selectedFields: PDFField[];\n  onCreateGroup: (group: FieldGroup) => void;\n  onCancel: () => void;\n}\n\nexport default function FieldGrouping({ selectedFields, onCreateGroup, onCancel }: FieldGroupingProps) {\n  const [groupType, setGroupType] = useState<FieldGroup[\"groupType\"] | \"\">(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n\n  // Determine available group types based on selected fields\n  const getAvailableGroupTypes = () => {\n    if (selectedFields.length === 0) return [];\n    \n    const fieldTypes = new Set(selectedFields.map(f => f.type));\n    \n    if (fieldTypes.size === 1) {\n      const type = selectedFields[0].type;\n      \n      if (type === \"text\") {\n        return [\n          { value: \"text-continuation\", label: \"Text Continuation (single value across multiple fields)\" },\n          { value: \"text-same-value\", label: \"Same Value Linked Fields (duplicate value in each field)\" }\n        ];\n      } else if (type === \"checkbox\") {\n        return [{ value: \"checkbox\", label: \"Checkbox Group\" }];\n      } else if (type === \"radio\") {\n        return [{ value: \"radio\", label: \"Radio Button Group\" }];\n      }\n    }\n    \n    return [];\n  };\n\n  const availableTypes = getAvailableGroupTypes();\n\n  const handleCreate = () => {\n    if (!groupType || !displayName) {\n      alert(\"Please select a group type and enter a display name\");\n      return;\n    }\n\n    onCreateGroup({\n      fields: selectedFields,\n      groupType: groupType as FieldGroup[\"groupType\"],\n      displayName\n    });\n  };\n\n  return (\n    <div style={{\n      position: \"fixed\",\n      right: \"20px\",\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      width: \"400px\",\n      background: \"white\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"8px\",\n      padding: \"20px\",\n      boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\n      zIndex: 1000\n    }}>\n      <h3 style={{ marginTop: 0 }}>Create Field Group</h3>\n      \n      <div style={{ marginBottom: \"15px\" }}>\n        <label style={{ display: \"block\", marginBottom: \"5px\", fontWeight: \"bold\" }}>\n          Selected Fields ({selectedFields.length}):\n        </label>\n        <div style={{ \n          maxHeight: \"150px\", \n          overflow: \"auto\", \n          border: \"1px solid #e5e7eb\", \n          borderRadius: \"4px\",\n          padding: \"8px\"\n        }}>\n          {selectedFields.map(field => (\n            <div key={field.name} style={{ \n              padding: \"4px\", \n              background: \"#f3f4f6\", \n              marginBottom: \"4px\",\n              borderRadius: \"2px\",\n              fontSize: \"14px\"\n            }}>\n              {field.name} ({field.type})\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {availableTypes.length > 0 ? (\n        <>\n          <div style={{ marginBottom: \"15px\" }}>\n            <label style={{ display: \"block\", marginBottom: \"5px\", fontWeight: \"bold\" }}>\n              Group Type:\n            </label>\n            <select \n              value={groupType} \n              onChange={(e) => setGroupType(e.target.value as FieldGroup[\"groupType\"])}\n              style={{ \n                width: \"100%\", \n                padding: \"8px\",\n                border: \"1px solid #d1d5db\",\n                borderRadius: \"4px\"\n              }}\n            >\n              <option value=\"\">Select a type...</option>\n              {availableTypes.map(type => (\n                <option key={type.value} value={type.value}>\n                  {type.label}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div style={{ marginBottom: \"20px\" }}>\n            <label style={{ display: \"block\", marginBottom: \"5px\", fontWeight: \"bold\" }}>\n              Display Name:\n            </label>\n            <input\n              type=\"text\"\n              value={displayName}\n              onChange={(e) => setDisplayName(e.target.value)}\n              placeholder=\"Enter display name for this group\"\n              style={{ \n                width: \"100%\", \n                padding: \"8px\",\n                border: \"1px solid #d1d5db\",\n                borderRadius: \"4px\"\n              }}\n            />\n          </div>\n\n          <div style={{ display: \"flex\", gap: \"10px\", justifyContent: \"flex-end\" }}>\n            <button \n              onClick={onCancel}\n              style={{ \n                padding: \"8px 16px\",\n                border: \"1px solid #d1d5db\",\n                borderRadius: \"4px\",\n                background: \"white\",\n                cursor: \"pointer\"\n              }}\n            >\n              Cancel\n            </button>\n            <button \n              onClick={handleCreate}\n              style={{ \n                padding: \"8px 16px\",\n                border: \"none\",\n                borderRadius: \"4px\",\n                background: \"#2563eb\",\n                color: \"white\",\n                cursor: \"pointer\"\n              }}\n            >\n              Create Group\n            </button>\n          </div>\n        </>\n      ) : (\n        <div style={{ color: \"#6b7280\", textAlign: \"center\", padding: \"20px\" }}>\n          Please select fields of the same type to create a group.\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 867, "column": 0}, "map": {"version":3,"sources":["file:///Users/arvin/WebDev/pdf-schema-builder/app/src/components/SchemaItemEditor.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { SchemaItem } from \"@/types/schema\";\n\ninterface SchemaItemEditorProps {\n  item: SchemaItem;\n  onSave: (item: SchemaItem) => void;\n  onCancel: () => void;\n  onStartLinking?: (checkboxOptionPath: string) => void;\n  linkingMode?: { checkboxOptionPath: string } | null;\n}\n\nexport default function SchemaItemEditor({ item, onSave, onCancel, onStartLinking, linkingMode }: SchemaItemEditorProps) {\n  const [localItem, setLocalItem] = useState<SchemaItem>(JSON.parse(JSON.stringify(item)));\n\n  // Helper to update nested checkbox options\n  const updateCheckboxOption = (index: number, field: string, value: unknown) => {\n    const newItem = { ...localItem };\n    if (!newItem.display_attributes.checkbox_options) {\n      newItem.display_attributes.checkbox_options = { options: [] };\n    }\n    if (!newItem.display_attributes.checkbox_options.options[index]) {\n      newItem.display_attributes.checkbox_options.options[index] = {\n        display_name: \"\",\n        databaseStored: \"\",\n        linkedFields: []\n      };\n    }\n    (newItem.display_attributes.checkbox_options.options[index] as Record<string, unknown>)[field] = value;\n    setLocalItem(newItem);\n  };\n\n  // Helper to add a new checkbox option\n  const addCheckboxOption = () => {\n    const newItem = { ...localItem };\n    if (!newItem.display_attributes.checkbox_options) {\n      newItem.display_attributes.checkbox_options = { options: [] };\n    }\n    newItem.display_attributes.checkbox_options.options.push({\n      display_name: \"\",\n      databaseStored: \"\",\n      linkedFields: []\n    });\n    setLocalItem(newItem);\n  };\n\n  // Helper to remove a checkbox option\n  const removeCheckboxOption = (index: number) => {\n    const newItem = { ...localItem };\n    if (newItem.display_attributes.checkbox_options?.options) {\n      newItem.display_attributes.checkbox_options.options.splice(index, 1);\n    }\n    setLocalItem(newItem);\n  };\n\n  // Helper to update PDF attributes\n  const updatePdfAttribute = (index: number, field: string, value: unknown) => {\n    const newItem = { ...localItem };\n    if (!newItem.pdf_attributes) {\n      newItem.pdf_attributes = [];\n    }\n    if (!newItem.pdf_attributes[index]) {\n      newItem.pdf_attributes[index] = { formType: \"\", formfield: \"\" };\n    }\n    (newItem.pdf_attributes[index] as Record<string, unknown>)[field] = value;\n    setLocalItem(newItem);\n  };\n\n  // Helper to add linked text field\n  const addLinkedTextField = (pdfIndex: number) => {\n    const newItem = { ...localItem };\n    if (!newItem.pdf_attributes?.[pdfIndex]) return;\n    if (!newItem.pdf_attributes[pdfIndex].linked_form_fields_text) {\n      newItem.pdf_attributes[pdfIndex].linked_form_fields_text = [];\n    }\n    newItem.pdf_attributes[pdfIndex].linked_form_fields_text!.push(\"\");\n    setLocalItem(newItem);\n  };\n\n  // Helper to update linked text field\n  const updateLinkedTextField = (pdfIndex: number, fieldIndex: number, value: string) => {\n    const newItem = { ...localItem };\n    if (newItem.pdf_attributes?.[pdfIndex]?.linked_form_fields_text) {\n      newItem.pdf_attributes[pdfIndex].linked_form_fields_text![fieldIndex] = value;\n      setLocalItem(newItem);\n    }\n  };\n\n  // Helper to remove linked text field\n  const removeLinkedTextField = (pdfIndex: number, fieldIndex: number) => {\n    const newItem = { ...localItem };\n    if (newItem.pdf_attributes?.[pdfIndex]?.linked_form_fields_text) {\n      newItem.pdf_attributes[pdfIndex].linked_form_fields_text!.splice(fieldIndex, 1);\n      setLocalItem(newItem);\n    }\n  };\n\n  return (\n    <div style={{ \n      border: \"1px solid #e5e7eb\", \n      borderRadius: \"8px\", \n      padding: \"16px\",\n      marginBottom: \"16px\",\n      background: \"#f9fafb\",\n      maxHeight: \"70vh\",\n      overflowY: \"auto\"\n    }}>\n      {/* Basic Fields */}\n      <h4 style={{ marginBottom: \"12px\", fontWeight: \"bold\" }}>Basic Properties</h4>\n      \n      <div style={{ marginBottom: \"12px\" }}>\n        <label style={{ display: \"block\", fontWeight: \"bold\", marginBottom: \"4px\" }}>\n          Unique ID:\n        </label>\n        <input\n          type=\"text\"\n          value={localItem.unique_id || \"\"}\n          onChange={(e) => setLocalItem({ ...localItem, unique_id: e.target.value })}\n          style={{ \n            width: \"100%\", \n            padding: \"8px\",\n            border: \"1px solid #d1d5db\",\n            borderRadius: \"4px\"\n          }}\n        />\n      </div>\n\n      <div style={{ marginBottom: \"12px\" }}>\n        <label style={{ display: \"block\", fontWeight: \"bold\", marginBottom: \"4px\" }}>\n          Display Name (Required):\n        </label>\n        <input\n          type=\"text\"\n          value={localItem.display_attributes.display_name || \"\"}\n          onChange={(e) => setLocalItem({\n            ...localItem,\n            display_attributes: {\n              ...localItem.display_attributes,\n              display_name: e.target.value\n            }\n          })}\n          style={{ \n            width: \"100%\", \n            padding: \"8px\",\n            border: \"1px solid #d1d5db\",\n            borderRadius: \"4px\"\n          }}\n        />\n      </div>\n\n      <div style={{ marginBottom: \"12px\" }}>\n        <label style={{ display: \"block\", fontWeight: \"bold\", marginBottom: \"4px\" }}>\n          Order (Required):\n        </label>\n        <input\n          type=\"number\"\n          value={localItem.display_attributes.order}\n          onChange={(e) => setLocalItem({\n            ...localItem,\n            display_attributes: {\n              ...localItem.display_attributes,\n              order: parseInt(e.target.value) || 0\n            }\n          })}\n          style={{ \n            width: \"100px\", \n            padding: \"8px\",\n            border: \"1px solid #d1d5db\",\n            borderRadius: \"4px\"\n          }}\n        />\n      </div>\n\n      <div style={{ marginBottom: \"12px\" }}>\n        <label style={{ display: \"block\", fontWeight: \"bold\", marginBottom: \"4px\" }}>\n          Input Type:\n        </label>\n        <select\n          value={localItem.display_attributes.input_type}\n          onChange={(e) => setLocalItem({\n            ...localItem,\n            display_attributes: {\n              ...localItem.display_attributes,\n              input_type: e.target.value as SchemaItem[\"display_attributes\"][\"input_type\"]\n            }\n          })}\n          style={{ \n            width: \"200px\", \n            padding: \"8px\",\n            border: \"1px solid #d1d5db\",\n            borderRadius: \"4px\"\n          }}\n        >\n          <option value=\"text\">Text</option>\n          <option value=\"text-area\">Text Area</option>\n          <option value=\"radio\">Radio</option>\n          <option value=\"checkbox\">Checkbox</option>\n          <option value=\"signature\">Signature</option>\n          <option value=\"fileUpload\">File Upload</option>\n          <option value=\"info\">Info</option>\n        </select>\n      </div>\n\n      <div style={{ marginBottom: \"12px\" }}>\n        <label style={{ display: \"block\", fontWeight: \"bold\", marginBottom: \"4px\" }}>\n          Value Type:\n        </label>\n        <select\n          value={localItem.display_attributes.value.type}\n          onChange={(e) => setLocalItem({\n            ...localItem,\n            display_attributes: {\n              ...localItem.display_attributes,\n              value: {\n                ...localItem.display_attributes.value,\n                type: e.target.value as \"manual\" | \"resolved\" | \"reserved\"\n              }\n            }\n          })}\n          style={{ \n            width: \"200px\", \n            padding: \"8px\",\n            border: \"1px solid #d1d5db\",\n            borderRadius: \"4px\"\n          }}\n        >\n          <option value=\"manual\">Manual</option>\n          <option value=\"resolved\">Resolved (from database)</option>\n          <option value=\"reserved\">Reserved (computed)</option>\n        </select>\n      </div>\n\n      {/* Value details for resolved type */}\n      {localItem.display_attributes.value.type === \"resolved\" && (\n        <div style={{ marginBottom: \"12px\", paddingLeft: \"20px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\", marginBottom: \"4px\" }}>\n            Database Configuration (Supabase):\n          </label>\n          <textarea\n            value={JSON.stringify(localItem.display_attributes.value.supabase || [], null, 2)}\n            onChange={(e) => {\n              try {\n                const parsed = JSON.parse(e.target.value);\n                setLocalItem({\n                  ...localItem,\n                  display_attributes: {\n                    ...localItem.display_attributes,\n                    value: {\n                      ...localItem.display_attributes.value,\n                      supabase: parsed\n                    }\n                  }\n                });\n              } catch {\n                // Invalid JSON, don't update\n              }\n            }}\n            placeholder='[{\"table\": \"users\", \"column\": \"name\", \"eqBy\": []}]'\n            style={{ \n              width: \"100%\", \n              minHeight: \"80px\",\n              padding: \"8px\",\n              border: \"1px solid #d1d5db\",\n              borderRadius: \"4px\",\n              fontFamily: \"monospace\",\n              fontSize: \"12px\"\n            }}\n          />\n        </div>\n      )}\n      \n      {/* Value details for reserved type */}\n      {localItem.display_attributes.value.type === \"reserved\" && (\n        <div style={{ marginBottom: \"12px\", paddingLeft: \"20px\" }}>\n          <label style={{ display: \"block\", fontWeight: \"bold\", marginBottom: \"4px\" }}>\n            Reserved Field:\n          </label>\n          <select\n            value={localItem.display_attributes.value.reserved || \"\"}\n            onChange={(e) => setLocalItem({\n              ...localItem,\n              display_attributes: {\n                ...localItem.display_attributes,\n                value: {\n                  ...localItem.display_attributes.value,\n                  reserved: e.target.value as \"landlord_name_csv\" | \"tenant_name_csv\" | \"realtor_name_spaced\" | \"property_street_address\" | \"buyer/tenant_name_csv\" | \"buyer/tenant_phone_number\" | \"landlord_phone_number\"\n                }\n              }\n            })}\n            style={{ \n              width: \"100%\", \n              padding: \"8px\",\n              border: \"1px solid #d1d5db\",\n              borderRadius: \"4px\"\n            }}\n          >\n            <option value=\"\">Select a reserved field</option>\n            <option value=\"landlord_name_csv\">Landlord Name CSV</option>\n            <option value=\"tenant_name_csv\">Tenant Name CSV</option>\n            <option value=\"realtor_name_spaced\">Realtor Name Spaced</option>\n            <option value=\"property_street_address\">Property Street Address</option>\n            <option value=\"buyer/tenant_name_csv\">Buyer/Tenant Name CSV</option>\n            <option value=\"buyer/tenant_phone_number\">Buyer/Tenant Phone Number</option>\n            <option value=\"landlord_phone_number\">Landlord Phone Number</option>\n          </select>\n        </div>\n      )}\n\n      {/* Checkbox Options */}\n      {localItem.display_attributes.input_type === \"checkbox\" && (\n        <details style={{ marginBottom: \"12px\" }} open>\n          <summary style={{ cursor: \"pointer\", fontWeight: \"bold\" }}>\n            Checkbox Options\n          </summary>\n          <div style={{ marginTop: \"8px\", paddingLeft: \"16px\" }}>\n            {localItem.display_attributes.checkbox_options?.options.map((option, index) => (\n              <div key={index} style={{ \n                border: \"1px solid #d1d5db\", \n                borderRadius: \"4px\", \n                padding: \"8px\", \n                marginBottom: \"8px\" \n              }}>\n                <div style={{ marginBottom: \"4px\" }}>\n                  <input\n                    type=\"text\"\n                    value={option.display_name}\n                    onChange={(e) => updateCheckboxOption(index, \"display_name\", e.target.value)}\n                    placeholder=\"Display Name\"\n                    style={{ \n                      width: \"45%\", \n                      marginRight: \"10px\",\n                      padding: \"4px\",\n                      border: \"1px solid #d1d5db\",\n                      borderRadius: \"4px\"\n                    }}\n                  />\n                  <input\n                    type=\"text\"\n                    value={option.databaseStored}\n                    onChange={(e) => updateCheckboxOption(index, \"databaseStored\", e.target.value)}\n                    placeholder=\"Database Value\"\n                    style={{ \n                      width: \"45%\", \n                      padding: \"4px\",\n                      border: \"1px solid #d1d5db\",\n                      borderRadius: \"4px\"\n                    }}\n                  />\n                  <button\n                    onClick={() => removeCheckboxOption(index)}\n                    style={{ \n                      marginLeft: \"8px\",\n                      padding: \"4px 8px\",\n                      background: \"#ef4444\",\n                      color: \"white\",\n                      border: \"none\",\n                      borderRadius: \"4px\",\n                      cursor: \"pointer\"\n                    }}\n                  >\n                    Remove\n                  </button>\n                </div>\n                \n                {/* Linked Fields Management */}\n                <div style={{ marginTop: \"8px\" }}>\n                  <label style={{ fontSize: \"14px\", fontWeight: \"bold\" }}>Linked Fields:</label>\n                  {option.linkedFields && option.linkedFields.length > 0 ? (\n                    <div style={{ marginTop: \"4px\" }}>\n                      {option.linkedFields.map((linkedId, linkIndex) => (\n                        <div key={linkIndex} style={{ \n                          display: \"inline-block\", \n                          marginRight: \"8px\",\n                          marginTop: \"4px\",\n                          padding: \"2px 8px\",\n                          background: \"#e5e7eb\",\n                          borderRadius: \"4px\",\n                          fontSize: \"12px\"\n                        }}>\n                          {linkedId}\n                          <button\n                            onClick={() => {\n                              const newItem = { ...localItem };\n                              if (newItem.display_attributes.checkbox_options?.options[index]?.linkedFields) {\n                                newItem.display_attributes.checkbox_options.options[index].linkedFields = \n                                  newItem.display_attributes.checkbox_options.options[index].linkedFields!.filter(\n                                    (id) => id !== linkedId\n                                  );\n                                setLocalItem(newItem);\n                              }\n                            }}\n                            style={{ \n                              marginLeft: \"4px\",\n                              background: \"transparent\",\n                              border: \"none\",\n                              color: \"#ef4444\",\n                              cursor: \"pointer\",\n                              fontWeight: \"bold\"\n                            }}\n                          >\n                            Ã—\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div style={{ fontSize: \"12px\", color: \"#666\", marginTop: \"4px\" }}>\n                      No linked fields\n                    </div>\n                  )}\n                  \n                  {onStartLinking && (\n                    <button\n                      onClick={() => {\n                        onSave(localItem); // Save current state first\n                        onStartLinking(`${localItem.unique_id}.${index}`);\n                      }}\n                      disabled={linkingMode?.checkboxOptionPath === `${localItem.unique_id}.${index}`}\n                      style={{ \n                        marginTop: \"8px\",\n                        padding: \"4px 8px\",\n                        background: linkingMode?.checkboxOptionPath === `${localItem.unique_id}.${index}` \n                          ? \"#fbbf24\" \n                          : \"#3b82f6\",\n                        color: \"white\",\n                        border: \"none\",\n                        borderRadius: \"4px\",\n                        cursor: linkingMode?.checkboxOptionPath === `${localItem.unique_id}.${index}` \n                          ? \"not-allowed\" \n                          : \"pointer\",\n                        fontSize: \"12px\"\n                      }}\n                    >\n                      {linkingMode?.checkboxOptionPath === `${localItem.unique_id}.${index}` \n                        ? \"ðŸ”— Linking Active - Click a field in PDF\" \n                        : \"Add Linked Field\"}\n                    </button>\n                  )}\n                </div>\n              </div>\n            ))}\n            <button\n              onClick={addCheckboxOption}\n              style={{ \n                padding: \"4px 8px\",\n                background: \"#10b981\",\n                color: \"white\",\n                border: \"none\",\n                borderRadius: \"4px\",\n                cursor: \"pointer\"\n              }}\n            >\n              Add Option\n            </button>\n          </div>\n        </details>\n      )}\n\n      {/* Radio Options */}\n      {localItem.display_attributes.input_type === \"radio\" && (\n        <details style={{ marginBottom: \"12px\" }} open>\n          <summary style={{ cursor: \"pointer\", fontWeight: \"bold\" }}>\n            Radio Options\n          </summary>\n          <div style={{ marginTop: \"8px\", paddingLeft: \"16px\" }}>\n            <textarea\n              value={localItem.display_attributes.display_radio_options?.join(\"\\n\") || \"\"}\n              onChange={(e) => setLocalItem({\n                ...localItem,\n                display_attributes: {\n                  ...localItem.display_attributes,\n                  display_radio_options: e.target.value.split(\"\\n\").filter(s => s.trim())\n                }\n              })}\n              placeholder=\"Enter radio options (one per line)\"\n              style={{ \n                width: \"100%\", \n                minHeight: \"80px\",\n                padding: \"8px\",\n                border: \"1px solid #d1d5db\",\n                borderRadius: \"4px\"\n              }}\n            />\n          </div>\n        </details>\n      )}\n\n      {/* PDF Attributes */}\n      <details style={{ marginBottom: \"12px\" }} open>\n        <summary style={{ cursor: \"pointer\", fontWeight: \"bold\" }}>\n          PDF Attributes\n        </summary>\n        <div style={{ marginTop: \"8px\", paddingLeft: \"16px\" }}>\n          {localItem.pdf_attributes?.map((pdfAttr, pdfIndex) => (\n            <div key={pdfIndex} style={{ \n              border: \"1px solid #d1d5db\", \n              borderRadius: \"4px\", \n              padding: \"8px\", \n              marginBottom: \"8px\" \n            }}>\n              <div style={{ marginBottom: \"8px\" }}>\n                <label style={{ fontWeight: \"bold\" }}>Form Type:</label>\n                <input\n                  type=\"text\"\n                  value={pdfAttr.formType || \"\"}\n                  onChange={(e) => updatePdfAttribute(pdfIndex, \"formType\", e.target.value)}\n                  style={{ \n                    marginLeft: \"8px\",\n                    padding: \"4px\",\n                    border: \"1px solid #d1d5db\",\n                    borderRadius: \"4px\"\n                  }}\n                />\n              </div>\n              \n              <div style={{ marginBottom: \"8px\" }}>\n                <label style={{ fontWeight: \"bold\" }}>Form Field:</label>\n                {Array.isArray(pdfAttr.formfield) ? (\n                  <textarea\n                    value={pdfAttr.formfield.join(\"\\n\")}\n                    onChange={(e) => updatePdfAttribute(pdfIndex, \"formfield\", e.target.value.split(\"\\n\").filter(s => s.trim()))}\n                    placeholder=\"Enter form fields (one per line)\"\n                    style={{ \n                      width: \"100%\",\n                      minHeight: \"60px\",\n                      marginTop: \"4px\",\n                      padding: \"4px\",\n                      border: \"1px solid #d1d5db\",\n                      borderRadius: \"4px\"\n                    }}\n                  />\n                ) : (\n                  <input\n                    type=\"text\"\n                    value={pdfAttr.formfield || \"\"}\n                    onChange={(e) => updatePdfAttribute(pdfIndex, \"formfield\", e.target.value)}\n                    style={{ \n                      marginLeft: \"8px\",\n                      padding: \"4px\",\n                      border: \"1px solid #d1d5db\",\n                      borderRadius: \"4px\"\n                    }}\n                  />\n                )}\n              </div>\n\n              {/* Linked Text Fields */}\n              {pdfAttr.linked_form_fields_text && (\n                <div style={{ marginBottom: \"8px\" }}>\n                  <label style={{ fontWeight: \"bold\" }}>Linked Text Fields:</label>\n                  {pdfAttr.linked_form_fields_text.map((field, fieldIndex) => (\n                    <div key={fieldIndex} style={{ marginTop: \"4px\" }}>\n                      <input\n                        type=\"text\"\n                        value={field}\n                        onChange={(e) => updateLinkedTextField(pdfIndex, fieldIndex, e.target.value)}\n                        style={{ \n                          width: \"70%\",\n                          padding: \"4px\",\n                          border: \"1px solid #d1d5db\",\n                          borderRadius: \"4px\"\n                        }}\n                      />\n                      <button\n                        onClick={() => removeLinkedTextField(pdfIndex, fieldIndex)}\n                        style={{ \n                          marginLeft: \"8px\",\n                          padding: \"4px 8px\",\n                          background: \"#ef4444\",\n                          color: \"white\",\n                          border: \"none\",\n                          borderRadius: \"4px\",\n                          cursor: \"pointer\"\n                        }}\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  ))}\n                  <button\n                    onClick={() => addLinkedTextField(pdfIndex)}\n                    style={{ \n                      marginTop: \"4px\",\n                      padding: \"4px 8px\",\n                      background: \"#10b981\",\n                      color: \"white\",\n                      border: \"none\",\n                      borderRadius: \"4px\",\n                      cursor: \"pointer\"\n                    }}\n                  >\n                    Add Linked Field\n                  </button>\n                </div>\n              )}\n\n              {/* Linked Checkbox Fields */}\n              {pdfAttr.linked_form_fields_checkbox && (\n                <div style={{ marginBottom: \"8px\" }}>\n                  <label style={{ fontWeight: \"bold\" }}>Linked Checkbox Fields:</label>\n                  <div style={{ fontSize: \"12px\", color: \"#666\", marginTop: \"4px\" }}>\n                    (Edit these in the checkbox options above)\n                  </div>\n                </div>\n              )}\n\n              {/* Linked Radio Fields */}\n              {pdfAttr.linked_form_fields_radio && (\n                <div style={{ marginBottom: \"8px\" }}>\n                  <label style={{ fontWeight: \"bold\" }}>Linked Radio Fields:</label>\n                  <div style={{ fontSize: \"12px\", color: \"#666\", marginTop: \"4px\" }}>\n                    (Edit these in the radio options above)\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n          \n          {(!localItem.pdf_attributes || localItem.pdf_attributes.length === 0) && (\n            <button\n              onClick={() => {\n                const newItem = { ...localItem };\n                if (!newItem.pdf_attributes) newItem.pdf_attributes = [];\n                newItem.pdf_attributes.push({ formType: \"\", formfield: \"\" });\n                setLocalItem(newItem);\n              }}\n              style={{ \n                padding: \"4px 8px\",\n                background: \"#10b981\",\n                color: \"white\",\n                border: \"none\",\n                borderRadius: \"4px\",\n                cursor: \"pointer\"\n              }}\n            >\n              Add PDF Attribute\n            </button>\n          )}\n        </div>\n      </details>\n\n      {/* Additional Properties */}\n      <details style={{ marginBottom: \"12px\" }}>\n        <summary style={{ cursor: \"pointer\", fontWeight: \"bold\" }}>\n          Additional Properties\n        </summary>\n        <div style={{ marginTop: \"8px\", paddingLeft: \"16px\" }}>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={localItem.display_attributes.isRequired || false}\n              onChange={(e) => setLocalItem({\n                ...localItem,\n                display_attributes: {\n                  ...localItem.display_attributes,\n                  isRequired: e.target.checked\n                }\n              })}\n            /> Required\n          </label>\n          <br />\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={localItem.display_attributes.isHidden || false}\n              onChange={(e) => setLocalItem({\n                ...localItem,\n                display_attributes: {\n                  ...localItem.display_attributes,\n                  isHidden: e.target.checked\n                }\n              })}\n            /> Hidden\n          </label>\n          <br />\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={localItem.display_attributes.isCached || false}\n              onChange={(e) => setLocalItem({\n                ...localItem,\n                display_attributes: {\n                  ...localItem.display_attributes,\n                  isCached: e.target.checked\n                }\n              })}\n            /> Cached\n          </label>\n        </div>\n      </details>\n\n      {/* Raw JSON Editor */}\n      <details style={{ marginBottom: \"12px\" }}>\n        <summary style={{ cursor: \"pointer\", fontWeight: \"bold\" }}>\n          Raw JSON Editor\n        </summary>\n        <div style={{ marginTop: \"8px\" }}>\n          <textarea\n            value={JSON.stringify(localItem, null, 2)}\n            onChange={(e) => {\n              try {\n                const parsed = JSON.parse(e.target.value);\n                setLocalItem(parsed);\n              } catch {\n                // Invalid JSON, don't update\n              }\n            }}\n            style={{ \n              width: \"100%\", \n              minHeight: \"200px\",\n              padding: \"8px\",\n              border: \"1px solid #d1d5db\",\n              borderRadius: \"4px\",\n              fontFamily: \"monospace\",\n              fontSize: \"12px\"\n            }}\n          />\n          <div style={{ fontSize: \"12px\", color: \"#666\", marginTop: \"4px\" }}>\n            Warning: Invalid JSON will be ignored\n          </div>\n        </div>\n      </details>\n\n      {/* Action Buttons */}\n      <div style={{ display: \"flex\", gap: \"8px\", justifyContent: \"flex-end\", marginTop: \"16px\" }}>\n        <button\n          onClick={onCancel}\n          style={{ \n            padding: \"6px 12px\",\n            border: \"1px solid #d1d5db\",\n            borderRadius: \"4px\",\n            background: \"white\",\n            cursor: \"pointer\"\n          }}\n        >\n          Cancel\n        </button>\n        <button\n          onClick={() => onSave(localItem)}\n          disabled={!localItem.display_attributes.display_name || !localItem.display_attributes.order}\n          style={{ \n            padding: \"6px 12px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            background: \"#2563eb\",\n            color: \"white\",\n            cursor: \"pointer\",\n            opacity: (!localItem.display_attributes.display_name || !localItem.display_attributes.order) ? 0.5 : 1\n          }}\n        >\n          Save\n        </button>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2326, "column": 0}, "map": {"version":3,"sources":["file:///Users/arvin/WebDev/pdf-schema-builder/app/src/components/SchemaEditor.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { SchemaItem, Schema, FieldGroup } from \"@/types/schema\";\nimport SchemaItemEditor from \"./SchemaItemEditor\";\n\ninterface SchemaEditorProps {\n  schema: Schema;\n  onSchemaChange: (schema: Schema) => void;\n  fieldGroup?: FieldGroup;\n  formType: string;\n  onStartLinking?: (checkboxOptionPath: string) => void;\n  linkingMode?: { checkboxOptionPath: string } | null;\n}\n\nexport default function SchemaEditor({ schema, onSchemaChange, fieldGroup, formType, onStartLinking, linkingMode }: SchemaEditorProps) {\n  const [editingItem, setEditingItem] = useState<string | null>(null);\n  const [newItem, setNewItem] = useState<Partial<SchemaItem> | null>(null);\n\n  // Generate schema item from field group\n  const generateSchemaItem = (group: FieldGroup): SchemaItem => {\n    const firstField = group.fields[0];\n    const uniqueId = firstField.name;\n\n    const baseItem: SchemaItem = {\n      unique_id: uniqueId,\n      display_attributes: {\n        display_name: group.displayName || \"\",\n        input_type: \"text\",\n        order: schema.length + 1,\n        value: {\n          type: \"manual\"\n        }\n      }\n    };\n\n    // Generate pdf_attributes based on group type\n    if (group.groupType === \"text-continuation\") {\n      baseItem.display_attributes.input_type = \"text\";\n      baseItem.pdf_attributes = [{\n        formType,\n        formfield: firstField.name,\n        linked_form_fields_text: group.fields.slice(1).map(f => f.name)\n      }];\n    } else if (group.groupType === \"text-same-value\") {\n      baseItem.display_attributes.input_type = \"text\";\n      baseItem.pdf_attributes = group.fields.map(field => ({\n        formType,\n        formfield: field.name\n      }));\n    } else if (group.groupType === \"checkbox\") {\n      baseItem.display_attributes.input_type = \"checkbox\";\n      baseItem.display_attributes.checkbox_options = {\n        options: group.fields.map(field => ({\n          display_name: field.name,\n          databaseStored: field.name,\n          linkedFields: []\n        }))\n      };\n      baseItem.pdf_attributes = [{\n        formType,\n        formfield: firstField.name,\n        linked_form_fields_checkbox: group.fields.map(field => ({\n          fromDatabase: field.name,\n          pdfAttribute: field.name\n        }))\n      }];\n    } else if (group.groupType === \"radio\") {\n      baseItem.display_attributes.input_type = \"radio\";\n      baseItem.display_attributes.display_radio_options = group.fields.map(f => f.name);\n      baseItem.pdf_attributes = [{\n        formType,\n        formfield: group.fields.map(f => f.name),\n        linked_form_fields_radio: group.fields.map(field => ({\n          radioField: field.name,\n          displayName: field.name\n        }))\n      }];\n    }\n\n    return baseItem;\n  };\n\n  // Add new schema item from field group\n  React.useEffect(() => {\n    if (fieldGroup) {\n      const newSchemaItem = generateSchemaItem(fieldGroup);\n      setNewItem(newSchemaItem);\n      setEditingItem(newSchemaItem.unique_id);\n    }\n  }, [fieldGroup]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleSaveItem = (item: SchemaItem) => {\n    if (newItem && item.unique_id === newItem.unique_id) {\n      // Adding new item\n      onSchemaChange([...schema, item]);\n      setNewItem(null);\n    } else {\n      // Updating existing item\n      onSchemaChange(schema.map(s => s.unique_id === item.unique_id ? item : s));\n    }\n    setEditingItem(null);\n  };\n\n  const handleDeleteItem = (uniqueId: string) => {\n    onSchemaChange(schema.filter(s => s.unique_id !== uniqueId));\n  };\n\n  return (\n    <div style={{ height: \"100%\", overflow: \"auto\", padding: \"20px\" }}>\n      <h2>Schema Editor</h2>\n      \n      {newItem && editingItem === newItem.unique_id && (\n        <div>\n          <h3>New Schema Item</h3>\n          <SchemaItemEditor\n            item={newItem as SchemaItem}\n            onSave={handleSaveItem}\n            onCancel={() => setEditingItem(null)}\n            onStartLinking={onStartLinking}\n            linkingMode={linkingMode}\n          />\n        </div>\n      )}\n\n      {schema.map((item) => (\n        <div key={item.unique_id} style={{ \n          border: \"1px solid #d1d5db\", \n          borderRadius: \"8px\", \n          padding: \"12px\",\n          marginBottom: \"12px\"\n        }}>\n          {editingItem === item.unique_id ? (\n            <SchemaItemEditor\n              item={item}\n              onSave={handleSaveItem}\n              onCancel={() => setEditingItem(null)}\n              onStartLinking={onStartLinking}\n              linkingMode={linkingMode}\n            />\n          ) : (\n            <>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                <div>\n                  <strong>{item.display_attributes.display_name || item.unique_id}</strong>\n                  <div style={{ fontSize: \"14px\", color: \"#6b7280\" }}>\n                    Type: {item.display_attributes.input_type} | Order: {item.display_attributes.order}\n                  </div>\n                </div>\n                <div style={{ display: \"flex\", gap: \"8px\" }}>\n                  <button\n                    onClick={() => setEditingItem(item.unique_id)}\n                    style={{ \n                      padding: \"4px 8px\",\n                      border: \"1px solid #d1d5db\",\n                      borderRadius: \"4px\",\n                      background: \"white\",\n                      cursor: \"pointer\",\n                      fontSize: \"14px\"\n                    }}\n                  >\n                    Edit\n                  </button>\n                  <button\n                    onClick={() => handleDeleteItem(item.unique_id)}\n                    style={{ \n                      padding: \"4px 8px\",\n                      border: \"1px solid #ef4444\",\n                      borderRadius: \"4px\",\n                      background: \"#fee2e2\",\n                      color: \"#dc2626\",\n                      cursor: \"pointer\",\n                      fontSize: \"14px\"\n                    }}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      ))}\n\n      {schema.length === 0 && !newItem && (\n        <div style={{ \n          textAlign: \"center\", \n          padding: \"40px\",\n          color: \"#6b7280\"\n        }}>\n          Select fields from the PDF to create schema items.\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2622, "column": 0}, "map": {"version":3,"sources":["file:///Users/arvin/WebDev/pdf-schema-builder/app/src/components/SchemaExport.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { Schema } from \"@/types/schema\";\n\ninterface SchemaExportProps {\n  schema: Schema;\n  formType: string;\n}\n\nexport default function SchemaExport({ schema, formType }: SchemaExportProps) {\n  const generateTypeScript = (): string => {\n    const schemaName = formType.replace(/[^a-zA-Z0-9]/g, \"_\");\n    \n    const schemaString = JSON.stringify(schema, (key, value) => {\n      // Handle function serialization for attribute operations\n      if (key === \"operation\" || key === \"reverseOperation\") {\n        return undefined; // Skip functions in JSON\n      }\n      return value;\n    }, 2);\n\n    return `import { Schema, SchemaItem } from '@/types/schema';\n\nexport const ${schemaName}_schema: Schema = ${schemaString};\n\nexport default ${schemaName}_schema;`;\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(generateTypeScript());\n    alert(\"Schema copied to clipboard!\");\n  };\n\n  const downloadFile = () => {\n    const blob = new Blob([generateTypeScript()], { type: \"text/typescript\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `${formType}_schema.ts`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const downloadJSON = () => {\n    const blob = new Blob([JSON.stringify(schema, null, 2)], { type: \"application/json\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `${formType}_schema.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n      <div style={{ \n        padding: \"10px\", \n        borderBottom: \"1px solid #e5e7eb\",\n        display: \"flex\",\n        gap: \"10px\",\n        alignItems: \"center\"\n      }}>\n        <h3 style={{ margin: 0, flex: 1 }}>TypeScript Schema Export</h3>\n        <button\n          onClick={copyToClipboard}\n          style={{ \n            padding: \"6px 12px\",\n            border: \"1px solid #d1d5db\",\n            borderRadius: \"4px\",\n            background: \"white\",\n            cursor: \"pointer\"\n          }}\n        >\n          Copy to Clipboard\n        </button>\n        <button\n          onClick={downloadFile}\n          style={{ \n            padding: \"6px 12px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            background: \"#2563eb\",\n            color: \"white\",\n            cursor: \"pointer\"\n          }}\n        >\n          Download .ts\n        </button>\n        <button\n          onClick={downloadJSON}\n          style={{ \n            padding: \"6px 12px\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            background: \"#10b981\",\n            color: \"white\",\n            cursor: \"pointer\"\n          }}\n        >\n          Download .json\n        </button>\n      </div>\n      \n      <pre style={{ \n        flex: 1,\n        margin: 0,\n        padding: \"20px\",\n        background: \"#1e293b\",\n        color: \"#e2e8f0\",\n        overflow: \"auto\",\n        fontSize: \"14px\",\n        lineHeight: \"1.5\"\n      }}>\n        <code>{generateTypeScript()}</code>\n      </pre>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;;AAUe,SAAS,aAAa,KAAuC;QAAvC,EAAE,MAAM,EAAE,QAAQ,EAAqB,GAAvC;IACnC,MAAM,qBAAqB;QACzB,MAAM,aAAa,SAAS,OAAO,CAAC,iBAAiB;QAErD,MAAM,eAAe,KAAK,SAAS,CAAC,QAAQ,CAAC,KAAK;YAChD,yDAAyD;YACzD,IAAI,QAAQ,eAAe,QAAQ,oBAAoB;gBACrD,OAAO,WAAW,yBAAyB;YAC7C;YACA,OAAO;QACT,GAAG;QAEH,OAAO,AAAC,wEAEkC,OAA/B,YAAW,sBAET,OAF6B,cAAa,wBAE/B,OAAX,YAAW;IAC1B;IAEA,MAAM,kBAAkB;QACtB,UAAU,SAAS,CAAC,SAAS,CAAC;QAC9B,MAAM;IACR;IAEA,MAAM,eAAe;QACnB,MAAM,OAAO,IAAI,KAAK;YAAC;SAAqB,EAAE;YAAE,MAAM;QAAkB;QACxE,MAAM,MAAM,IAAI,eAAe,CAAC;QAChC,MAAM,IAAI,SAAS,aAAa,CAAC;QACjC,EAAE,IAAI,GAAG;QACT,EAAE,QAAQ,GAAG,AAAC,GAAW,OAAT,UAAS;QACzB,EAAE,KAAK;QACP,IAAI,eAAe,CAAC;IACtB;IAEA,MAAM,eAAe;QACnB,MAAM,OAAO,IAAI,KAAK;YAAC,KAAK,SAAS,CAAC,QAAQ,MAAM;SAAG,EAAE;YAAE,MAAM;QAAmB;QACpF,MAAM,MAAM,IAAI,eAAe,CAAC;QAChC,MAAM,IAAI,SAAS,aAAa,CAAC;QACjC,EAAE,IAAI,GAAG;QACT,EAAE,QAAQ,GAAG,AAAC,GAAW,OAAT,UAAS;QACzB,EAAE,KAAK;QACP,IAAI,eAAe,CAAC;IACtB;IAEA,qBACE,6LAAC;QAAI,OAAO;YAAE,QAAQ;YAAQ,SAAS;YAAQ,eAAe;QAAS;;0BACrE,6LAAC;gBAAI,OAAO;oBACV,SAAS;oBACT,cAAc;oBACd,SAAS;oBACT,KAAK;oBACL,YAAY;gBACd;;kCACE,6LAAC;wBAAG,OAAO;4BAAE,QAAQ;4BAAG,MAAM;wBAAE;kCAAG;;;;;;kCACnC,6LAAC;wBACC,SAAS;wBACT,OAAO;4BACL,SAAS;4BACT,QAAQ;4BACR,cAAc;4BACd,YAAY;4BACZ,QAAQ;wBACV;kCACD;;;;;;kCAGD,6LAAC;wBACC,SAAS;wBACT,OAAO;4BACL,SAAS;4BACT,QAAQ;4BACR,cAAc;4BACd,YAAY;4BACZ,OAAO;4BACP,QAAQ;wBACV;kCACD;;;;;;kCAGD,6LAAC;wBACC,SAAS;wBACT,OAAO;4BACL,SAAS;4BACT,QAAQ;4BACR,cAAc;4BACd,YAAY;4BACZ,OAAO;4BACP,QAAQ;wBACV;kCACD;;;;;;;;;;;;0BAKH,6LAAC;gBAAI,OAAO;oBACV,MAAM;oBACN,QAAQ;oBACR,SAAS;oBACT,YAAY;oBACZ,OAAO;oBACP,UAAU;oBACV,UAAU;oBACV,YAAY;gBACd;0BACE,cAAA,6LAAC;8BAAM;;;;;;;;;;;;;;;;;AAIf;KA5GwB","debugId":null}},
    {"offset": {"line": 2793, "column": 0}, "map": {"version":3,"sources":["file:///Users/arvin/WebDev/pdf-schema-builder/app/src/lib/schemaStorage.ts"],"sourcesContent":["import { Schema } from \"@/types/schema\";\n\nexport async function saveSchemaToIndexedDB(projectId: string, schema: Schema): Promise<void> {\n  if (typeof window === \"undefined\" || !(\"indexedDB\" in window)) {\n    throw new Error(\"IndexedDB not available\");\n  }\n\n  const db = await new Promise<IDBDatabase>((resolve, reject) => {\n    const request = indexedDB.open(\"pdf-storage\", 2); // Increment version\n    request.onupgradeneeded = () => {\n      const db = request.result;\n      if (!db.objectStoreNames.contains(\"pdfs\")) {\n        db.createObjectStore(\"pdfs\");\n      }\n      if (!db.objectStoreNames.contains(\"schemas\")) {\n        db.createObjectStore(\"schemas\");\n      }\n    };\n    request.onsuccess = () => resolve(request.result);\n    request.onerror = () => reject(request.error);\n  });\n\n  await new Promise<void>((resolve, reject) => {\n    const tx = db.transaction(\"schemas\", \"readwrite\");\n    const store = tx.objectStore(\"schemas\");\n    const req = store.put(schema, projectId);\n    req.onsuccess = () => resolve();\n    req.onerror = () => reject(req.error);\n  });\n}\n\nexport async function loadSchemaFromIndexedDB(projectId: string): Promise<Schema | null> {\n  if (typeof window === \"undefined\" || !(\"indexedDB\" in window)) {\n    return null;\n  }\n  \n  const db = await new Promise<IDBDatabase>((resolve, reject) => {\n    const request = indexedDB.open(\"pdf-storage\", 2);\n    request.onupgradeneeded = () => {\n      const db = request.result;\n      if (!db.objectStoreNames.contains(\"pdfs\")) {\n        db.createObjectStore(\"pdfs\");\n      }\n      if (!db.objectStoreNames.contains(\"schemas\")) {\n        db.createObjectStore(\"schemas\");\n      }\n    };\n    request.onsuccess = () => resolve(request.result);\n    request.onerror = () => reject(request.error);\n  });\n\n  const schema = await new Promise<Schema | null>((resolve, reject) => {\n    const tx = db.transaction(\"schemas\", \"readonly\");\n    const store = tx.objectStore(\"schemas\");\n    const req = store.get(projectId);\n    req.onsuccess = () => resolve((req.result as Schema) || null);\n    req.onerror = () => reject(req.error);\n  });\n\n  return schema;\n}\n\nexport async function deleteSchemaFromIndexedDB(projectId: string): Promise<void> {\n  if (typeof window === \"undefined\" || !(\"indexedDB\" in window)) {\n    return;\n  }\n\n  const db = await new Promise<IDBDatabase>((resolve, reject) => {\n    const request = indexedDB.open(\"pdf-storage\", 2);\n    request.onupgradeneeded = () => {\n      const db = request.result;\n      if (!db.objectStoreNames.contains(\"pdfs\")) {\n        db.createObjectStore(\"pdfs\");\n      }\n      if (!db.objectStoreNames.contains(\"schemas\")) {\n        db.createObjectStore(\"schemas\");\n      }\n    };\n    request.onsuccess = () => resolve(request.result);\n    request.onerror = () => reject(request.error);\n  });\n\n  await new Promise<void>((resolve, reject) => {\n    const tx = db.transaction(\"schemas\", \"readwrite\");\n    const store = tx.objectStore(\"schemas\");\n    const req = store.delete(projectId);\n    req.onsuccess = () => resolve();\n    req.onerror = () => reject(req.error);\n  });\n}"],"names":[],"mappings":";;;;;AAEO,eAAe,sBAAsB,SAAiB,EAAE,MAAc;IAC3E,IAAI,aAAkB,eAAe,CAAC,CAAC,eAAe,MAAM,GAAG;QAC7D,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,KAAK,MAAM,IAAI,QAAqB,CAAC,SAAS;QAClD,MAAM,UAAU,UAAU,IAAI,CAAC,eAAe,IAAI,oBAAoB;QACtE,QAAQ,eAAe,GAAG;YACxB,MAAM,KAAK,QAAQ,MAAM;YACzB,IAAI,CAAC,GAAG,gBAAgB,CAAC,QAAQ,CAAC,SAAS;gBACzC,GAAG,iBAAiB,CAAC;YACvB;YACA,IAAI,CAAC,GAAG,gBAAgB,CAAC,QAAQ,CAAC,YAAY;gBAC5C,GAAG,iBAAiB,CAAC;YACvB;QACF;QACA,QAAQ,SAAS,GAAG,IAAM,QAAQ,QAAQ,MAAM;QAChD,QAAQ,OAAO,GAAG,IAAM,OAAO,QAAQ,KAAK;IAC9C;IAEA,MAAM,IAAI,QAAc,CAAC,SAAS;QAChC,MAAM,KAAK,GAAG,WAAW,CAAC,WAAW;QACrC,MAAM,QAAQ,GAAG,WAAW,CAAC;QAC7B,MAAM,MAAM,MAAM,GAAG,CAAC,QAAQ;QAC9B,IAAI,SAAS,GAAG,IAAM;QACtB,IAAI,OAAO,GAAG,IAAM,OAAO,IAAI,KAAK;IACtC;AACF;AAEO,eAAe,wBAAwB,SAAiB;IAC7D,IAAI,aAAkB,eAAe,CAAC,CAAC,eAAe,MAAM,GAAG;QAC7D,OAAO;IACT;IAEA,MAAM,KAAK,MAAM,IAAI,QAAqB,CAAC,SAAS;QAClD,MAAM,UAAU,UAAU,IAAI,CAAC,eAAe;QAC9C,QAAQ,eAAe,GAAG;YACxB,MAAM,KAAK,QAAQ,MAAM;YACzB,IAAI,CAAC,GAAG,gBAAgB,CAAC,QAAQ,CAAC,SAAS;gBACzC,GAAG,iBAAiB,CAAC;YACvB;YACA,IAAI,CAAC,GAAG,gBAAgB,CAAC,QAAQ,CAAC,YAAY;gBAC5C,GAAG,iBAAiB,CAAC;YACvB;QACF;QACA,QAAQ,SAAS,GAAG,IAAM,QAAQ,QAAQ,MAAM;QAChD,QAAQ,OAAO,GAAG,IAAM,OAAO,QAAQ,KAAK;IAC9C;IAEA,MAAM,SAAS,MAAM,IAAI,QAAuB,CAAC,SAAS;QACxD,MAAM,KAAK,GAAG,WAAW,CAAC,WAAW;QACrC,MAAM,QAAQ,GAAG,WAAW,CAAC;QAC7B,MAAM,MAAM,MAAM,GAAG,CAAC;QACtB,IAAI,SAAS,GAAG,IAAM,QAAQ,AAAC,IAAI,MAAM,IAAe;QACxD,IAAI,OAAO,GAAG,IAAM,OAAO,IAAI,KAAK;IACtC;IAEA,OAAO;AACT;AAEO,eAAe,0BAA0B,SAAiB;IAC/D,IAAI,aAAkB,eAAe,CAAC,CAAC,eAAe,MAAM,GAAG;QAC7D;IACF;IAEA,MAAM,KAAK,MAAM,IAAI,QAAqB,CAAC,SAAS;QAClD,MAAM,UAAU,UAAU,IAAI,CAAC,eAAe;QAC9C,QAAQ,eAAe,GAAG;YACxB,MAAM,KAAK,QAAQ,MAAM;YACzB,IAAI,CAAC,GAAG,gBAAgB,CAAC,QAAQ,CAAC,SAAS;gBACzC,GAAG,iBAAiB,CAAC;YACvB;YACA,IAAI,CAAC,GAAG,gBAAgB,CAAC,QAAQ,CAAC,YAAY;gBAC5C,GAAG,iBAAiB,CAAC;YACvB;QACF;QACA,QAAQ,SAAS,GAAG,IAAM,QAAQ,QAAQ,MAAM;QAChD,QAAQ,OAAO,GAAG,IAAM,OAAO,QAAQ,KAAK;IAC9C;IAEA,MAAM,IAAI,QAAc,CAAC,SAAS;QAChC,MAAM,KAAK,GAAG,WAAW,CAAC,WAAW;QACrC,MAAM,QAAQ,GAAG,WAAW,CAAC;QAC7B,MAAM,MAAM,MAAM,MAAM,CAAC;QACzB,IAAI,SAAS,GAAG,IAAM;QACtB,IAAI,OAAO,GAAG,IAAM,OAAO,IAAI,KAAK;IACtC;AACF","debugId":null}},
    {"offset": {"line": 2886, "column": 0}, "map": {"version":3,"sources":["file:///Users/arvin/WebDev/pdf-schema-builder/app/src/app/%5BprojectId%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useParams } from \"next/navigation\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { persistPdf, tryLoadPdf } from \"@/lib/pdfStorage\";\nimport { useProjectsStore } from \"@/stores/projects\";\nimport PdfViewer from \"@/components/PdfViewer\";\nimport { PDFField, Schema, FieldGroup } from \"@/types/schema\";\nimport FieldGrouping from \"@/components/FieldGrouping\";\nimport SchemaEditor from \"@/components/SchemaEditor\";\nimport SchemaExport from \"@/components/SchemaExport\";\nimport { saveSchemaToIndexedDB, loadSchemaFromIndexedDB } from \"@/lib/schemaStorage\";\n\nconst MAX_BYTES = 20_971_520; // 20 MB\nfunction humanSize(bytes: number): string {\n  const units = [\"B\", \"KB\", \"MB\", \"GB\"];\n  let i = 0;\n  while (bytes >= 1024 && i < units.length - 1) {\n    bytes /= 1024;\n    i++;\n  }\n  return `${bytes.toFixed(2)} ${units[i]}`;\n}\n\nexport default function ProjectPage() {\n  const params = useParams();\n  const projectId = useMemo(() => String(params?.projectId ?? params?.projectid ?? \"unknown\"), [params]);\n  \n  // Get project from store to get formType\n  const projects = useProjectsStore((s) => s.projects);\n  const project = projects.find(p => p.id === projectId);\n  const formType = project?.formType || \"default\";\n\n  const [pdfData, setPdfData] = useState<ArrayBuffer | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [status, setStatus] = useState<string | null>(null);\n  const [fileName, setFileName] = useState<string | null>(null); // eslint-disable-line @typescript-eslint/no-unused-vars\n  \n  // Schema builder state\n  const [schema, setSchema] = useState<Schema>([]);\n  const [selectedFields, setSelectedFields] = useState<Set<string>>(new Set());\n  const [extractedFields, setExtractedFields] = useState<PDFField[]>([]);\n  const [showGrouping, setShowGrouping] = useState(false);\n  const [currentFieldGroup, setCurrentFieldGroup] = useState<FieldGroup | undefined>();\n  const [activeTab, setActiveTab] = useState<\"editor\" | \"typescript\">(\"editor\");\n  const [linkingMode, setLinkingMode] = useState<{ checkboxOptionPath: string } | null>(null);\n\n  // Load PDF and schema on mount\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      const loaded = await tryLoadPdf(projectId);\n      if (mounted && loaded) {\n        setPdfData(loaded);\n        setStatus(\"Loaded PDF from storage\");\n      }\n      \n      const loadedSchema = await loadSchemaFromIndexedDB(projectId);\n      if (mounted && loadedSchema) {\n        setSchema(loadedSchema);\n      }\n    })();\n    return () => { mounted = false; };\n  }, [projectId]);\n\n  // Save schema whenever it changes\n  useEffect(() => {\n    if (schema.length > 0) {\n      saveSchemaToIndexedDB(projectId, schema).catch(console.error);\n    }\n  }, [schema, projectId]);\n\n  const onFiles = useCallback(async (files: FileList | File[]) => {\n    setError(null);\n    setStatus(null);\n    const file = files && files[0];\n    if (!file) return;\n\n    if (file.type !== \"application/pdf\") {\n      setError(\"Please upload a PDF file.\");\n      return;\n    }\n    if (file.size > MAX_BYTES) {\n      setError(`File too large. Max size is 20 MB. Selected: ${humanSize(file.size)}`);\n      return;\n    }\n\n    try {\n      setFileName(file.name);\n      const arrayBuffer = await file.arrayBuffer();\n      setPdfData(arrayBuffer);\n      const where = await persistPdf(projectId, arrayBuffer);\n      setStatus(`Saved to ${where}`);\n    } catch (e) {\n      console.error(e);\n      setError((e as Error)?.message || \"Failed to read/save file.\");\n    }\n  }, [projectId]);\n\n  const onDrop = useCallback((e: React.DragEvent) => { // eslint-disable-line @typescript-eslint/no-unused-vars\n    e.preventDefault();\n    e.stopPropagation();\n    const dt = e.dataTransfer;\n    if (dt?.files?.length) {\n      void onFiles(dt.files);\n    }\n  }, [onFiles]);\n\n  const onDragOver = useCallback((e: React.DragEvent) => { // eslint-disable-line @typescript-eslint/no-unused-vars\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n\n  const onInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) void onFiles(e.target.files);\n  }, [onFiles]);\n\n  const handleFieldClick = (field: PDFField) => {\n    // If in linking mode, handle linking instead of selection\n    if (linkingMode) {\n      // Find the schema item that contains this field\n      const linkedSchemaItem = schema.find(item => \n        item.pdf_attributes?.some(attr => \n          attr.formfield === field.name ||\n          (Array.isArray(attr.formfield) && attr.formfield.includes(field.name)) ||\n          attr.linked_form_fields_text?.includes(field.name)\n        )\n      );\n      \n      if (linkedSchemaItem) {\n        // Add the linked field to the checkbox option\n        const [schemaId, optionIndex] = linkingMode.checkboxOptionPath.split('.');\n        const updatedSchema = schema.map(item => {\n          if (item.unique_id === schemaId && item.display_attributes.checkbox_options) {\n            const options = [...item.display_attributes.checkbox_options.options];\n            if (options[parseInt(optionIndex)]) {\n              if (!options[parseInt(optionIndex)].linkedFields) {\n                options[parseInt(optionIndex)].linkedFields = [];\n              }\n              if (!options[parseInt(optionIndex)].linkedFields!.includes(linkedSchemaItem.unique_id)) {\n                options[parseInt(optionIndex)].linkedFields!.push(linkedSchemaItem.unique_id);\n              }\n            }\n            return {\n              ...item,\n              display_attributes: {\n                ...item.display_attributes,\n                checkbox_options: {\n                  ...item.display_attributes.checkbox_options,\n                  options\n                }\n              }\n            };\n          }\n          return item;\n        });\n        setSchema(updatedSchema);\n        setLinkingMode(null);\n        alert(`Linked to ${linkedSchemaItem.display_attributes.display_name || linkedSchemaItem.unique_id}`);\n      } else {\n        alert('This field is not part of any schema group yet. Please create a group first.');\n      }\n      return;\n    }\n    \n    // Normal selection mode\n    const newSelected = new Set(selectedFields);\n    if (newSelected.has(field.name)) {\n      newSelected.delete(field.name);\n    } else {\n      newSelected.add(field.name);\n    }\n    setSelectedFields(newSelected);\n  };\n\n  const handleCreateGroup = () => {\n    setShowGrouping(true);\n  };\n\n  const handleGroupCreated = (group: FieldGroup) => {\n    setCurrentFieldGroup(group);\n    setShowGrouping(false);\n    setSelectedFields(new Set());\n  };\n\n  // Get all fields that are already grouped\n  const getGroupedFields = (): Set<string> => {\n    const grouped = new Set<string>();\n    schema.forEach(item => {\n      item.pdf_attributes?.forEach(attr => {\n        if (typeof attr.formfield === 'string') {\n          grouped.add(attr.formfield);\n        } else if (Array.isArray(attr.formfield)) {\n          attr.formfield.forEach(f => grouped.add(f));\n        }\n        attr.linked_form_fields_text?.forEach(f => grouped.add(f));\n        attr.linked_form_fields_checkbox?.forEach(f => grouped.add(f.pdfAttribute));\n        attr.linked_form_fields_radio?.forEach(f => grouped.add(f.radioField));\n      });\n    });\n    return grouped;\n  };\n\n  // No PDF uploaded yet\n  if (!pdfData) {\n    return (\n      <div\n        style={{\n          height: \"100vh\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <div\n          style={{\n            maxWidth: 500,\n            width: \"100%\",\n            padding: 24,\n            borderRadius: 8,\n            border: \"2px dashed #d1d5db\",\n            textAlign: \"center\",\n            background: \"#fafafa\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => {\n            const input = document.getElementById(\"pdf-input\") as HTMLInputElement | null;\n            input?.click();\n          }}\n          role=\"button\"\n          aria-label=\"Upload PDF\"\n        >\n          <p style={{ marginBottom: 8 }}>Drag and drop a PDF here, or click to select</p>\n          <input\n            id=\"pdf-input\"\n            type=\"file\"\n            accept=\"application/pdf\"\n            style={{ display: \"none\" }}\n            onChange={onInputChange}\n          />\n          <p style={{ fontSize: 12, color: \"#666\" }}>Max size: 20 MB</p>\n        </div>\n\n        {error && (\n          <div style={{ color: \"#b00020\", marginTop: 12 }}>{error}</div>\n        )}\n        {status && (\n          <div style={{ color: \"#0a7\", marginTop: 12 }}>{status}</div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ height: \"100vh\", display: \"flex\", flexDirection: \"column\" }}>\n      <div style={{ \n        padding: \"10px 20px\", \n        borderBottom: \"1px solid #e5e7eb\",\n        background: \"#f9fafb\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      }}>\n        <h1 style={{ margin: 0, fontSize: \"20px\" }}>\n          Project: {project?.name || projectId} ({formType})\n        </h1>\n        <div style={{ display: \"flex\", gap: \"10px\" }}>\n          {selectedFields.size > 0 && (\n            <button\n              onClick={handleCreateGroup}\n              style={{\n                padding: \"8px 16px\",\n                background: \"#2563eb\",\n                color: \"white\",\n                border: \"none\",\n                borderRadius: \"6px\",\n                cursor: \"pointer\"\n              }}\n            >\n              Create Group ({selectedFields.size} fields selected)\n            </button>\n          )}\n          <button\n            onClick={() => setSelectedFields(new Set())}\n            style={{\n              padding: \"8px 16px\",\n              background: \"white\",\n              border: \"1px solid #d1d5db\",\n              borderRadius: \"6px\",\n              cursor: \"pointer\"\n            }}\n            disabled={selectedFields.size === 0}\n          >\n            Clear Selection\n          </button>\n          {linkingMode && (\n            <button\n              onClick={() => setLinkingMode(null)}\n              style={{\n                padding: \"8px 16px\",\n                background: \"#ef4444\",\n                color: \"white\",\n                border: \"none\",\n                borderRadius: \"6px\",\n                cursor: \"pointer\"\n              }}\n            >\n              Cancel Linking Mode\n            </button>\n          )}\n        </div>\n      </div>\n\n      <div style={{ flex: 1, display: \"flex\", overflow: \"hidden\" }}>\n        {/* PDF Viewer */}\n        <div style={{ flex: 1, borderRight: \"1px solid #e5e7eb\" }}>\n          {linkingMode && (\n            <div style={{\n              padding: \"10px\",\n              background: \"#fef3c7\",\n              borderBottom: \"1px solid #fbbf24\",\n              fontSize: \"14px\"\n            }}>\n              ðŸ”— Linking Mode Active: Click on a grouped field in the PDF to link it\n            </div>\n          )}\n          <PdfViewer\n            pdfData={pdfData}\n            onFieldsExtracted={setExtractedFields}\n            selectedFields={selectedFields}\n            onFieldClick={handleFieldClick}\n            groupedFields={getGroupedFields()}\n            linkingMode={!!linkingMode}\n          />\n        </div>\n\n        {/* Schema Editor / TypeScript Export */}\n        <div style={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\n          <div style={{ \n            display: \"flex\", \n            borderBottom: \"1px solid #e5e7eb\",\n            background: \"#f9fafb\"\n          }}>\n            <button\n              onClick={() => setActiveTab(\"editor\")}\n              style={{\n                padding: \"10px 20px\",\n                background: activeTab === \"editor\" ? \"white\" : \"transparent\",\n                border: \"none\",\n                borderBottom: activeTab === \"editor\" ? \"2px solid #2563eb\" : \"none\",\n                cursor: \"pointer\",\n                fontWeight: activeTab === \"editor\" ? \"bold\" : \"normal\"\n              }}\n            >\n              Schema Editor\n            </button>\n            <button\n              onClick={() => setActiveTab(\"typescript\")}\n              style={{\n                padding: \"10px 20px\",\n                background: activeTab === \"typescript\" ? \"white\" : \"transparent\",\n                border: \"none\",\n                borderBottom: activeTab === \"typescript\" ? \"2px solid #2563eb\" : \"none\",\n                cursor: \"pointer\",\n                fontWeight: activeTab === \"typescript\" ? \"bold\" : \"normal\"\n              }}\n            >\n              TypeScript Export\n            </button>\n          </div>\n\n          <div style={{ flex: 1, overflow: \"auto\" }}>\n            {activeTab === \"editor\" ? (\n              <SchemaEditor\n                schema={schema}\n                onSchemaChange={setSchema}\n                fieldGroup={currentFieldGroup}\n                formType={formType}\n                onStartLinking={(checkboxOptionPath: string) => setLinkingMode({ checkboxOptionPath })}\n                linkingMode={linkingMode}\n              />\n            ) : (\n              <SchemaExport schema={schema} formType={formType} />\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Field Grouping Dialog */}\n      {showGrouping && (\n        <FieldGrouping\n          selectedFields={extractedFields.filter(f => selectedFields.has(f.name))}\n          onCreateGroup={handleGroupCreated}\n          onCancel={() => setShowGrouping(false)}\n        />\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}